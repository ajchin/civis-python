{"swagger": "2.0", "info": {"title": "Civis Analytics API", "version": "1"}, "host": "api.civisanalytics.com", "schemes": ["https"], "produces": ["application/json"], "paths": {"/credentials/": {"get": {"summary": "List credentials", "parameters": [{"name": "type", "in": "query", "required": false, "description": "The type (or types) of credentials to return. One or more of: Amazon Web Services S3, BSD::API, CASS/NCOA PAF, Catalist::API, Catalist::SFTP, Certificate, Civis Platform, Custom, Database, Google, Github, JobTraits::Ftp, Salesforce User, Salesforce Client, Silverpop Application, Silverpop Refresh Token, Silverpop User, TableauUser, VAN::MyVoterFile, VAN::MyCampaign, and VAN::BothModes. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "type": "string"}, {"name": "default", "in": "query", "required": false, "description": "If true, will return a list with a single credential which is the current user's default credential.", "type": "boolean"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, created_at, name.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object40"}}}}}, "post": {"summary": "Create or update a credential", "parameters": [{"name": "Object41", "in": "body", "schema": {"$ref": "#/definitions/Object41"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object40"}}}}}, "/credentials/{id}": {"put": {"summary": "Update an existing credential", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the credential.", "type": "integer"}, {"name": "Object43", "in": "body", "schema": {"$ref": "#/definitions/Object43"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object40"}}}}, "get": {"summary": "Get a credential", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the credential.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object40"}}}}}, "/credentials/authenticate": {"post": {"summary": "Authenticate against a remote host", "parameters": [{"name": "Object44", "in": "body", "schema": {"$ref": "#/definitions/Object44"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object40"}}}}}, "/credentials/{id}/temporary": {"post": {"summary": "Generate a temporary credential for accessing S3", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the credential.", "type": "integer"}, {"name": "Object45", "in": "body", "schema": {"$ref": "#/definitions/Object45"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object46"}}}}}, "/databases/": {"get": {"summary": "List databases", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object47"}}}}}}, "/databases/{id}/schemas": {"get": {"summary": "List schemas in this database", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object48"}}}}}}, "/databases/{id}/tables": {"get": {"summary": "List tables in the specified database, deprecated use \"GET /tables\" instead", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database.", "type": "integer"}, {"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported (e.g., \"name=table\" will return both \"table1\" and \"my table\").", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 200. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object49"}}}}}}, "/databases/{id}/tables-search": {"get": {"summary": "List tables in the specified database, deprecated use \"GET /tables\" instead", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database.", "type": "integer"}, {"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported (e.g., \"name=table\" will return both \"table1\" and \"my table\").", "type": "string"}, {"name": "column_name", "in": "query", "required": false, "description": "Search for tables containing a column with the given name.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object50"}}}}}}, "/databases/{id}/whitelist-ips": {"get": {"summary": "List whitelisted IPs for the specified database", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the database.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object51"}}}}}, "post": {"summary": "Whitelist an IP address", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database this rule is applied to.", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object52"}}}}}, "/databases/{id}/whitelist-ips/{whitelisted_ip_id}": {"get": {"summary": "View details about a whitelisted IP", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database this rule is applied to.", "type": "integer"}, {"name": "whitelisted_ip_id", "in": "path", "required": true, "description": "The ID of this whitelisted IP address.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object52"}}}}, "delete": {"summary": "Remove a whitelisted IP address", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database this rule is applied to.", "type": "integer"}, {"name": "whitelisted_ip_id", "in": "path", "required": true, "description": "The ID of this whitelisted IP address.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/files/{id}/projects": {"get": {"summary": "List the projects a Data::S3File belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/files/{id}/projects/{project_id}": {"put": {"summary": "Add a Data::S3File to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Data::S3File from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/files/": {"post": {"summary": "Initiate an upload of a file into the platform", "parameters": [{"name": "Object59", "in": "body", "schema": {"$ref": "#/definitions/Object59"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object60"}}}}}, "/files/{id}": {"get": {"summary": "Get details about a file", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the file object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object61"}}}}}, "/files/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/files/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/files/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/files/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/files/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/imports/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/imports/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/imports/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/projects": {"get": {"summary": "List the projects a JobTypes::Import belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/imports/{id}/projects/{project_id}": {"put": {"summary": "Add a JobTypes::Import to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a JobTypes::Import from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object65", "in": "body", "schema": {"$ref": "#/definitions/Object65"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object66"}}}}}, "/imports/": {"get": {"summary": "List imports", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return imports of these types. It accepts a comma-separated list, possible values are 'AutoImport', 'DbSync', 'Salesforce', 'GdocImport'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return imports from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "destination", "in": "query", "required": false, "description": "If specified, returns imports with one of these destinations. It accepts a comma-separated list of remote host ids.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns imports with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object74"}}}}}, "post": {"summary": "Create a new import configuration", "parameters": [{"name": "Object75", "in": "body", "schema": {"$ref": "#/definitions/Object75"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object66"}}}}}, "/imports/files": {"post": {"summary": "Initate an import of a tabular file into the platform", "parameters": [{"name": "Object79", "in": "body", "schema": {"$ref": "#/definitions/Object79"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object80"}}}}}, "/imports/files/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object81"}}}}, "get": {"summary": "List runs for the given import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object81"}}}}}}, "/imports/files/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object81"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/imports/batches": {"get": {"summary": "List batch imports", "parameters": [{"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}, "post": {"summary": "Upload multiple files to Redshift", "parameters": [{"name": "Object84", "in": "body", "schema": {"$ref": "#/definitions/Object84"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object83"}}}}}, "/imports/batches/{id}": {"get": {"summary": "Get details about a batch import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the import.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object83"}}}}}, "/imports/{id}": {"get": {"summary": "Get details about an import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the import.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object85"}}}}, "put": {"summary": "Update an import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the import.", "type": "integer"}, {"name": "Object86", "in": "body", "schema": {"$ref": "#/definitions/Object86"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object66"}}}}}, "/imports/{id}/runs": {"get": {"summary": "Get the run history of this import", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object32"}}}}}, "post": {"summary": "Run an import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to run.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object87"}}}}}, "/imports/{id}/cancel": {"post": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the job.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object88"}}}}}, "/imports/{id}/syncs": {"post": {"summary": "Create a sync", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object89", "in": "body", "schema": {"$ref": "#/definitions/Object89"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object70"}}}}}, "/imports/{id}/syncs/{sync_id}": {"put": {"summary": "Update a sync", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to fetch.", "type": "integer"}, {"name": "sync_id", "in": "path", "required": true, "description": "The ID of the sync to fetch.", "type": "integer"}, {"name": "Object93", "in": "body", "schema": {"$ref": "#/definitions/Object93"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object70"}}}}, "delete": {"summary": "Delete a sync", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to fetch.", "type": "integer"}, {"name": "sync_id", "in": "path", "required": true, "description": "The ID of the sync to fetch.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/jobs/": {"get": {"summary": "List jobs", "parameters": [{"name": "limit", "in": "query", "required": false, "description": "The maximum number of jobs to return.", "type": "integer"}, {"name": "state", "in": "query", "required": false, "description": "The job's state. One or more of queued, running, succeeded, failed, and cancelled. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "type": "string"}, {"name": "type", "in": "query", "required": false, "description": "The job's type. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "type": "string"}, {"name": "q", "in": "query", "required": false, "description": "Query string to search on the id, name, and job type", "type": "string"}, {"name": "permission", "in": "query", "required": false, "description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only jobs for which the current user has that permission.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object94"}}}}}}, "/jobs/{id}": {"get": {"summary": "Show basic job info", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object95"}}}}}, "/jobs/{id}/trigger_email": {"post": {"summary": "Generate and retrieve trigger email address", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object96"}}}}}, "/jobs/{id}/parents": {"get": {"summary": "Show chain of parents as a list that this job triggers from", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object95"}}}}}, "/jobs/{id}/children": {"get": {"summary": "Show nested tree of children that this job triggers", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object97"}}}}}, "/jobs/{id}/runs": {"post": {"summary": "Run a job", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object32"}}}}}, "/jobs/{id}/runs/{run_id}": {"get": {"summary": "Check status of a job", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the Job.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the Run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object32"}}}}}, "/jobs/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/jobs/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/jobs/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/jobs/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/projects": {"get": {"summary": "List the projects a Job belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/jobs/{id}/projects/{project_id}": {"put": {"summary": "Add a Job to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Job from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/types": {"get": {"summary": "List all available model types", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object99"}}}}}}, "/models/": {"post": {"summary": "Create new configuration for a model", "parameters": [{"name": "Object100", "in": "body", "schema": {"$ref": "#/definitions/Object100"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object101"}}}}, "get": {"summary": "List models", "parameters": [{"name": "model_name", "in": "query", "required": false, "description": "If specified, will be used to filter the models returned. Substring matching is supported. (e.g., \"modelName=model\" will return both \"model1\" and \"my model\").", "type": "string"}, {"name": "training_table_name", "in": "query", "required": false, "description": "If specified, will be used to filter the models returned by the training dataset table name. Substring matching is supported. (e.g., \"trainingTableName=table\" will return both \"table1\" and \"my_table\").", "type": "string"}, {"name": "dependent_variable", "in": "query", "required": false, "description": "If specified, will be used to filter the models returned by the dependent variable column name. Substring matching is supported. (e.g., \"dependentVariable=predictor\" will return both \"predictor\" and \"my predictor\").", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return models from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns models with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, model_name, created_at, name, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object104"}}}}}}, "/models/{id}": {"patch": {"summary": "Update model configuration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "Object106", "in": "body", "schema": {"$ref": "#/definitions/Object106"}, "required": false}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Retrieve model configuration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object101"}}}}}, "/models/{id}/builds": {"post": {"summary": "Start a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object107"}}}}, "get": {"summary": "List builds for the given model", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object107"}}}}}}, "/models/{id}/builds/{build_id}": {"get": {"summary": "Check status of a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "build_id", "in": "path", "required": true, "description": "The ID of the build.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object107"}}}}, "delete": {"summary": "Cancel a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "build_id", "in": "path", "required": true, "description": "The ID of the build.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/models/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/models/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/models/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/models/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/{id}/projects": {"get": {"summary": "List the projects a models belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/models/{id}/projects/{project_id}": {"put": {"summary": "Add a models to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a models from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object108", "in": "body", "schema": {"$ref": "#/definitions/Object108"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object101"}}}}}, "/models/{id}/predictions": {"put": {"summary": "Add a table on which to apply the predictive model", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model to which to apply the prediction.", "type": "integer"}, {"name": "Object109", "in": "body", "schema": {"$ref": "#/definitions/Object109"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object103"}}}}}, "/models/{id}/schedules": {"get": {"summary": "Show the model build schedule", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model associated with this schedule.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object110"}}}}, "put": {"summary": "Schedule the model build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model associated with this schedule.", "type": "integer"}, {"name": "Object111", "in": "body", "schema": {"$ref": "#/definitions/Object111"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object110"}}}}}, "/predictions/": {"get": {"summary": "List predictions", "parameters": [{"name": "model_id", "in": "query", "required": false, "description": "If specified, only return predictions associated with this model ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object113"}}}}}}, "/predictions/{id}": {"get": {"summary": "Show the specified prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}, "patch": {"summary": "Update a prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "Object119", "in": "body", "schema": {"$ref": "#/definitions/Object119"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/predictions/{id}/schedules": {"get": {"summary": "Show the prediction schedule", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the prediction associated with this schedule.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object117"}}}}, "put": {"summary": "Schedule the prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the prediction associated with this schedule.", "type": "integer"}, {"name": "Object118", "in": "body", "schema": {"$ref": "#/definitions/Object118"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object117"}}}}}, "/predictions/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object120"}}}}, "get": {"summary": "List runs for the given prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object120"}}}}}}, "/predictions/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object120"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/projects/": {"get": {"summary": "List projects", "parameters": [{"name": "author", "in": "query", "required": false, "description": "If specified, return projects owned by this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "permission", "in": "query", "required": false, "description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only projects for which the current user has that permission.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}, "post": {"summary": "Create a project", "parameters": [{"name": "Object121", "in": "body", "schema": {"$ref": "#/definitions/Object121"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object122"}}}}}, "/projects/{project_id}": {"get": {"summary": "Get a detailed view of a project and the objects in it", "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object122"}}}}, "put": {"summary": "Update a project", "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "integer"}, {"name": "Object133", "in": "body", "schema": {"$ref": "#/definitions/Object133"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object122"}}}}, "delete": {"summary": "Archive a project (deprecated, use the /archive endpoint instead)", "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/projects/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/projects/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/projects/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/projects/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/projects/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/projects/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object134", "in": "body", "schema": {"$ref": "#/definitions/Object134"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object122"}}}}}, "/queries/": {"get": {"summary": "List all queries", "parameters": [{"name": "database_id", "in": "query", "required": false, "description": "The database ID.", "type": "integer"}, {"name": "author_id", "in": "query", "required": false, "description": "The author of the query.", "type": "integer"}, {"name": "created_before", "in": "query", "required": false, "description": "An upper bound for the creation date of the query.", "type": "string", "format": "date-time"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object135"}}}}}, "post": {"summary": "Execute a query", "parameters": [{"name": "Object137", "in": "body", "schema": {"$ref": "#/definitions/Object137"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object138"}}}}}, "/queries/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object136"}}}}, "get": {"summary": "List runs for the given query", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object136"}}}}}}, "/queries/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object136"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/queries/{id}/scripts/{script_id}": {"put": {"summary": "Update the query's associated script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The query ID.", "type": "integer"}, {"name": "script_id", "in": "path", "required": true, "description": "The ID of the script associated with this query.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object139"}}}}}, "/queries/{id}": {"get": {"summary": "Get details about a query", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The query ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object139"}}}}}, "/reports/": {"get": {"summary": "List the reports visible to the current user", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return report of these types. It accepts a comma-separated list, possible values are 'tableau', 'other'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return reports from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "template_id", "in": "query", "required": false, "description": "If specified, return reports using the provided Template.", "type": "integer"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object148"}}}}}, "post": {"summary": "Create a report", "parameters": [{"name": "Object152", "in": "body", "schema": {"$ref": "#/definitions/Object152"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}}, "/reports/{id}": {"get": {"summary": "Show a single report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}, "patch": {"summary": "Update a report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the report to modify.", "type": "integer"}, {"name": "Object153", "in": "body", "schema": {"$ref": "#/definitions/Object153"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}}, "/reports/{id}/grants": {"post": {"summary": "Grant this report the ability to perform Civis platform API operations on your behalf", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}, "delete": {"summary": "Revoke permisstion for this report to perform Civis platform API operations on your behalf", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/snapshots": {"get": {"summary": "Get details about the report's snapshot automation settings", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object154"}}}}, "post": {"summary": "Generate and optionally email a snapshot of the specified report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}, {"name": "Object155", "in": "body", "schema": {"$ref": "#/definitions/Object155"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object154"}}}}, "patch": {"summary": "Update the report's snapshot automation settings", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}, {"name": "Object155", "in": "body", "schema": {"$ref": "#/definitions/Object155"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object154"}}}}}, "/reports/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/reports/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/reports/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/reports/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/projects": {"get": {"summary": "List the projects a Report belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/reports/{id}/projects/{project_id}": {"put": {"summary": "Add a Report to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Report from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object156", "in": "body", "schema": {"$ref": "#/definitions/Object156"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}}, "/scripts/types": {"get": {"summary": "List available script types", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object157"}}}}}}, "/scripts/{id}/history": {"get": {"summary": "Get the run history and outputs of this script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object158"}}}}}, "/scripts/": {"post": {"summary": "Create a script", "parameters": [{"name": "Object160", "in": "body", "schema": {"$ref": "#/definitions/Object160"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object162"}}}}, "get": {"summary": "List scripts", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return objects of these types. The valid types are 'sql', 'python3', 'r', and 'javascript'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return objects from this author. Must use user IDs. A comma separated list of IDs is also accepted to return objects from multiple authors.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns objects with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object180"}}}}}}, "/scripts/{id}": {"patch": {"summary": "Update a script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object166", "in": "body", "schema": {"$ref": "#/definitions/Object166"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object168"}}}}, "delete": {"summary": "Archive a script (deprecated, use archive endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Get details about a script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object168"}}}}}, "/scripts/{id}/run": {"post": {"summary": "Run a script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/{id}/cancel": {"post": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the job.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object169"}}}}}, "/scripts/containers": {"post": {"summary": "Create a container", "parameters": [{"name": "Object170", "in": "body", "schema": {"$ref": "#/definitions/Object170"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}}, "/scripts/containers/{id}": {"get": {"summary": "View a container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}, "put": {"summary": "Edit a container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object174", "in": "body", "schema": {"$ref": "#/definitions/Object174"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}, "patch": {"summary": "Update a container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object175", "in": "body", "schema": {"$ref": "#/definitions/Object175"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}, "delete": {"summary": "Archive a container (deprecated, use archive endpoints)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/runs/{run_id}": {"patch": {"summary": "Update a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the script run.", "type": "integer"}, {"name": "Object177", "in": "body", "schema": {"$ref": "#/definitions/Object177"}, "required": false}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object208"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/containers/{id}/runs/{run_id}/logs": {"post": {"summary": "Add log messages", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the script run.", "type": "integer"}, {"name": "Object178", "in": "body", "schema": {"$ref": "#/definitions/Object178"}, "required": false}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object207"}}}}}}, "/scripts/containers/{id}/runs/{run_id}/heartbeats": {"post": {"summary": "Indicate that the given run is being handled", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql": {"post": {"summary": "Create a SQL script", "parameters": [{"name": "Object181", "in": "body", "schema": {"$ref": "#/definitions/Object181"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object183"}}}}}, "/scripts/sql/{id}": {"get": {"summary": "Get a SQL script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object183"}}}}, "put": {"summary": "Replace all attributes of this SQL script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object185", "in": "body", "schema": {"$ref": "#/definitions/Object185"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object183"}}}}, "patch": {"summary": "Update some attributes of this SQL script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object186", "in": "body", "schema": {"$ref": "#/definitions/Object186"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object183"}}}}, "delete": {"summary": "Archive a SQL script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3": {"post": {"summary": "Create a Python Script", "parameters": [{"name": "Object187", "in": "body", "schema": {"$ref": "#/definitions/Object187"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object189"}}}}}, "/scripts/python3/{id}": {"get": {"summary": "Get a Python Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object189"}}}}, "put": {"summary": "Replace all attributes of this Python Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object191", "in": "body", "schema": {"$ref": "#/definitions/Object191"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object189"}}}}, "patch": {"summary": "Update some attributes of this Python Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object192", "in": "body", "schema": {"$ref": "#/definitions/Object192"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object189"}}}}, "delete": {"summary": "Archive a Python Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r": {"post": {"summary": "Create an R Script", "parameters": [{"name": "Object194", "in": "body", "schema": {"$ref": "#/definitions/Object194"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object195"}}}}}, "/scripts/r/{id}": {"get": {"summary": "Get an R Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object195"}}}}, "put": {"summary": "Replace all attributes of this R Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object196", "in": "body", "schema": {"$ref": "#/definitions/Object196"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object195"}}}}, "patch": {"summary": "Update some attributes of this R Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object197", "in": "body", "schema": {"$ref": "#/definitions/Object197"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object195"}}}}, "delete": {"summary": "Archive an R Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript": {"post": {"summary": "Create a JavaScript Script", "parameters": [{"name": "Object198", "in": "body", "schema": {"$ref": "#/definitions/Object198"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}}, "/scripts/javascript/{id}": {"get": {"summary": "Get a JavaScript Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}, "put": {"summary": "Replace all attributes of this JavaScript Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object200", "in": "body", "schema": {"$ref": "#/definitions/Object200"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}, "patch": {"summary": "Update some attributes of this JavaScript Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object201", "in": "body", "schema": {"$ref": "#/definitions/Object201"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}, "delete": {"summary": "Archive a JavaScript Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom": {"get": {"summary": "List Custom Scripts", "parameters": [{"name": "from_template_id", "in": "query", "required": false, "description": "The template script that this app uses.", "type": "integer"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return objects from this author. Must use user IDs. A comma separated list of IDs is also accepted to return objects from multiple authors.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns objects with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object202"}}}}}, "post": {"summary": "Create a CustomScript", "parameters": [{"name": "Object203", "in": "body", "schema": {"$ref": "#/definitions/Object203"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object204"}}}}}, "/scripts/custom/{id}": {"get": {"summary": "Get a CustomScript", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object204"}}}}, "put": {"summary": "Replace all attributes of this CustomScript", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object205", "in": "body", "schema": {"$ref": "#/definitions/Object205"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object204"}}}}, "patch": {"summary": "Update some attributes of this CustomScript", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object205", "in": "body", "schema": {"$ref": "#/definitions/Object205"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object204"}}}}, "delete": {"summary": "Archive a CustomScript (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object206"}}}}, "get": {"summary": "List runs for the given sql", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object206"}}}}}}, "/scripts/sql/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object206"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/sql/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object207"}}}}}}, "/scripts/containers/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object208"}}}}, "get": {"summary": "List runs for the given container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object208"}}}}}}, "/scripts/python3/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object209"}}}}, "get": {"summary": "List runs for the given python", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object209"}}}}}}, "/scripts/python3/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object209"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/python3/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object207"}}}}}}, "/scripts/r/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object210"}}}}, "get": {"summary": "List runs for the given r", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object210"}}}}}}, "/scripts/r/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object210"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/r/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object207"}}}}}}, "/scripts/javascript/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object211"}}}}, "get": {"summary": "List runs for the given javascript", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object211"}}}}}}, "/scripts/javascript/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object211"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/javascript/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object207"}}}}}}, "/scripts/custom/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object212"}}}}, "get": {"summary": "List runs for the given custom", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object212"}}}}}}, "/scripts/custom/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object212"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/custom/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object207"}}}}}}, "/scripts/sql/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}}, "/scripts/containers/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object214", "in": "body", "schema": {"$ref": "#/definitions/Object214"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object213"}}}}}, "/scripts/python3/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object214", "in": "body", "schema": {"$ref": "#/definitions/Object214"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object213"}}}}}, "/scripts/r/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object214", "in": "body", "schema": {"$ref": "#/definitions/Object214"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object213"}}}}}, "/scripts/javascript/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object214", "in": "body", "schema": {"$ref": "#/definitions/Object214"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object213"}}}}}, "/scripts/custom/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the output.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object214", "in": "body", "schema": {"$ref": "#/definitions/Object214"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object213"}}}}}, "/scripts/sql/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/scripts/sql/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/sql/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/sql/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/projects": {"get": {"summary": "List the projects a scripts belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/scripts/sql/{id}/projects/{project_id}": {"put": {"summary": "Add a scripts to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a scripts from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object215", "in": "body", "schema": {"$ref": "#/definitions/Object215"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object183"}}}}}, "/scripts/containers/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/scripts/containers/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/containers/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/containers/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/projects": {"get": {"summary": "List the projects a container docker belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/scripts/containers/{id}/projects/{project_id}": {"put": {"summary": "Add a container docker to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a container docker from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object216", "in": "body", "schema": {"$ref": "#/definitions/Object216"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}}, "/scripts/python3/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/scripts/python3/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/python3/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/python3/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/projects": {"get": {"summary": "List the projects a python docker belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/scripts/python3/{id}/projects/{project_id}": {"put": {"summary": "Add a python docker to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a python docker from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object217", "in": "body", "schema": {"$ref": "#/definitions/Object217"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object189"}}}}}, "/scripts/r/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/scripts/r/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/r/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/r/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/projects": {"get": {"summary": "List the projects a r docker belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/scripts/r/{id}/projects/{project_id}": {"put": {"summary": "Add a r docker to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a r docker from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object218", "in": "body", "schema": {"$ref": "#/definitions/Object218"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object195"}}}}}, "/scripts/javascript/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/scripts/javascript/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/javascript/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/javascript/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/projects": {"get": {"summary": "List the projects a scripted sql belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/scripts/javascript/{id}/projects/{project_id}": {"put": {"summary": "Add a scripted sql to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a scripted sql from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object219", "in": "body", "schema": {"$ref": "#/definitions/Object219"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}}, "/scripts/custom/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object16"}}}}}}, "/scripts/custom/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object62", "in": "body", "schema": {"$ref": "#/definitions/Object62"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/custom/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object16"}}}}}, "/scripts/custom/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/projects": {"get": {"summary": "List the projects a Job belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object26"}}}}}}, "/scripts/custom/{id}/projects/{project_id}": {"put": {"summary": "Add a Job to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Job from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object220", "in": "body", "schema": {"$ref": "#/definitions/Object220"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object204"}}}}}, "/tables/": {"post": {"summary": "Import a file into a table", "parameters": [{"name": "Object250", "in": "body", "schema": {"$ref": "#/definitions/Object250"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object251"}}}}, "get": {"summary": "List tables", "parameters": [{"name": "database_id", "in": "query", "required": false, "description": "The ID of the database.", "type": "integer"}, {"name": "schema", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"schema=%census%\" will return both \"client_census.table\" and \"census_2010.table\").", "type": "string"}, {"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"name=%table%\" will return both \"table1\" and \"my table\").", "type": "string"}, {"name": "search", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Will search across schema and name (in the full form schema.name) and will return any full name containing the search string.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to schema. Must be one of: schema, name, search.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object49"}}}}}}, "/tables/{id}/enhance": {"post": {"summary": "Run an enhancement on a table, deprecated use \"POST /tables/:source_table_id/enhancements/<enhancement-type>\" instead", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of table to enhance", "type": "integer"}, {"name": "Object252", "in": "body", "schema": {"$ref": "#/definitions/Object252"}, "required": true}], "responses": {"204": {"description": "success"}}}}, "/tables/{source_table_id}/enhancements/geocodings": {"post": {"summary": "Geocode a table", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object253"}}}}}, "/tables/{source_table_id}/enhancements/cass-ncoa": {"post": {"summary": "Standardize addresses in a table", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}, {"name": "Object254", "in": "body", "schema": {"$ref": "#/definitions/Object254"}, "required": false}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object255"}}}}}, "/tables/{source_table_id}/enhancements/prepared-matchings": {"post": {"summary": "Match person records against a dynamo table prepared by Civis", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}, {"name": "Object256", "in": "body", "schema": {"$ref": "#/definitions/Object256"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object257"}}}}}, "/tables/{source_table_id}/enhancements/table-matchings": {"post": {"summary": "Match person records against an arbitrary Redshift table", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}, {"name": "Object258", "in": "body", "schema": {"$ref": "#/definitions/Object258"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}}, "/tables/{source_table_id}/enhancements/geocodings/{id}": {"get": {"summary": "View the status of a geocoding table enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object253"}}}}}, "/tables/{source_table_id}/enhancements/cass-ncoa/{id}": {"get": {"summary": "View the status of a CASS / NCOA table enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object255"}}}}}, "/tables/{source_table_id}/enhancements/prepared-matchings/{id}": {"get": {"summary": "View a prepared matching enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object257"}}}}}, "/tables/{source_table_id}/enhancements/table-matchings/{id}": {"get": {"summary": "View a table matching enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}}, "/tables/{id}/refresh": {"post": {"summary": "Request a refresh for column and table statistics", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object260"}}}}}, "/tables/{id}": {"get": {"summary": "Show basic table info", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object260"}}}}, "patch": {"summary": "Update a table", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the table.", "type": "integer"}, {"name": "Object268", "in": "body", "schema": {"$ref": "#/definitions/Object268"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object269"}}}}}, "/tables/{id}/columns": {"get": {"summary": "List columns in the specified table", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "name", "in": "query", "required": false, "description": "Search for columns with the given name, within the specified table.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, order.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object261"}}}}}}, "/users/": {"get": {"summary": "List users", "parameters": [{"name": "feature_flag", "in": "query", "required": false, "description": "Return users that have a feature flag enabled.", "type": "string"}, {"name": "account_status", "in": "query", "required": false, "description": "The account status by which to filter users. May be one of \"active\", \"inactive\", or \"all\".", "type": "string"}, {"name": "query", "in": "query", "required": false, "description": "Return users who match the given query, based on name, user, and email.", "type": "string"}, {"name": "group_id", "in": "query", "required": false, "description": "The ID of the group by which to filter users. Cannot be present if organization_id is.", "type": "integer"}, {"name": "organization_id", "in": "query", "required": false, "description": "The ID of the organization by which to filter users. Cannot be present if group_id is.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 10000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, user.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object281"}}}}}}, "/users/me": {"get": {"summary": "Show info about the logged-in user", "parameters": [], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object283"}}}}, "patch": {"summary": "Update info about the logged-in user", "parameters": [{"name": "Object291", "in": "body", "schema": {"$ref": "#/definitions/Object291"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object283"}}}}}, "/users/{id}": {"get": {"summary": "Show info about a user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this user.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object284"}}}}}, "/users/{id}/api_keys": {"get": {"summary": "Show API keys belonging to the specified user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object285"}}}}}, "post": {"summary": "Create a new API key belonging to the logged-in user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "Object286", "in": "body", "schema": {"$ref": "#/definitions/Object286"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object288"}}}}}, "/users/{id}/api_keys/{key_id}": {"get": {"summary": "Show the specified API key", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "key_id", "in": "path", "required": true, "description": "The ID of the API key.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object290"}}}}, "delete": {"summary": "Revoke the specified API key", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "key_id", "in": "path", "required": true, "description": "The ID of the API key.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object290"}}}}}}, "definitions": {"Object8": {"type": "object", "properties": {"id": {"description": "The unique id of the release.", "type": "integer"}, "appId": {"description": "The id of the app the release belongs to.", "type": "integer"}, "reportTemplateId": {"description": "ID of the report template for this release.", "type": "integer"}, "actions": {"description": "Name/template ID pairs.", "type": "object"}}}, "Object10": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "name": {"description": "This user's name.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "initials": {"description": "This user's initials.", "type": "string"}, "online": {"description": "Whether this user is online.", "type": "boolean"}}}, "Object18": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object19": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object17": {"type": "object", "properties": {"users": {"type": "array", "items": {"$ref": "#/definitions/Object18"}}, "groups": {"type": "array", "items": {"$ref": "#/definitions/Object19"}}}}, "Object16": {"type": "object", "properties": {"readers": {"$ref": "#/definitions/Object17"}, "writers": {"$ref": "#/definitions/Object17"}, "owners": {"$ref": "#/definitions/Object17"}, "totalUserShares": {"description": "For owners, the number of total users shared. For writers and readers, the number of visible users shared.", "type": "integer"}, "totalGroupShares": {"description": "For owners, the number of total groups shared. For writers and readers, the number of visible groups shared.", "type": "integer"}}}, "Object26": {"type": "object", "properties": {"id": {"description": "The ID for this project.", "type": "integer"}, "author": {"description": "The author of the project.", "$ref": "#/definitions/Object10"}, "name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "users": {"description": "Users who can see the project", "type": "array", "items": {"$ref": "#/definitions/Object10"}}, "autoShare": {"type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object32": {"type": "object", "properties": {"id": {"type": "integer"}, "state": {"type": "string"}, "createdAt": {"description": "The time that the run was queued.", "type": "string", "format": "time"}, "startedAt": {"description": "The time that the run started.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time that the run completed.", "type": "string", "format": "time"}, "error": {"description": "The error message for this run, if present.", "type": "string"}}}, "Object40": {"type": "object", "properties": {"id": {"description": "The ID of the credential.", "type": "integer"}, "name": {"description": "The name identifying the credential", "type": "string"}, "type": {"description": "The credential's type.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "description": {"description": "A long description of the credential.", "type": "string"}, "owner": {"description": "The name of the user who this credential belongs to.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with this credential.", "type": "integer"}, "remoteHostName": {"description": "The name of the remote host associated with this credential.", "type": "string"}, "createdAt": {"description": "The creation time for this credential.", "type": "string", "format": "time"}, "updatedAt": {"description": "The last modification time for this credential.", "type": "string", "format": "time"}}}, "Object42": {"type": "object", "properties": {"name": {"description": "The human readable name for the remote host.", "type": "string"}, "url": {"description": "The URL to your host.", "type": "string"}, "type": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}}, "required": ["name", "url", "type"]}, "Object41": {"type": "object", "properties": {"name": {"description": "The name identifying the credential.", "type": "string"}, "type": {"type": "string"}, "description": {"description": "A long description of the credential.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with the credential.", "type": "integer"}, "remoteHost": {"description": "The remote host associated with the credential.", "$ref": "#/definitions/Object42"}}, "required": ["type", "username", "password"]}, "Object43": {"type": "object", "properties": {"name": {"description": "The name identifying the credential.", "type": "string"}, "type": {"type": "string"}, "description": {"description": "A long description of the credential.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with the credential.", "type": "integer"}, "remoteHost": {"description": "The remote host associated with the credential.", "$ref": "#/definitions/Object42"}}, "required": ["type", "username", "password"]}, "Object44": {"type": "object", "properties": {"url": {"description": "The URL to your host.", "type": "string"}, "remoteHostType": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}}, "required": ["url", "remoteHostType", "username", "password"]}, "Object45": {"type": "object", "properties": {"duration": {"description": "The number of seconds the temporary credential should be valid. Defaults to 15 minutes. Must not be less than 15 minutes or greater than 36 hours.", "type": "integer"}}}, "Object46": {"type": "object", "properties": {"accessKey": {"description": "The identifier of the credential.", "type": "string"}, "secretAccessKey": {"description": "The secret part of the credential.", "type": "string"}, "sessionToken": {"description": "The session token identifier.", "type": "string"}}}, "Object47": {"type": "object", "properties": {"id": {"description": "The ID for the database.", "type": "integer"}, "name": {"description": "The name of the database.", "type": "string"}}}, "Object48": {"type": "object", "properties": {"schema": {"description": "The name of a schema.", "type": "string"}}}, "Object49": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object32"}}}, "Object50": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object32"}, "columnNames": {"description": "The names of each column in the table.", "type": "array", "items": {"type": "string"}}}}, "Object51": {"type": "object", "properties": {"id": {"description": "The ID of this whitelisted IP address.", "type": "integer"}, "remoteHostId": {"description": "The ID of the database this rule is applied to.", "type": "integer"}, "securityGroupId": {"description": "The ID of the security group this rule is applied to.", "type": "string"}, "subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}, "createdAt": {"description": "The time this rule was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this rule was last updated.", "type": "string", "format": "time"}}}, "Object52": {"type": "object", "properties": {"id": {"description": "The ID of this whitelisted IP address.", "type": "integer"}, "remoteHostId": {"description": "The ID of the database this rule is applied to.", "type": "integer"}, "securityGroupId": {"description": "The ID of the security group this rule is applied to.", "type": "string"}, "subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}, "authorizedBy": {"description": "The user who authorized this rule.", "type": "string"}, "isActive": {"description": "True if the rule is applied, false if it has been revoked.", "type": "boolean"}, "createdAt": {"description": "The time this rule was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this rule was last updated.", "type": "string", "format": "time"}}}, "Object53": {"type": "object", "properties": {"subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}}, "required": ["subnetMask"]}, "Object58": {"type": "object", "properties": {"id": {"description": "User ID", "type": "integer"}, "username": {"description": "Username", "type": "string"}}}, "Object57": {"type": "object", "properties": {"id": {"description": "Group ID", "type": "integer"}, "name": {"description": "Group name", "type": "string"}, "slug": {"description": "Group slug", "type": "string"}, "users": {"description": "Users within the group", "type": "array", "items": {"$ref": "#/definitions/Object58"}}}}, "Object59": {"type": "object", "properties": {"name": {"description": "The file name.", "type": "string"}, "expiresAt": {"description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string", "format": "date-time"}}, "required": ["name"]}, "Object60": {"type": "object", "properties": {"id": {"description": "The ID of the file object.", "type": "integer"}, "name": {"description": "The file name.", "type": "string"}, "createdAt": {"description": "The date and time the file was created.", "type": "string", "format": "date-time"}, "fileSize": {"description": "The file size.", "type": "integer"}, "expiresAt": {"description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string", "format": "date-time"}, "uploadUrl": {"description": "The URL that may be used to upload a file. To use the upload URL, initiate a POST request to the given URL with the file you wish to import as the \"file\" form field.", "type": "string"}, "uploadFields": {"description": "A hash containing the form fields to be included with the POST request.", "type": "object"}}}, "Object61": {"type": "object", "properties": {"id": {"description": "The ID of the file object.", "type": "integer"}, "name": {"description": "The file name.", "type": "string"}, "createdAt": {"description": "The date and time the file was created.", "type": "string", "format": "date-time"}, "fileSize": {"description": "The file size.", "type": "integer"}, "expiresAt": {"description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string", "format": "date-time"}, "downloadUrl": {"description": "A JSON string containing information about the URL of the file.", "type": "string"}, "fileUrl": {"description": "The URL that may be used to download the file.", "type": "string"}}}, "Object62": {"type": "object", "properties": {"userIds": {"description": "An array of one or more user IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}}, "required": ["userIds", "permissionLevel"]}, "Object63": {"type": "object", "properties": {"groupIds": {"description": "An array of one or more group IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}}, "required": ["groupIds", "permissionLevel"]}, "Object65": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object67": {"type": "object", "properties": {"remoteHostId": {"type": "integer"}, "credentialId": {"type": "integer"}, "additionalCredentials": {"description": "Array that holds additional credentials used for specific imports. For salesforce imports, the first and only element is the client credential id.", "type": "array", "items": {"type": "integer"}}, "name": {"type": "string"}}}, "Object68": {"type": "object", "properties": {"scheduled": {"description": "If the object is scheduled", "type": "boolean"}, "scheduledDays": {"description": "Day based on numeric value starting at 0 for Sunday", "type": "array", "items": {"type": "integer"}}, "scheduledHours": {"description": "Hours of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledMinutes": {"description": "Minutes of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledRunsPerHour": {"description": "Alternative to scheduled minutes, number of times to run per hour", "type": "integer"}}}, "Object69": {"type": "object", "properties": {"urls": {"description": "URLs to receive a POST request at job completion", "type": "array", "items": {"type": "string"}}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "type": "array", "items": {"type": "string"}}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "type": "array", "items": {"type": "string"}}, "stallWarningMinutes": {"description": "Stall warning emails will be sent after this amount of minutes.", "type": "integer"}, "successOn": {"description": "If success email notifications are on", "type": "boolean"}, "failureOn": {"description": "If failure email notifications are on", "type": "boolean"}}}, "Object71": {"type": "object", "properties": {"id": {"description": "The ID of the table or file, if available.", "type": "integer"}, "path": {"description": "The path of the dataset to sync from; for a database source, schema.tablename.", "type": "string"}}}, "Object72": {"type": "object", "properties": {"path": {"description": "The schema.tablename to sync to.", "type": "string"}}}, "Object73": {"type": "object", "properties": {"maxErrors": {"type": "integer"}, "existingTableRows": {"type": "string"}, "distkey": {"type": "string"}, "sortkey1": {"type": "string"}, "sortkey2": {"type": "string"}, "columnDelimiter": {"type": "string"}, "identityColumn": {"type": "string"}, "rowChunkSize": {"type": "integer"}, "wipeDestinationTable": {"type": "boolean"}, "truncateLongLines": {"type": "boolean"}, "invalidCharReplacement": {"type": "string"}, "verifyTableRowCounts": {"type": "boolean"}, "partitionColumnName": {"type": "string"}, "partitionSchemaName": {"type": "string"}, "partitionTableName": {"type": "string"}, "partitionTablePartitionColumnMinName": {"type": "string"}, "partitionTablePartitionColumnMaxName": {"type": "string"}, "lastModifiedColumn": {"type": "string"}, "mysqlCatalogMatchesSchema": {"type": "boolean"}, "firstRowIsHeader": {"type": "boolean"}, "exportAction": {"type": "string"}, "sqlQuery": {"type": "string"}, "contactLists": {"type": "string"}, "soqlQuery": {"type": "string"}}}, "Object70": {"type": "object", "properties": {"id": {"type": "integer"}, "source": {"$ref": "#/definitions/Object71"}, "destination": {"$ref": "#/definitions/Object72"}, "advancedOptions": {"$ref": "#/definitions/Object73"}}}, "Object66": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object67"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object67"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "id": {"description": "The ID for the import.", "type": "integer"}, "isOutbound": {"type": "boolean"}, "syncs": {"description": "List of syncs.", "type": "array", "items": {"$ref": "#/definitions/Object70"}}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object32"}, "user": {"$ref": "#/definitions/Object10"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object74": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object67"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object67"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object68"}, "id": {"description": "The ID for the import.", "type": "integer"}, "isOutbound": {"type": "boolean"}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object32"}, "user": {"$ref": "#/definitions/Object10"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object76": {"type": "object", "properties": {"remoteHostId": {"type": "integer"}, "credentialId": {"type": "integer"}, "additionalCredentials": {"description": "Array that holds additional credentials used for specific imports. For salesforce imports, the first and only element is the client credential id.", "type": "array", "items": {"type": "integer"}}}, "required": ["remoteHostId", "credentialId"]}, "Object77": {"type": "object", "properties": {"scheduled": {"description": "If the object is scheduled", "type": "boolean"}, "scheduledDays": {"description": "Day based on numeric value starting at 0 for Sunday", "type": "array", "items": {"type": "integer"}}, "scheduledHours": {"description": "Hours of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledMinutes": {"description": "Minutes of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledRunsPerHour": {"description": "Alternative to scheduled minutes, number of times to run per hour", "type": "integer"}}}, "Object78": {"type": "object", "properties": {"urls": {"description": "URLs to receive a POST request at job completion", "type": "array", "items": {"type": "string"}}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "type": "array", "items": {"type": "string"}}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "type": "array", "items": {"type": "string"}}, "stallWarningMinutes": {"description": "Stall warning emails will be sent after this amount of minutes.", "type": "integer"}, "successOn": {"description": "If success email notifications are on", "type": "boolean"}, "failureOn": {"description": "If failure email notifications are on", "type": "boolean"}}}, "Object75": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object76"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object76"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "isOutbound": {"type": "boolean"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}, "required": ["name", "syncType", "isOutbound"]}, "Object79": {"type": "object", "properties": {"schema": {"description": "The schema of the destination table.", "type": "string"}, "name": {"description": "The name of the destination table.", "type": "string"}, "remoteHostId": {"description": "The id of the destination database host.", "type": "integer"}, "credentialId": {"description": "The id of the credentials to be used when performing the database import.", "type": "integer"}, "maxErrors": {"description": "The maximum number of rows with errors to remove from the import before failing.", "type": "integer"}, "existingTableRows": {"description": "The behaviour if a table with the requested name already exists.  One of \"fail\", \"truncate\", \"append\", or \"drop\".Defaults to \"fail\".", "type": "string"}, "distkey": {"description": "The column to use as the distkey for the table.", "type": "string"}, "sortkey1": {"description": "The column to use as the sort key for the table.", "type": "string"}, "sortkey2": {"description": "The second column in a compound sortkey for the table.", "type": "string"}, "columnDelimiter": {"description": "The column delimiter of the file. If column_delimiter is null or omitted, it will be auto-detected. Valid arguments are \"comma\", \"tab\", and \"pipe\".", "type": "string"}, "firstRowIsHeader": {"description": "A boolean value indicating whether or not the first row is a header row. If first_row_is_header is null or omitted, it will be auto-detected.", "type": "boolean"}, "multipart": {"description": "If true, the upload URI will require a `multipart/form-data` POST request. Defaults to false.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}, "required": ["schema", "name", "remoteHostId", "credentialId"]}, "Object80": {"type": "object", "properties": {"id": {"description": "The id of the import.", "type": "integer"}, "uploadUri": {"description": "The URI which may be used to upload a tabular file for import. You must use this URI to upload the file you wish imported and then inform the Civis API when your upload is complete using the URI given by the runUri field of this reponse.", "type": "string"}, "runUri": {"description": "The URI to POST to once the file upload is complete. After uploading the file using the URI given in the uploadUri attribute of the reponse, POST to this URI to initiate the import of your uploaded file into the platform.", "type": "string"}, "uploadFields": {"description": "If multipart was set to true, these fields should be included in the multipart upload.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object81": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "importId": {"description": "The ID of the import.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object82": {"type": "object", "properties": {"id": {"description": "The ID for the import.", "type": "integer"}, "schema": {"description": "The destination schema name. This schema must already exist in Redshift.", "type": "string"}, "table": {"description": "The destination table name, without the schema prefix. This table must already exist in Redshift.", "type": "string"}, "remoteHostId": {"description": "The ID of the destination database host.", "type": "integer"}, "state": {"description": "The state of the run; one of \"queued\", \"running\", \"succeeded\", \"failed\", or \"cancelled\".", "type": "string"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error returned by the run, if any.", "type": "string"}}}, "Object83": {"type": "object", "properties": {"id": {"description": "The ID for the import.", "type": "integer"}, "schema": {"description": "The destination schema name. This schema must already exist in Redshift.", "type": "string"}, "table": {"description": "The destination table name, without the schema prefix. This table must already exist in Redshift.", "type": "string"}, "remoteHostId": {"description": "The ID of the destination database host.", "type": "integer"}, "state": {"description": "The state of the run; one of \"queued\", \"running\", \"succeeded\", \"failed\", or \"cancelled\".", "type": "string"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error returned by the run, if any.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}}, "Object84": {"type": "object", "properties": {"fileIds": {"description": "The file IDs for the import.", "type": "array", "items": {"type": "integer"}}, "schema": {"description": "The destination schema name. This schema must already exist in Redshift.", "type": "string"}, "table": {"description": "The destination table name, without the schema prefix. This table must already exist in Redshift.", "type": "string"}, "remoteHostId": {"description": "The ID of the destination database host.", "type": "integer"}, "credentialId": {"description": "The ID of the credentials to be used when performing the database import.", "type": "integer"}, "columnDelimiter": {"description": "The column delimiter for the file. Valid arguments are \"comma\", \"tab\", and \"pipe\". If unspecified, defaults to \"comma\".", "type": "string"}, "firstRowIsHeader": {"description": "A boolean value indicating whether or not the first row is a header row. If unspecified, defaults to false.", "type": "boolean"}, "compression": {"description": "The type of compression. Valid arguments are \"gzip\", \"zip\", and \"none\". If unspecified, defaults to \"gzip\".", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}, "required": ["fileIds", "schema", "table", "remoteHostId", "credentialId"]}, "Object85": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object67"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object67"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "id": {"description": "The ID for the import.", "type": "integer"}, "isOutbound": {"type": "boolean"}, "syncs": {"description": "List of syncs.", "type": "array", "items": {"$ref": "#/definitions/Object70"}}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object32"}, "user": {"$ref": "#/definitions/Object10"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object86": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object76"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object76"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "isOutbound": {"type": "boolean"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}}, "required": ["name", "syncType", "isOutbound"]}, "Object87": {"type": "object", "properties": {"runId": {"description": "The ID of the new run triggered.", "type": "integer"}}}, "Object88": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued', 'running' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}}}, "Object90": {"type": "object", "properties": {"path": {"description": "The path of the dataset to sync from; for a database source, schema.tablename.", "type": "string"}}}, "Object91": {"type": "object", "properties": {"path": {"description": "The schema.tablename to sync to.", "type": "string"}}, "required": ["path"]}, "Object92": {"type": "object", "properties": {"maxErrors": {"type": "integer"}, "existingTableRows": {"type": "string"}, "distkey": {"type": "string"}, "sortkey1": {"type": "string"}, "sortkey2": {"type": "string"}, "columnDelimiter": {"type": "string"}, "identityColumn": {"type": "string"}, "rowChunkSize": {"type": "integer"}, "wipeDestinationTable": {"type": "boolean"}, "truncateLongLines": {"type": "boolean"}, "invalidCharReplacement": {"type": "string"}, "verifyTableRowCounts": {"type": "boolean"}, "partitionColumnName": {"type": "string"}, "partitionSchemaName": {"type": "string"}, "partitionTableName": {"type": "string"}, "partitionTablePartitionColumnMinName": {"type": "string"}, "partitionTablePartitionColumnMaxName": {"type": "string"}, "lastModifiedColumn": {"type": "string"}, "mysqlCatalogMatchesSchema": {"type": "boolean"}, "firstRowIsHeader": {"type": "boolean"}, "exportAction": {"type": "string"}, "sqlQuery": {"type": "string"}, "contactLists": {"type": "string"}, "soqlQuery": {"type": "string"}}}, "Object89": {"type": "object", "properties": {"source": {"$ref": "#/definitions/Object90"}, "destination": {"$ref": "#/definitions/Object91"}, "advancedOptions": {"$ref": "#/definitions/Object92"}}, "required": ["source", "destination"]}, "Object93": {"type": "object", "properties": {"source": {"$ref": "#/definitions/Object90"}, "destination": {"$ref": "#/definitions/Object91"}, "advancedOptions": {"$ref": "#/definitions/Object92"}}, "required": ["source", "destination"]}, "Object94": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"$ref": "#/definitions/Object32"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object95": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"description": "Information about the most recent runs of the job.", "type": "array", "items": {"$ref": "#/definitions/Object32"}}, "lastRun": {"$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object96": {"type": "object", "properties": {"triggerEmail": {"description": "Email address which may be used to trigger this job to run.", "type": "string"}}}, "Object97": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"type": "array", "items": {"$ref": "#/definitions/Object32"}}, "lastRun": {"$ref": "#/definitions/Object32"}, "children": {"type": "array", "items": {"$ref": "#/definitions/Object97"}}}}, "Object99": {"type": "object", "properties": {"id": {"description": "The ID of the model type.", "type": "integer"}, "algorithm": {"description": "The name of the algorithm used to train the model.", "type": "string"}, "dvType": {"description": "The type of dependent variable predicted by the model.", "type": "string"}, "fintAllowed": {"description": "Whether this model type supports searching for interaction terms.", "type": "boolean"}}}, "Object100": {"type": "object", "properties": {"tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object77"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}}, "Object102": {"type": "object", "properties": {"id": {"description": "The ID of the model build.", "type": "integer"}, "name": {"description": "The name of the model build.", "type": "string"}, "createdAt": {"description": "The time the model build was created.", "type": "string"}, "description": {"description": "A description of the model build.", "type": "string"}, "rootMeanSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rocAuc": {"description": "A key metric for binary, multinomial, and ordinal models. Nil for other model types.", "type": "number", "format": "float"}}}, "Object103": {"type": "object", "properties": {"id": {"description": "The ID of the model to which to apply the prediction.", "type": "integer"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "schedule": {"description": "The schedule of when the prediction will run.", "$ref": "#/definitions/Object68"}, "state": {"description": "The status of the prediction. One of: \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}}}, "Object101": {"type": "object", "properties": {"id": {"description": "The ID of the model.", "type": "integer"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object68"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "lastRun": {"description": "The last run of this model build.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "user": {"$ref": "#/definitions/Object10"}, "createdAt": {"description": "The time the model was created.", "type": "string", "format": "date-time"}, "updatedAt": {"description": "The time the model was updated.", "type": "string", "format": "date-time"}, "currentBuildState": {"description": "The status of the current model build. One of \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}, "currentBuildException": {"description": "Exception message, if applicable, of the current model build.", "type": "string"}, "builds": {"description": "A list of trained models available for making predictions.", "type": "array", "items": {"$ref": "#/definitions/Object102"}}, "predictions": {"description": "The tables upon which the model will be applied.", "type": "array", "items": {"$ref": "#/definitions/Object103"}}, "lastOutputLocation": {"description": "The output JSON for the last build.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object105": {"type": "object", "properties": {"id": {"description": "The ID of the model to which to apply the prediction.", "type": "integer"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "state": {"description": "The status of the prediction. One of: \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}}}, "Object104": {"type": "object", "properties": {"id": {"description": "The ID of the model.", "type": "integer"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object68"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "lastRun": {"description": "The last run of this model build.", "$ref": "#/definitions/Object32"}, "user": {"$ref": "#/definitions/Object10"}, "createdAt": {"description": "The time the model was created.", "type": "string", "format": "date-time"}, "updatedAt": {"description": "The time the model was updated.", "type": "string", "format": "date-time"}, "currentBuildState": {"description": "The status of the current model build. One of \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}, "currentBuildException": {"description": "Exception message, if applicable, of the current model build.", "type": "string"}, "builds": {"description": "A list of trained models available for making predictions.", "type": "array", "items": {"$ref": "#/definitions/Object102"}}, "predictions": {"description": "The tables upon which the model will be applied.", "type": "array", "items": {"$ref": "#/definitions/Object105"}}, "lastOutputLocation": {"description": "The output JSON for the last build.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object106": {"type": "object", "properties": {"tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object77"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}}}, "Object107": {"type": "object", "properties": {"id": {"description": "The ID of the model build.", "type": "integer"}, "state": {"description": "The state of the model build.one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "error": {"description": "The error, if any, returned by the build.", "type": "string"}, "name": {"description": "The name of the model build.", "type": "string"}, "createdAt": {"description": "The time the model build was created.", "type": "string"}, "description": {"description": "A description of the model build.", "type": "string"}, "rootMeanSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rocAuc": {"description": "A key metric for binary, multinomial, and ordinal models. Nil for other model types.", "type": "number", "format": "float"}, "transformationMetadata": {"description": "A string representing the full JSON output of the metadata for transformation of column names", "type": "string"}, "output": {"description": "A string representing the JSON output for the specified build. Only present when smaller than 10KB in size.", "type": "string"}, "outputLocation": {"description": "A URL representing the location of the full JSON output for the specified build.The URL link will be valid for 5 minutes.", "type": "string"}}}, "Object108": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object109": {"type": "object", "properties": {"tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "schedule": {"description": "The schedule of when the prediction will run.", "$ref": "#/definitions/Object77"}}, "required": ["tableName", "primaryKey"]}, "Object110": {"type": "object", "properties": {"id": {"description": "The ID of the model associated with this schedule.", "type": "integer"}, "schedule": {"description": "The schedule of when the model will run.", "$ref": "#/definitions/Object68"}}}, "Object111": {"type": "object", "properties": {"schedule": {"description": "The schedule of when the model will run.", "$ref": "#/definitions/Object77"}}, "required": ["schedule"]}, "Object113": {"type": "object", "properties": {"id": {"description": "The ID of the prediction.", "type": "integer"}, "modelId": {"description": "The ID of the model used for this prediction.", "type": "integer"}, "scoredTableId": {"description": "The ID of the source table for this prediction.", "type": "integer"}, "scoredTableName": {"description": "The name of the source table for this prediction.", "type": "string"}, "outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "state": {"description": "The state of the last run of this prediction.", "type": "string"}, "error": {"description": "The error, if any, of the last run of this prediction.", "type": "string"}, "startedAt": {"description": "The start time of the last run of this prediction.", "type": "string", "format": "date-time"}, "finishedAt": {"description": "The end time of the last run of this prediction.", "type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this prediction.", "$ref": "#/definitions/Object32"}}}, "Object116": {"type": "object", "properties": {"scoreName": {"description": "The name of the score.", "type": "string"}, "histogram": {"description": "The histogram of the distribution of scores.", "type": "array", "items": {"type": "integer"}}, "avgScore": {"description": "The average score.", "type": "number", "format": "float"}, "minScore": {"description": "The minimum score.", "type": "number", "format": "float"}, "maxScore": {"description": "The maximum score.", "type": "number", "format": "float"}}}, "Object115": {"type": "object", "properties": {"id": {"description": "The ID of the table with created predictions.", "type": "integer"}, "schema": {"description": "The schema of table with created predictions.", "type": "string"}, "name": {"description": "The name of table with created predictions.", "type": "string"}, "createdAt": {"description": "The time when the table with created predictions was created.", "type": "string", "format": "date-time"}, "scoreStats": {"description": "An array of metrics on the created predictions.", "type": "array", "items": {"$ref": "#/definitions/Object116"}}}}, "Object114": {"type": "object", "properties": {"id": {"description": "The ID of the prediction.", "type": "integer"}, "modelId": {"description": "The ID of the model used for this prediction.", "type": "integer"}, "scoredTableId": {"description": "The ID of the source table for this prediction.", "type": "integer"}, "scoredTableName": {"description": "The name of the source table for this prediction.", "type": "string"}, "outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "state": {"description": "The state of the last run of this prediction.", "type": "string"}, "error": {"description": "The error, if any, of the last run of this prediction.", "type": "string"}, "startedAt": {"description": "The start time of the last run of this prediction.", "type": "string", "format": "date-time"}, "finishedAt": {"description": "The end time of the last run of this prediction.", "type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this prediction.", "$ref": "#/definitions/Object32"}, "scoredTables": {"description": "An array of created prediction tables.", "type": "array", "items": {"$ref": "#/definitions/Object115"}}, "schedule": {"description": "The schedule when the prediction will be built.", "$ref": "#/definitions/Object68"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}}}, "Object117": {"type": "object", "properties": {"id": {"description": "ID of the prediction associated with this schedule.", "type": "integer"}, "schedule": {"description": "Schedule when the prediction will run.", "$ref": "#/definitions/Object68"}, "scoreOnModelBuild": {"description": "Whether the prediction will run after a rebuild of the associated model.", "type": "boolean"}}}, "Object118": {"type": "object", "properties": {"schedule": {"description": "Schedule when the prediction will run.", "$ref": "#/definitions/Object77"}, "scoreOnModelBuild": {"description": "Whether the prediction will run after a rebuild of the associated model.", "type": "boolean"}}}, "Object119": {"type": "object", "properties": {"outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}}}, "Object120": {"type": "object", "properties": {"id": {"description": "The ID of the prediction run.", "type": "integer"}, "predictionId": {"description": "The ID of the prediction.", "type": "integer"}, "state": {"description": "The state of the prediction run.", "type": "string"}, "exception": {"description": "The exception, if any, returned by the prediction run.", "type": "string"}, "name": {"description": "The name of table created by this predictions run.", "type": "string"}, "createdAt": {"description": "The time when the table with created predictions was created.", "type": "string", "format": "date-time"}, "scoreStats": {"description": "An array of metrics on the created predictions.", "type": "array", "items": {"$ref": "#/definitions/Object116"}}}}, "Object121": {"type": "object", "properties": {"name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "note": {"description": "Notes for the project", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}, "required": ["name", "description"]}, "Object123": {"type": "object", "properties": {"schema": {"type": "string"}, "name": {"type": "string"}, "rowCount": {"type": "integer"}, "columnCount": {"type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object124": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object125": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "type": {"type": "string"}, "finishedAt": {"type": "string", "format": "time"}, "state": {"type": "string"}}}, "Object126": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "type": {"type": "string"}, "finishedAt": {"type": "string", "format": "time"}, "state": {"type": "string"}}}, "Object127": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "state": {"type": "string"}}}, "Object128": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "state": {"type": "string"}}}, "Object129": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}}}, "Object130": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "fileName": {"type": "string"}, "fileSize": {"type": "integer"}}}, "Object131": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "slug": {"type": "string"}}}, "Object132": {"type": "object", "properties": {"projectId": {"type": "integer"}, "objectId": {"type": "integer"}, "objectType": {"type": "string"}, "fcoType": {"type": "string"}, "subType": {"type": "string"}, "name": {"type": "string"}, "icon": {"type": "string"}, "author": {"type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object122": {"type": "object", "properties": {"id": {"description": "The ID for this project.", "type": "integer"}, "author": {"description": "The author of the project.", "$ref": "#/definitions/Object10"}, "name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "users": {"description": "Users who can see the project", "type": "array", "items": {"$ref": "#/definitions/Object10"}}, "autoShare": {"type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "tables": {"type": "array", "items": {"$ref": "#/definitions/Object123"}}, "surveys": {"type": "array", "items": {"$ref": "#/definitions/Object124"}}, "scripts": {"type": "array", "items": {"$ref": "#/definitions/Object125"}}, "imports": {"type": "array", "items": {"$ref": "#/definitions/Object126"}}, "models": {"type": "array", "items": {"$ref": "#/definitions/Object127"}}, "reports": {"type": "array", "items": {"$ref": "#/definitions/Object128"}}, "scriptTemplates": {"type": "array", "items": {"$ref": "#/definitions/Object129"}}, "files": {"type": "array", "items": {"$ref": "#/definitions/Object130"}}, "appInstances": {"type": "array", "items": {"$ref": "#/definitions/Object131"}}, "allObjects": {"type": "array", "items": {"$ref": "#/definitions/Object132"}}, "note": {"type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object133": {"type": "object", "properties": {"name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "note": {"description": "Notes for the project", "type": "string"}}}, "Object134": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object135": {"type": "object", "properties": {"id": {"description": "The query ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "type": "array", "items": {"type": "array", "items": {"type": "string"}}}, "resultColumns": {"description": "A preview of columns returned by the query.", "type": "array", "items": {"type": "string"}}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}}}, "Object136": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "queryId": {"description": "The ID of the query.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object137": {"type": "object", "properties": {"database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "interactive": {"description": "Deprecated and not used.", "type": "boolean"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "includeHeader": {"description": "Whether the CSV output should include a header row [default: true].", "type": "boolean"}, "compression": {"description": "The type of compression. One of gzip or zip, or none [default: gzip].", "type": "string"}, "columnDelimiter": {"description": "The delimiter to use. One of comma or tab, or pipe [default: comma].", "type": "string"}, "unquoted": {"description": "If true, will not quote fields.", "type": "boolean"}, "filenamePrefix": {"description": "The output filename prefix.", "type": "string"}}, "required": ["database", "sql", "previewRows"]}, "Object138": {"type": "object", "properties": {"id": {"description": "The query ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "type": "array", "items": {"type": "array", "items": {"type": "string"}}}, "resultColumns": {"description": "A preview of columns returned by the query.", "type": "array", "items": {"type": "string"}}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "interactive": {"description": "Deprecated and not used.", "type": "boolean"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "includeHeader": {"description": "Whether the CSV output should include a header row [default: true].", "type": "boolean"}, "compression": {"description": "The type of compression. One of gzip or zip, or none [default: gzip].", "type": "string"}, "columnDelimiter": {"description": "The delimiter to use. One of comma or tab, or pipe [default: comma].", "type": "string"}, "unquoted": {"description": "If true, will not quote fields.", "type": "boolean"}, "filenamePrefix": {"description": "The output filename prefix.", "type": "string"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}}}, "Object139": {"type": "object", "properties": {"id": {"description": "The query ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "type": "array", "items": {"type": "array", "items": {"type": "string"}}}, "resultColumns": {"description": "A preview of columns returned by the query.", "type": "array", "items": {"type": "string"}}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "name": {"description": "The name of the query.", "type": "string"}, "author": {"description": "The author of the query.", "$ref": "#/definitions/Object10"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}}}, "Object149": {"type": "object", "properties": {"id": {"description": "The ID for the project.", "type": "integer"}, "name": {"description": "The name of the project.", "type": "string"}}}, "Object150": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}}}, "Object148": {"type": "object", "properties": {"id": {"description": "The ID of this report.", "type": "integer"}, "name": {"description": "The name of the report.", "type": "string"}, "user": {"description": "The name of the author of this report.", "$ref": "#/definitions/Object10"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the report.", "type": "array", "items": {"$ref": "#/definitions/Object149"}}, "state": {"description": "The status of the report's last run.", "type": "string"}, "finishedAt": {"description": "The time that the report's last run finished.", "type": "string", "format": "time"}, "vizUpdatedAt": {"description": "The time that the report's visualization was last updated.", "type": "string", "format": "time"}, "script": {"description": "The ID, name, and raw SQL of the job (a script or a query) that backs this report.", "$ref": "#/definitions/Object150"}, "jobPath": {"description": "The link to details of the job that backs this report.", "type": "string"}, "tableauId": {"type": "integer"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "authThumbnailUrl": {"description": "URL for a thumbnail of the report.", "type": "string"}, "lastRun": {"description": "The last run of the job backing this report.", "$ref": "#/definitions/Object32"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object151": {"type": "object", "properties": {"id": {"description": "The ID of this report.", "type": "integer"}, "name": {"description": "The name of the report.", "type": "string"}, "user": {"description": "The name of the author of this report.", "$ref": "#/definitions/Object10"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the report.", "type": "array", "items": {"$ref": "#/definitions/Object149"}}, "state": {"description": "The status of the report's last run.", "type": "string"}, "finishedAt": {"description": "The time that the report's last run finished.", "type": "string", "format": "time"}, "vizUpdatedAt": {"description": "The time that the report's visualization was last updated.", "type": "string", "format": "time"}, "script": {"description": "The ID, name, and raw SQL of the job (a script or a query) that backs this report.", "$ref": "#/definitions/Object150"}, "jobPath": {"description": "The link to details of the job that backs this report.", "type": "string"}, "tableauId": {"type": "integer"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "authThumbnailUrl": {"description": "URL for a thumbnail of the report.", "type": "string"}, "lastRun": {"description": "The last run of the job backing this report.", "$ref": "#/definitions/Object32"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "authDataUrl": {"type": "string"}, "authCodeUrl": {"type": "string"}, "config": {"description": "Any configuration metadata for this report.", "type": "string"}, "validOutputFile": {"description": "Whether the job (a script or a query) that backs the report currently has a valid output file.", "type": "boolean"}, "provideAPIKey": {"description": "Whether the report requests an API Key from the report viewer.", "type": "boolean"}, "apiKey": {"description": "A Civis API key that can be used by this report.", "type": "string"}, "apiKeyId": {"description": "The ID of the API key. Can be used for auditing API use by this report.", "type": "integer"}, "appState": {"description": "Any application state blob for this report.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object152": {"type": "object", "properties": {"scriptId": {"description": "The ID of the job (a script or a query) used to create this report.", "type": "integer"}, "name": {"description": "The name of the report.", "type": "string"}, "codeBody": {"description": "The code for the report visualization.", "type": "string"}, "appState": {"description": "Any application state blob for this report.", "type": "object", "additionalProperties": {"type": "string"}}, "provideAPIKey": {"description": "Allow the report to provide an API key to front-end code.", "type": "boolean"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}}, "Object153": {"type": "object", "properties": {"name": {"description": "The name of the report.", "type": "string"}, "scriptId": {"description": "The ID of the job (a script or a query) used to create this report.", "type": "integer"}, "codeBody": {"description": "The code for the report visualization.", "type": "string"}, "config": {"type": "string"}, "appState": {"description": "The application state blob for this report.", "type": "object", "additionalProperties": {"type": "string"}}, "provideAPIKey": {"description": "Allow the report to provide an API key to front-end code.", "type": "boolean"}, "templateId": {"description": "The ID of the template used for this report. If null is passed, no template will back this report. Changes to the backing template will reset the report appState.", "type": "integer"}}}, "Object154": {"type": "object", "properties": {"id": {"description": "The ID of this report.", "type": "integer"}, "state": {"description": "The status of the job's last run.", "type": "string"}, "finishedAt": {"description": "The time that the job's last run finished.", "type": "string", "format": "time"}, "sendEmailOnCompletion": {"description": "Whether the job will send emails on completion.", "type": "boolean"}, "emailTemplate": {"description": "Custom email template.", "type": "string"}, "recipientEmailAddresses": {"description": "Email addresses to send report to, comma separated.", "type": "string"}, "emailSubject": {"description": "Subject for Email.", "type": "string"}, "height": {"description": "The height of the cropped snapshot image in screen pixels. The default value is 900 pixels. Minimum value is 600 pixels.", "type": "integer"}, "width": {"description": "The width of the cropped snapshot image in screen pixels. The default value is 1440 pixels. Minimum value is 600 pixels.", "type": "integer"}, "schedule": {"description": "The schedule of when the snapshot will run.", "$ref": "#/definitions/Object68"}, "parentId": {"description": "The ID of the parent job that will trigger this snapshot.", "type": "integer"}}}, "Object155": {"type": "object", "properties": {"state": {"description": "The status of the job's last run.", "type": "string"}, "finishedAt": {"description": "The time that the job's last run finished.", "type": "string", "format": "time"}, "sendEmailOnCompletion": {"description": "Whether the job will send emails on completion.", "type": "boolean"}, "emailTemplate": {"description": "Custom email template.", "type": "string"}, "recipientEmailAddresses": {"description": "Email addresses to send report to, comma separated.", "type": "string"}, "emailSubject": {"description": "Subject for Email.", "type": "string"}, "height": {"description": "The height of the cropped snapshot image in screen pixels. The default value is 900 pixels. Minimum value is 600 pixels.", "type": "integer"}, "width": {"description": "The width of the cropped snapshot image in screen pixels. The default value is 1440 pixels. Minimum value is 600 pixels.", "type": "integer"}, "schedule": {"description": "The schedule of when the snapshot will run.", "$ref": "#/definitions/Object77"}, "parentId": {"description": "The ID of the parent job that will trigger this snapshot.", "type": "integer"}}}, "Object156": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object157": {"type": "object", "properties": {"name": {"description": "The name of the type.", "type": "string"}}}, "Object159": {"type": "object", "properties": {"outputName": {"description": "The name of the output file.", "type": "string"}, "fileId": {"description": "The unique ID of the output file.", "type": "integer"}, "path": {"description": "The temporary link to download this output file, valid for 36 hours.", "type": "string"}}}, "Object158": {"type": "object", "properties": {"id": {"description": "The ID of this run.", "type": "integer"}, "sqlId": {"description": "The ID of this sql.", "type": "integer"}, "state": {"description": "The state of this run.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"description": "The time that this run finished.", "type": "string", "format": "time"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "output": {"description": "A list of the outputs of this script.", "type": "array", "items": {"$ref": "#/definitions/Object159"}}}}, "Object161": {"type": "object", "properties": {"name": {"description": "The variable's name as used within your code.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, file, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "value": {"description": "The value you would like to set this param to. Setting this value makes this parameter a fixed param.", "type": "string"}, "default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}}, "required": ["name", "type"]}, "Object160": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The database ID.", "type": "integer"}, "credentialId": {"description": "The credential ID.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.  Cannot be set if this script uses a template script.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "templateScriptId": {"description": "The ID of the template script, if any.  A script cannot both have a template script and be a template for other scripts.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}}, "required": ["name", "remoteHostId", "credentialId", "sql"]}, "Object163": {"type": "object", "properties": {"id": {"description": "The ID for the project.", "type": "integer"}, "name": {"description": "The name of the project.", "type": "string"}}}, "Object164": {"type": "object", "properties": {"name": {"description": "The variable's name as used within your code.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, file, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "value": {"description": "The value you would like to set this param to. Setting this value makes this parameter a fixed param.", "type": "string"}, "default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}}}, "Object165": {"type": "object", "properties": {"details": {"description": "The details link to get more information about the script.", "type": "string"}, "runs": {"description": "The runs link to get the run information list for this script.", "type": "string"}}}, "Object162": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}}}, "Object167": {"type": "object", "properties": {"name": {"description": "The variable's name as used within your code.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, file, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "value": {"description": "The value you would like to set this param to. Setting this value makes this parameter a fixed param.", "type": "string"}, "default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}}}, "Object166": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.  Cannot be set if this script uses a template script.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "templateScriptId": {"description": "The ID of the template script, if any.  A script cannot both have a template script and be a template for other scripts.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}}, "Object168": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of script.", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "expandedArguments": {"description": "Expanded arguments for use in injecting into different environments.", "type": "object"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}}}, "Object169": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued', 'running' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}}}, "Object171": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}, "required": ["cpu", "memory"]}, "Object170": {"type": "object", "properties": {"name": {"description": "The name of the container.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object171"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}, "required": ["requiredResources", "dockerCommand", "dockerImageName"]}, "Object173": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object172": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the container.", "type": "string"}, "type": {"description": "The type of the script (e.g Container)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object173"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object174": {"type": "object", "properties": {"name": {"description": "The name of the container.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object171"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}, "required": ["requiredResources", "dockerCommand", "dockerImageName"]}, "Object176": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object175": {"type": "object", "properties": {"name": {"description": "The name of the container.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object176"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object177": {"type": "object", "properties": {"state": {"description": "The state of the script.", "type": "string"}, "bocceAcceptedAt": {"description": "The time when a bocce worker began processing the script.", "type": "string", "format": "date-time"}, "bocceStartedAt": {"description": "The time when a bocce worker began executing the script.", "type": "string", "format": "date-time"}}}, "Object179": {"type": "object", "properties": {"message": {"description": "The log message to store.", "type": "string"}, "level": {"description": "The log level of this message [default: info]", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}}, "required": ["message"]}, "Object178": {"type": "object", "properties": {"message": {"description": "The log message to store.", "type": "string"}, "level": {"description": "The log level of this message [default: info]", "type": "string"}, "messages": {"type": "array", "items": {"$ref": "#/definitions/Object179"}}}}, "Object180": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}}}, "Object182": {"type": "object", "properties": {"includeHeader": {"description": "Whether or not to include headers in the output data. Default: true", "type": "boolean"}, "compression": {"description": "The type of compression to use, if any, one of \"none\", \"zip\", or \"gzip\". Default: gzip", "type": "string"}, "columnDelimiter": {"description": "Which delimiter to use, one of \"comma\", \"tab\", or \"pipe\". Default: comma", "type": "string"}, "unquoted": {"description": "Whether or not to quote fields. Default: false", "type": "boolean"}, "forceMultifile": {"description": "Whether or not the csv should be split into multiple files. Default: false", "type": "boolean"}, "filenamePrefix": {"description": "A user specified filename prefix for the output file to have. Default: null", "type": "string"}}}, "Object181": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object182"}}, "required": ["name", "sql", "remoteHostId", "credentialId"]}, "Object184": {"type": "object", "properties": {"includeHeader": {"description": "Whether or not to include headers in the output data. Default: true", "type": "boolean"}, "compression": {"description": "The type of compression to use, if any, one of \"none\", \"zip\", or \"gzip\". Default: gzip", "type": "string"}, "columnDelimiter": {"description": "Which delimiter to use, one of \"comma\", \"tab\", or \"pipe\". Default: comma", "type": "string"}, "unquoted": {"description": "Whether or not to quote fields. Default: false", "type": "boolean"}, "forceMultifile": {"description": "Whether or not the csv should be split into multiple files. Default: false", "type": "boolean"}, "filenamePrefix": {"description": "A user specified filename prefix for the output file to have. Default: null", "type": "string"}}}, "Object183": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "expandedArguments": {"description": "Expanded arguments for use in injecting into different environments.", "type": "object"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "codePreview": {"description": "The code that this script will run with arguments inserted.", "type": "string"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object184"}}}, "Object185": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object182"}}, "required": ["name", "sql", "remoteHostId", "credentialId"]}, "Object186": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object182"}}}, "Object188": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}, "required": ["cpu", "memory"]}, "Object187": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object188"}, "source": {"description": "The body/text of the script.", "type": "string"}}, "required": ["name", "source"]}, "Object190": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object189": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object190"}, "source": {"description": "The body/text of the script.", "type": "string"}}}, "Object191": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object188"}, "source": {"description": "The body/text of the script.", "type": "string"}}, "required": ["name", "source"]}, "Object193": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object192": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object193"}, "source": {"description": "The body/text of the script.", "type": "string"}}}, "Object194": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object188"}, "source": {"description": "The body/text of the script.", "type": "string"}}, "required": ["name", "source"]}, "Object195": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object190"}, "source": {"description": "The body/text of the script.", "type": "string"}}}, "Object196": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object188"}, "source": {"description": "The body/text of the script.", "type": "string"}}, "required": ["name", "source"]}, "Object197": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object193"}, "source": {"description": "The body/text of the script.", "type": "string"}}}, "Object198": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}, "required": ["name", "source", "remoteHostId", "credentialId"]}, "Object199": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object165"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}}, "Object200": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object161"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}, "required": ["name", "source", "remoteHostId", "credentialId"]}, "Object201": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}}, "Object202": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g Custom)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object203": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}, "required": ["fromTemplateId"]}, "Object204": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g Custom)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object10"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object163"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "codePreview": {"description": "The code that this script will run with arguments inserted.", "type": "string"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object68"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object69"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object10"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object205": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object77"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object78"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object206": {"type": "object", "properties": {"id": {"description": "The ID of this run.", "type": "integer"}, "sqlId": {"description": "The ID of this sql.", "type": "integer"}, "state": {"description": "The state of this run.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time that this run finished.", "type": "string", "format": "time"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "output": {"description": "A list of the outputs of this script.", "type": "array", "items": {"$ref": "#/definitions/Object159"}}}}, "Object207": {"type": "object", "properties": {"id": {"description": "The ID of the log.", "type": "integer"}, "createdAt": {"description": "The time the log was created.", "type": "string", "format": "date-time"}, "message": {"description": "The log message.", "type": "string"}, "level": {"description": "The level of the log. One of unknown,fatal,error,warn,info,debug.", "type": "string"}}}, "Object208": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "containerId": {"description": "The ID of the container.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object209": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "pythonId": {"description": "The ID of the python.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object210": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "rId": {"description": "The ID of the r.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object211": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "javascriptId": {"description": "The ID of the javascript.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object212": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "customId": {"description": "The ID of the custom.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object213": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Report, Table, or Project", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object214": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Report, Table, or Project", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}}, "required": ["objectType", "objectId"]}, "Object215": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object216": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object217": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object218": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object219": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object220": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object222": {"type": "object", "properties": {"score": {"description": "The relevance score from the search request.", "type": "number", "format": "float"}, "type": {"description": "The type of the item.", "type": "string"}, "id": {"description": "The ID of the item.", "type": "integer"}, "name": {"description": "The name of the item.", "type": "string"}, "typeName": {"description": "The verbose name of the type.", "type": "string"}, "updatedAt": {"description": "The time the item was last updated.", "type": "string", "format": "time"}, "owner": {"description": "The owner of the item.", "type": "string"}}}, "Object230": {"type": "object", "properties": {"id": {"type": "integer"}, "shortName": {"type": "string"}, "title": {"type": "string"}}}, "Object232": {"type": "object", "properties": {"id": {"type": "integer"}, "code": {"type": "integer"}, "text": {"type": "string"}, "doNotRead": {"type": "boolean"}, "rotate": {"type": "boolean"}, "position": {"type": "integer"}, "binaryMapping": {"type": "boolean"}, "terminate": {"type": "boolean"}}}, "Object231": {"type": "object", "properties": {"id": {"type": "integer"}, "code": {"type": "string"}, "text": {"type": "string"}, "responseType": {"type": "string"}, "questionOptions": {"type": "array", "items": {"$ref": "#/definitions/Object232"}}}}, "Object229": {"type": "object", "properties": {"id": {"type": "integer"}, "script": {"$ref": "#/definitions/Object230"}, "questions": {"type": "array", "items": {"$ref": "#/definitions/Object231"}}}}, "Object233": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object235": {"type": "object", "properties": {"schema": {"type": "string"}, "name": {"type": "string"}}}, "Object237": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object238": {"type": "object", "properties": {"name": {"type": "string"}, "column": {"type": "string"}}}, "Object239": {"type": "object", "properties": {"name": {"type": "string"}, "methodColumn": {"type": "string"}, "contactabilityColumn": {"type": "string"}}}, "Object236": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "sourceTable": {"$ref": "#/definitions/Object235"}, "remoteHost": {"$ref": "#/definitions/Object237"}, "uniqueId": {"type": "string"}, "bucketColumns": {"type": "array", "items": {"$ref": "#/definitions/Object238"}}, "contactabilityColumns": {"type": "array", "items": {"$ref": "#/definitions/Object239"}}, "audienceColumns": {"type": "array", "items": {"$ref": "#/definitions/Object238"}}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object234": {"type": "object", "properties": {"id": {"type": "integer"}, "sampleTable": {"$ref": "#/definitions/Object235"}, "vendorSampleTable": {"$ref": "#/definitions/Object235"}, "strataTabsTable": {"$ref": "#/definitions/Object235"}, "uniqueId": {"type": "string"}, "householdColumn": {"type": "integer"}, "basefile": {"$ref": "#/definitions/Object236"}, "desiredCompletes": {"type": "integer"}, "oversamplePercent": {"type": "integer"}, "buckets": {"type": "array", "items": {"$ref": "#/definitions/Object238"}}, "contactMethods": {"type": "array", "items": {"type": "string"}}, "targetAudience": {"type": "string"}, "populationLimitingSQL": {"type": "string"}, "frameLimitingSQL": {"type": "string"}, "parentId": {"type": "integer"}, "metadata": {"type": "object"}}}, "Object240": {"type": "object", "properties": {"id": {"type": "integer"}, "dials": {"type": "integer"}, "completes": {"type": "integer"}, "matches": {"type": "integer"}, "refusals": {"type": "integer"}, "matchedCompletes": {"type": "integer"}, "earlyTermination": {"type": "integer"}, "other": {"type": "integer"}, "status": {"type": "string"}}}, "Object228": {"type": "object", "properties": {"id": {"type": "integer"}, "scriptVersion": {"$ref": "#/definitions/Object229"}, "vendor": {"$ref": "#/definitions/Object233"}, "sample": {"$ref": "#/definitions/Object234"}, "sampleStatus": {"type": "string"}, "scriptStatus": {"type": "string"}, "scheduledStartDate": {"type": "string", "format": "date"}, "scheduledEndDate": {"type": "string", "format": "date"}, "completesNeeded": {"type": "integer"}, "completes": {"type": "integer"}, "mode": {"type": "string"}, "costPerComplete": {"type": "number", "format": "float"}, "callCenterLeadId": {"type": "integer"}, "callIngestionLeadId": {"type": "integer"}, "voterFileSource": {"type": "string"}, "notes": {"type": "string"}, "sampleSchema": {"type": "string"}, "sampleTable": {"type": "string"}, "matchedCompletes": {"type": "integer"}, "returnDataId": {"type": "integer"}, "returns": {"type": "array", "items": {"$ref": "#/definitions/Object240"}}, "rollupJobId": {"type": "integer"}}}, "Object250": {"type": "object", "properties": {"databaseId": {"description": "The ID of the destination database.", "type": "integer"}, "schema": {"description": "The destination schema name.", "type": "string"}, "name": {"description": "The destination table name, without the schema prefix.", "type": "string"}, "data": {"description": "The file to import, uploaded using HTTP multipart.", "type": "string"}}, "required": ["databaseId", "schema", "name", "data"]}, "Object251": {"type": "object", "properties": {"databaseId": {"description": "The ID of the destination database.", "type": "integer"}, "schema": {"description": "The destination schema name.", "type": "string"}, "name": {"description": "The destination table name, without the schema prefix.", "type": "string"}, "state": {"description": "The state of the last run.", "type": "string"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}}}, "Object252": {"type": "object", "properties": {"jobType": {"description": "Job type", "type": "string"}, "metadata": {"type": "string"}}, "required": ["jobType"]}, "Object253": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}}}, "Object254": {"type": "object", "properties": {"performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}}}, "Object255": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}}}, "Object256": {"type": "object", "properties": {"threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Dynamo table to match against.", "type": "integer"}}, "required": ["threshold", "matchTableId"]}, "Object257": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Dynamo table to match against.", "type": "integer"}}}, "Object258": {"type": "object", "properties": {"threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Redshift table to match against.", "type": "integer"}}, "required": ["threshold", "matchTableId"]}, "Object259": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Redshift table to match against.", "type": "integer"}}}, "Object261": {"type": "object", "properties": {"name": {"description": "Name of the column.", "type": "string"}, "sqlType": {"description": "SQL type of the column.", "type": "string"}, "sampleValues": {"description": "A sample of values from the column.", "type": "array", "items": {"type": "string"}}, "encoding": {"description": "The compression encoding for this columnSee: http://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html", "type": "string"}, "description": {"description": "The description of the column, as specified by the table owner", "type": "string"}, "order": {"description": "Relative position of the column in the table.", "type": "integer"}, "minValue": {"description": "Smallest value in the column.", "type": "string"}, "maxValue": {"description": "Largest value in the column.", "type": "string"}, "avgValue": {"description": "Average value of the column, where applicable.", "type": "number", "format": "float"}, "stddev": {"description": "Stddev of the column, where applicable.", "type": "number", "format": "float"}, "valueDistributionPercent": {"description": "A mapping between each value in the column and the percentage of rows with that value.Only present for tables with fewer than approximately 25,000,000 rows and for columns with fewer than twenty distinct values.", "type": "object", "additionalProperties": {"type": "number"}}, "coverageCount": {"description": "Number of non-null values in the column.", "type": "integer"}, "nullCount": {"description": "Number of null values in the column.", "type": "integer"}, "possibleDependentVariableTypes": {"description": "Possible dependent variable types the column may be used to model.  Null if it may not be used as a dependent variable.", "type": "array", "items": {"type": "string"}}, "useableAsIndependentVariable": {"description": "Whether the column may be used as an independent variable to train a model.", "type": "boolean"}, "useableAsPrimaryKey": {"description": "Whether the column may be used as an primary key to identify table rows.", "type": "boolean"}, "valueDistribution": {"description": "An object mapping distinct values in the column to the number of times they appear in the column", "type": "object", "additionalProperties": {"type": "integer"}}, "distinctCount": {"description": "Number of distinct values in the column.", "type": "integer"}}}, "Object262": {"type": "object", "properties": {"id": {"type": "integer"}, "leftTableId": {"type": "integer"}, "leftIdentifier": {"type": "string"}, "rightTableId": {"type": "integer"}, "rightIdentifier": {"type": "string"}, "on": {"type": "string"}, "leftJoin": {"type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object263": {"type": "object", "properties": {"type": {"type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "joinId": {"type": "integer"}}}, "Object265": {"type": "object", "properties": {"name": {"type": "string"}}}, "Object267": {"type": "object", "properties": {"maxMatches": {"type": "integer"}, "threshold": {"type": "string"}}}, "Object266": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"description": "Information about the most recent runs of the job.", "type": "array", "items": {"$ref": "#/definitions/Object32"}}, "lastRun": {"$ref": "#/definitions/Object32"}, "hidden": {"description": "The hidden status of the object. Setting this to true hides it from most API endpoints. The object can still be queried directly by ID", "type": "boolean"}, "matchOptions": {"$ref": "#/definitions/Object267"}}}, "Object264": {"type": "object", "properties": {"sourceTableId": {"description": "Source table", "type": "integer"}, "targetType": {"description": "Target type", "type": "string"}, "targetId": {"description": "Target ID", "type": "integer"}, "target": {"$ref": "#/definitions/Object265"}, "job": {"description": "Matching job", "$ref": "#/definitions/Object266"}}}, "Object260": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object32"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "type": "object", "additionalProperties": {"type": "string"}}, "columns": {"type": "array", "items": {"$ref": "#/definitions/Object261"}}, "joins": {"type": "array", "items": {"$ref": "#/definitions/Object262"}}, "multipartKey": {"type": "array", "items": {"type": "string"}}, "enhancements": {"type": "array", "items": {"$ref": "#/definitions/Object263"}}, "viewDef": {"type": "string"}, "outgoingTableMatches": {"type": "array", "items": {"$ref": "#/definitions/Object264"}}}}, "Object268": {"type": "object", "properties": {"ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "type": "object", "additionalProperties": {"type": "string"}}, "description": {"description": "The user-defined description of the table.", "type": "string"}}}, "Object269": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object32"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object282": {"type": "object", "properties": {"id": {"description": "The ID of this group.", "type": "integer"}, "name": {"description": "The name of this group.", "type": "string"}, "organizationId": {"description": "The organization associated with this group.", "type": "integer"}}}, "Object281": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "user": {"description": "The username of this user.", "type": "string"}, "name": {"description": "The name of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "groups": {"description": "An array of all the groups this user is in.", "type": "array", "items": {"$ref": "#/definitions/Object282"}}, "createdAt": {"description": "The date and time when the user was created.", "type": "string", "format": "date-time"}, "currentSignInAt": {"description": "The date and time when the user's current session began.", "type": "string", "format": "date-time"}}}, "Object283": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "name": {"description": "This user's name.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "initials": {"description": "This user's initials.", "type": "string"}, "lastCheckedAnnouncements": {"description": "The date and time at which the user last checked their announcements.", "type": "string", "format": "date-time"}, "featureFlags": {"description": "The feature flag settings for this user.", "type": "object", "additionalProperties": {"type": "boolean"}}, "roles": {"description": "The roles this user has, listed by slug.", "type": "array", "items": {"type": "string"}}, "preferences": {"description": "This user's preferences.", "type": "object", "additionalProperties": {"type": "string"}}, "customBranding": {"description": "The branding of Platform for this user.", "type": "string"}, "groups": {"description": "An array of all the groups this user is in.", "type": "array", "items": {"$ref": "#/definitions/Object282"}}, "organizationName": {"description": "The name of the organization the user belongs to.", "type": "string"}}}, "Object284": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "user": {"description": "The username of this user.", "type": "string"}, "name": {"description": "The name of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "groups": {"description": "An array of all the groups this user is in.", "type": "array", "items": {"$ref": "#/definitions/Object282"}}, "city": {"description": "The city of this user.", "type": "string"}, "state": {"description": "The state of this user.", "type": "string"}, "timeZone": {"description": "The time zone of this user.", "type": "string"}, "initials": {"description": "The initials of this user.", "type": "string"}, "department": {"description": "The deartment of this user.", "type": "string"}, "title": {"description": "The title of this user.", "type": "string"}, "githubUsername": {"description": "The GitHub username of this user.", "type": "string"}, "prefersSmsOtp": {"description": "The preference for phone authorization of this user", "type": "string"}, "vpnEnabled": {"description": "The availability of vpn for this user.", "type": "string"}, "otpRequiredForLogin": {"description": "The two factor authorization requirement for this user.", "type": "string"}, "phone": {"description": "The phone number of this user.", "type": "string"}}}, "Object285": {"type": "object", "properties": {"id": {"description": "The ID of the API key.", "type": "integer"}, "name": {"description": "The name of the API key.", "type": "string"}, "expiresAt": {"description": "The date and time when the key expired.", "type": "string", "format": "date-time"}, "createdAt": {"description": "The date and time when the key was created.", "type": "string", "format": "date-time"}, "revokedAt": {"description": "The date and time when the key was revoked.", "type": "string", "format": "date-time"}, "lastUsedAt": {"description": "The date and time when the key was last used.", "type": "string", "format": "date-time"}, "scopes": {"description": "The scopes which the key is permissioned on.", "type": "array", "items": {"type": "string"}}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "constraintCount": {"description": "The number of constraints on the created key", "type": "integer"}}}, "Object287": {"type": "object", "properties": {"constraint": {"description": "The path matcher of the constraint.", "type": "string"}, "constraintType": {"description": "The type of constraint (exact/prefix/regex/verb).", "type": "string"}, "getAllowed": {"description": "Whether the constraint allows GET requests.", "type": "boolean"}, "headAllowed": {"description": "Whether the constraint allows HEAD requests.", "type": "boolean"}, "postAllowed": {"description": "Whether the constraint allows POST requests.", "type": "boolean"}, "putAllowed": {"description": "Whether the constraint allows PUT requests.", "type": "boolean"}, "patchAllowed": {"description": "Whether the constraint allows PATCH requests.", "type": "boolean"}, "deleteAllowed": {"description": "Whether the constraint allows DELETE requests.", "type": "boolean"}}, "required": ["constraintType"]}, "Object286": {"type": "object", "properties": {"name": {"description": "The name of the API key.", "type": "string"}, "expiresIn": {"description": "The number of seconds the key should last for.", "type": "integer"}, "constraints": {"description": "Constraints on the abilities of the created key.", "type": "array", "items": {"$ref": "#/definitions/Object287"}}}, "required": ["name", "expiresIn"]}, "Object289": {"type": "object", "properties": {"constraint": {"description": "The path matcher of the constraint.", "type": "string"}, "constraintType": {"description": "The type of constraint (exact/prefix/regex/verb).", "type": "string"}, "getAllowed": {"description": "Whether the constraint allows GET requests.", "type": "boolean"}, "headAllowed": {"description": "Whether the constraint allows HEAD requests.", "type": "boolean"}, "postAllowed": {"description": "Whether the constraint allows POST requests.", "type": "boolean"}, "putAllowed": {"description": "Whether the constraint allows PUT requests.", "type": "boolean"}, "patchAllowed": {"description": "Whether the constraint allows PATCH requests.", "type": "boolean"}, "deleteAllowed": {"description": "Whether the constraint allows DELETE requests.", "type": "boolean"}}}, "Object288": {"type": "object", "properties": {"id": {"description": "The ID of the API key.", "type": "integer"}, "name": {"description": "The name of the API key.", "type": "string"}, "expiresAt": {"description": "The date and time when the key expired.", "type": "string", "format": "date-time"}, "createdAt": {"description": "The date and time when the key was created.", "type": "string", "format": "date-time"}, "revokedAt": {"description": "The date and time when the key was revoked.", "type": "string", "format": "date-time"}, "lastUsedAt": {"description": "The date and time when the key was last used.", "type": "string", "format": "date-time"}, "scopes": {"description": "The scopes which the key is permissioned on.", "type": "array", "items": {"type": "string"}}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "constraints": {"description": "Constraints on the abilities of the created key", "type": "array", "items": {"$ref": "#/definitions/Object289"}}, "token": {"description": "The API key.", "type": "string"}}}, "Object290": {"type": "object", "properties": {"id": {"description": "The ID of the API key.", "type": "integer"}, "name": {"description": "The name of the API key.", "type": "string"}, "expiresAt": {"description": "The date and time when the key expired.", "type": "string", "format": "date-time"}, "createdAt": {"description": "The date and time when the key was created.", "type": "string", "format": "date-time"}, "revokedAt": {"description": "The date and time when the key was revoked.", "type": "string", "format": "date-time"}, "lastUsedAt": {"description": "The date and time when the key was last used.", "type": "string", "format": "date-time"}, "scopes": {"description": "The scopes which the key is permissioned on.", "type": "array", "items": {"type": "string"}}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "constraints": {"description": "Constraints on the abilities of the created key", "type": "array", "items": {"$ref": "#/definitions/Object289"}}}}, "Object292": {"type": "object", "properties": {"appIndexOrderField": {"description": "Order field for the apps index pages.", "type": "string"}, "appIndexOrderDir": {"description": "Oder direction for the apps index pages.", "type": "string"}, "resultIndexOrderField": {"description": "Order field for the results index page.", "type": "string"}, "resultIndexOrderDir": {"description": "Order direction for the results index page.", "type": "string"}, "resultIndexTypeFilter": {"description": "Type filter for the results index page.", "type": "string"}, "resultIndexAuthorFilter": {"description": "Author filter for the results index page.", "type": "string"}, "resultIndexArchivedFilter": {"description": "Archived filter for the results index page.", "type": "string"}, "importIndexOrderField": {"description": "Order field for the imports index page.", "type": "string"}, "importIndexOrderDir": {"description": "Order direction for the imports index page.", "type": "string"}, "importIndexTypeFilter": {"description": "Type filter for the imports index page.", "type": "string"}, "importIndexAuthorFilter": {"description": "Author filter for the imports index page.", "type": "string"}, "importIndexDestFilter": {"description": "Destination filter for the imports index page.", "type": "string"}, "importIndexStatusFilter": {"description": "Status filter for the imports index page.", "type": "string"}, "importIndexArchivedFilter": {"description": "Archived filter for the imports index page.", "type": "string"}, "exportIndexOrderField": {"description": "Order field for the exports index page.", "type": "string"}, "exportIndexOrderDir": {"description": "Order direction for the exports index page.", "type": "string"}, "exportIndexTypeFilter": {"description": "Type filter for the exports index page.", "type": "string"}, "exportIndexAuthorFilter": {"description": "Author filter for the exports index page.", "type": "string"}, "exportIndexStatusFilter": {"description": "Status filter for the exports index page.", "type": "string"}, "modelIndexOrderField": {"description": "Order field for the models index page.", "type": "string"}, "modelIndexOrderDir": {"description": "Order direction for the models index page.", "type": "string"}, "modelIndexAuthorFilter": {"description": "Author filter for the models index page.", "type": "string"}, "modelIndexStatusFilter": {"description": "Status filter for the models index page.", "type": "string"}, "modelIndexArchivedFilter": {"description": "Archived filter for the models index page.", "type": "string"}, "modelIndexThumbnailView": {"description": "Thumbnail view for the models index page.", "type": "string"}, "scriptIndexOrderField": {"description": "Order field for the scripts index page.", "type": "string"}, "scriptIndexOrderDir": {"description": "Order direction for the scripts index page.", "type": "string"}, "scriptIndexTypeFilter": {"description": "Type filter for the scripts index page.", "type": "string"}, "scriptIndexAuthorFilter": {"description": "Author filter for the scripts index page.", "type": "string"}, "scriptIndexStatusFilter": {"description": "Status filter for the scripts index page.", "type": "string"}, "scriptIndexArchivedFilter": {"description": "Archived filter for the scripts index page.", "type": "string"}, "projectIndexOrderField": {"description": "Order field for the projects index page.", "type": "string"}, "projectIndexOrderDir": {"description": "Order direction for the projects index page.", "type": "string"}, "projectIndexAuthorFilter": {"description": "Author filter for the projects index page.", "type": "string"}, "projectIndexArchivedFilter": {"description": "Archived filter for the projects index page.", "type": "string"}, "reportIndexThumbnailView": {"description": "Thumbnail view for the reports index page.", "type": "string"}, "projectDetailOrderField": {"description": "Order field for projects detail pages.", "type": "string"}, "projectDetailOrderDir": {"description": "Order direction for projects detail pages.", "type": "string"}, "projectDetailAuthorFilter": {"description": "Author filter for projects detail pages.", "type": "string"}, "projectDetailTypeFilter": {"description": "Type filter for projects detail pages.", "type": "string"}, "projectDetailArchivedFilter": {"description": "Arhived filter for the projects detail pages.", "type": "string"}, "enhancementIndexOrderField": {"description": "Order field for the enhancements index page.", "type": "string"}, "enhancementIndexOrderDir": {"description": "Order direction for the enhancements index page.", "type": "string"}, "enhancementIndexAuthorFilter": {"description": "Author filter for the enhancements index page.", "type": "string"}, "enhancementIndexArchivedFilter": {"description": "Archived filter for the enhancements index page.", "type": "string"}, "preferredServerId": {"description": "ID of preferred server.", "type": "integer"}, "civisExploreSkipIntro": {"description": "Whether the user is shown steps for each exploration.", "type": "boolean"}}}, "Object291": {"type": "object", "properties": {"preferences": {"description": "A hash of user selected preferences. Values should be strings or null to indicate a key deletion.", "$ref": "#/definitions/Object292"}, "lastCheckedAnnouncements": {"description": "The date and time at which the user last checked their announcements.", "type": "string", "format": "date-time"}}}}, "securityDefinitions": {"api_key": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"api_key": []}]}
{"produces": ["application/json"], "paths": {"/users/me": {"patch": {"parameters": [{"required": false, "schema": {"$ref": "#/definitions/Object237"}, "name": "Object237", "in": "body"}], "summary": "Update info about the logged-in user", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}, "get": {"parameters": [], "summary": "Show info about the logged-in user", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}}, "/imports/{id}/syncs": {"post": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object58"}, "name": "Object58", "in": "body"}], "summary": "Create a sync", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object43"}}}}}, "/scripts/python3/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a python docker belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/surveys/{id}": {"get": {"parameters": [{"description": "Survey ID", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a survey", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object186"}}}}}, "/templates/reports/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/imports/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a JobTypes::Import belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/templates/scripts/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/python3/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object171"}, "name": "Object171", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object145"}}}}}, "/match_targets/": {"get": {"parameters": [], "summary": "List match targets", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object67"}, "type": "array"}}}}}, "/templates/reports/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/templates/scripts/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object222"}, "name": "Object222", "in": "body"}], "summary": "Create a Script Template", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object223"}}}}, "get": {"parameters": [{"description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to name. Must be one of: name, updated_at, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List Script Templates", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object221"}, "type": "array"}}}}}, "/scripts/javascript/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a scripted sql to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a scripted sql from a project", "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The slug for the application.", "required": true, "type": "string", "name": "slug", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object7"}, "name": "Object7", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object8"}}}}}, "/credentials/authenticate": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object19"}, "name": "Object19", "in": "body"}], "summary": "Authenticate against a remote host", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}}, "/remote_hosts/{id}/data_sets": {"get": {"parameters": [{"description": "The ID of the remote host.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The credential ID.", "required": false, "type": "integer", "name": "credential_id", "in": "query"}, {"description": "The user name for remote host.", "required": false, "type": "string", "name": "username", "in": "query"}, {"description": "The password for remote host.", "required": false, "type": "string", "name": "password", "in": "query"}, {"description": "The query string for data set.", "required": false, "type": "string", "name": "q", "in": "query"}, {"description": "If true will only return schemas, otherwise, the results will be the full path.", "required": false, "type": "boolean", "name": "s", "in": "query"}], "summary": "List data sets available from a remote host", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object110"}, "type": "array"}}}}}, "/imports/{id}/syncs/{sync_id}": {"put": {"parameters": [{"description": "The ID of the import to fetch.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the sync to fetch.", "required": true, "type": "integer", "name": "sync_id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object62"}, "name": "Object62", "in": "body"}], "summary": "Update a sync", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object43"}}}}, "delete": {"parameters": [{"description": "The ID of the import to fetch.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the sync to fetch.", "required": true, "type": "integer", "name": "sync_id", "in": "path"}], "summary": "Delete a sync", "responses": {"204": {"description": "success"}}}}, "/imports/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/runs/{run_id}/logs": {"get": {"parameters": [{"description": "The ID of the custom.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}, {"description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "required": false, "type": "integer", "name": "last_id", "in": "query"}, {"description": "The maximum number of log messages to return. Default of 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}], "summary": "Get the logs for a run", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object163"}, "type": "array"}}}}}, "/scripts/javascript/{id}": {"put": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object156"}, "name": "Object156", "in": "body"}], "summary": "Replace all attributes of this JavaScript Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object155"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a JavaScript Script", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object157"}, "name": "Object157", "in": "body"}], "summary": "Update some attributes of this JavaScript Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object155"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a JavaScript Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object155"}}}}}, "/tables/{source_table_id}/enhancements/table-matchings/{id}": {"get": {"parameters": [{"description": "The ID of the enhancement.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the table that was enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}], "summary": "View a table matching enhancement", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object205"}}}}}, "/surveys/samples/{id}": {"put": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object183"}, "name": "Object183", "in": "body"}], "summary": "Update a sample", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object178"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a sample", "responses": {"204": {"description": "success"}}}}, "/endpoints/": {"get": {"parameters": [], "summary": "List API endpoints", "responses": {"200": {"description": "success"}}}}, "/predictions/{id}": {"patch": {"parameters": [{"description": "The ID of the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object88"}, "name": "Object88", "in": "body"}], "summary": "Update a prediction", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object83"}}}}, "get": {"parameters": [{"description": "The ID of the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show the specified prediction", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object83"}}}}}, "/scripts/containers/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a container docker to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a container docker from a project", "responses": {"204": {"description": "success"}}}}, "/reports/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/templates/reports/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/r": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object150"}, "name": "Object150", "in": "body"}], "summary": "Create an R Script", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}}, "/scripts/containers/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/models/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/files/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a Data::S3File belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/scripts/python3/{id}/runs": {"post": {"parameters": [{"description": "The ID of the python.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object165"}}}}, "get": {"parameters": [{"description": "The ID of the python.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given python", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object165"}, "type": "array"}}}}}, "/models/{id}/predictions": {"put": {"parameters": [{"description": "The ID of the model to which to apply the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object78"}, "name": "Object78", "in": "body"}], "summary": "Add a table on which to apply the predictive model", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object72"}}}}}, "/credentials/{id}": {"put": {"parameters": [{"description": "The ID of the credential.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object18"}, "name": "Object18", "in": "body"}], "summary": "Update an existing credential", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}, "get": {"parameters": [{"description": "The ID of the credential.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a credential", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}}, "/scripts/sql/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/users/{id}/api_keys": {"post": {"parameters": [{"description": "The ID of the user or 'me'.", "required": true, "type": "string", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object232"}, "name": "Object232", "in": "body"}], "summary": "Create a new API key belonging to the logged-in user", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object234"}}}}, "get": {"parameters": [{"description": "The ID of the user or 'me'.", "required": true, "type": "string", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to its maximum of 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "Show API keys belonging to the specified user", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object231"}, "type": "array"}}}}}, "/queries/{id}/scripts/{script_id}": {"put": {"parameters": [{"description": "The query ID.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the script associated with this query.", "required": true, "type": "integer", "name": "script_id", "in": "path"}], "summary": "Update the query's associated script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object107"}}}}}, "/jobs/{id}": {"get": {"parameters": [{"description": "The ID for this job.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show basic job info", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object64"}}}}}, "/tables/{id}/enhance": {"post": {"parameters": [{"description": "ID of table to enhance", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object198"}, "name": "Object198", "in": "body"}], "summary": "Run an enhancement on a table, deprecated use \"POST /tables/:source_table_id/enhancements/<enhancement-type>\" instead", "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}": {"put": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object147"}, "name": "Object147", "in": "body"}], "summary": "Replace all attributes of this Python Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object145"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a Python Script", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object148"}, "name": "Object148", "in": "body"}], "summary": "Update some attributes of this Python Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object145"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a Python Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object145"}}}}}, "/scripts/custom/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/custom/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the custom.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the custom.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object168"}}}}}, "/codes/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object12"}, "name": "Object12", "in": "body"}], "summary": "Create a new code", "responses": {"204": {"description": "success"}}}, "get": {"parameters": [{"description": "The maximum number of codes to return.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "The code's type; e.g., Code::FrontEnd.", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "If true, return featured codes.", "required": false, "type": "boolean", "name": "featured", "in": "query"}], "summary": "List codes", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object10"}, "type": "array"}}}}}, "/scripts/containers": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object131"}, "name": "Object131", "in": "body"}], "summary": "Create a container", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object133"}}}}}, "/databases/{id}/whitelist-ips": {"post": {"parameters": [{"description": "The ID of the database this rule is applied to.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object29"}, "name": "Object29", "in": "body"}], "summary": "Whitelist an IP address", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object28"}}}}, "get": {"parameters": [{"description": "The ID for the database.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List whitelisted IPs for the specified database", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object27"}, "type": "array"}}}}}, "/remote_hosts/{id}/authenticate": {"post": {"parameters": [{"description": "The ID of the remote host.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object109"}, "name": "Object109", "in": "body"}], "summary": "Authenticate against a remote host using either a credential or a user name and password", "responses": {"204": {"description": "success"}}}}, "/users/{id}": {"get": {"parameters": [{"description": "The ID of this user.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show info about a user", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object229"}}}}}, "/imports/{id}/runs": {"post": {"parameters": [{"description": "The ID of the import to run.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Run an import", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object57"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get the run history of this import", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object25"}, "type": "array"}}}}}, "/tables/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object196"}, "name": "Object196", "in": "body"}], "summary": "Import a file into a table", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object197"}}}}, "get": {"parameters": [{"description": "The ID of the database.", "required": false, "type": "integer", "name": "database_id", "in": "query"}, {"description": "If specified, will be used to filter the tables returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"schema=%census%\" will return both \"client_census.table\" and \"census_2010.table\").", "required": false, "type": "string", "name": "schema", "in": "query"}, {"description": "If specified, will be used to filter the tables returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"name=%table%\" will return both \"table1\" and \"my table\").", "required": false, "type": "string", "name": "name", "in": "query"}, {"description": "If specified, will be used to filter the tables returned. Will search across schema and name (in the full form schema.name) and will return any full name containing the search string.", "required": false, "type": "string", "name": "search", "in": "query"}, {"description": "Number of results to return. Defaults to its maximum of 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to schema. Must be one of: schema, name, search.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List tables", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object24"}, "type": "array"}}}}}, "/notifications/": {"get": {"parameters": [{"description": "allows browser to keep track of last event fired", "required": false, "type": "string", "name": "last_event_id", "in": "query"}, {"description": "specifies retry/reconnect timeout", "required": false, "type": "string", "name": "r", "in": "query"}, {"description": "used for testing", "required": false, "type": "string", "name": "mock", "in": "query"}], "summary": "Receive a stream of notifications as they come in", "responses": {"200": {"description": "success"}}}}, "/codes/{id}": {"put": {"parameters": [{"description": "The ID for this code.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object13"}, "name": "Object13", "in": "body"}], "summary": "Update a code", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object11"}}}}, "delete": {"parameters": [{"description": "The ID for this code.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a code", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for this code.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object14"}, "name": "Object14", "in": "body"}], "summary": "Update a code", "responses": {"204": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID for this code.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show basic code info", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object11"}}}}}, "/scripts/containers/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the container.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the container.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object164"}}}}}, "/jobs/{id}/runs": {"post": {"parameters": [{"description": "The ID for this job.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Run a job", "responses": {"204": {"description": "success"}}}}, "/databases/": {"get": {"parameters": [], "summary": "List databases", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object22"}, "type": "array"}}}}}, "/imports/{id}": {"put": {"parameters": [{"description": "The ID for the import.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object56"}, "name": "Object56", "in": "body"}], "summary": "Update an import", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object39"}}}}, "get": {"parameters": [{"description": "The ID for the import.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get details about an import", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object55"}}}}}, "/scripts/python3/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/models/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/custom/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object174"}, "name": "Object174", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object160"}}}}}, "/scripts/python3/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/children": {"get": {"parameters": [{"description": "The ID for this job.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show nested tree of children that this job triggers", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object66"}}}}}, "/results/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object117"}, "name": "Object117", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/templates/scripts/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/users/": {"get": {"parameters": [{"description": "Return users that have a feature flag enabled.", "required": false, "type": "string", "name": "feature_flag", "in": "query"}, {"description": "The account status by which to filter users. May be one of \"active\", \"inactive\", or \"all\".", "required": false, "type": "string", "name": "account_status", "in": "query"}, {"description": "Return users who match the given query, based on name, user, and email.", "required": false, "type": "string", "name": "query", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to name. Must be one of: name, user.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List users", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object226"}, "type": "array"}}}}}, "/models/{id}": {"patch": {"parameters": [{"description": "The ID of the model.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object75"}, "name": "Object75", "in": "body"}], "summary": "Update model configuration", "responses": {"204": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the model.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Retrieve model configuration", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object70"}}}}}, "/scripts/javascript/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/r/{id}/runs/{run_id}/logs": {"get": {"parameters": [{"description": "The ID of the r.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}, {"description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "required": false, "type": "integer", "name": "last_id", "in": "query"}, {"description": "The maximum number of log messages to return. Default of 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}], "summary": "Get the logs for a run", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object163"}, "type": "array"}}}}}, "/jobs/{id}/trigger_email": {"post": {"parameters": [{"description": "The ID for this job.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Generate and retrieve trigger email address", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object65"}}}}}, "/reports/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/users/me/api_accesses": {"get": {"parameters": [{"description": "Number of results to return. Defaults to its maximum of 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "Show API accesses made by or on behalf of the logged-in user", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object230"}, "type": "array"}}}}}, "/scripts/javascript/{id}/runs": {"post": {"parameters": [{"description": "The ID of the javascript.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object167"}}}}, "get": {"parameters": [{"description": "The ID of the javascript.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given javascript", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object167"}, "type": "array"}}}}}, "/tables/{source_table_id}/enhancements/prepared-matchings/{id}": {"get": {"parameters": [{"description": "The ID of the enhancement.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the table that was enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}], "summary": "View a prepared matching enhancement", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object203"}}}}}, "/surveys/samples": {"post": {"parameters": [{"required": false, "schema": {"$ref": "#/definitions/Object177"}, "name": "Object177", "in": "body"}], "summary": "Create a sample", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object178"}}}}, "get": {"parameters": [], "summary": "List samples", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object175"}, "type": "array"}}}}}, "/models/{id}/schedules": {"put": {"parameters": [{"description": "The ID of the model associated with this schedule.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object80"}, "name": "Object80", "in": "body"}], "summary": "Schedule the model build", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object79"}}}}, "get": {"parameters": [{"description": "The ID of the model associated with this schedule.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show the model build schedule", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object79"}}}}}, "/scripts/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object121"}, "name": "Object121", "in": "body"}], "summary": "Create a script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object123"}}}}, "get": {"parameters": [{"description": "If specified, return objects of these types. The valid types are 'sql', 'python3', 'r', and 'javascript'.", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "If specified, return objects from this author.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "If specified, returns objects with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "required": false, "type": "string", "name": "status", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List scripts", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object138"}, "type": "array"}}}}}, "/scripts/containers/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/runs/{run_id}/logs": {"get": {"parameters": [{"description": "The ID of the javascript.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}, {"description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "required": false, "type": "integer", "name": "last_id", "in": "query"}, {"description": "The maximum number of log messages to return. Default of 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}], "summary": "Get the logs for a run", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object163"}, "type": "array"}}}}}, "/templates/reports/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/imports/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/types": {"get": {"parameters": [], "summary": "List available script types", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object118"}, "type": "array"}}}}}, "/tables/{source_table_id}/enhancements/cass-ncoa": {"post": {"parameters": [{"description": "The ID of the table to be enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object200"}, "name": "Object200", "in": "body"}], "summary": "Standardize addresses in a table", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object201"}}}}}, "/imports/files/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the import.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the import.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object54"}}}}}, "/templates/scripts/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/predictions/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object89"}}}}}, "/results/{id}/grants": {"delete": {"parameters": [{"description": "The ID of this report.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Revoke permisstion for this report to perform Civis platform API operations on your behalf", "responses": {"204": {"description": "success"}}}, "post": {"parameters": [{"description": "The ID of this report.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Grant this report the ability to perform Civis platform API operations on your behalf", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/users/{id}/api_keys/{key_id}": {"delete": {"parameters": [{"description": "The ID of the user or 'me'.", "required": true, "type": "string", "name": "id", "in": "path"}, {"description": "The ID of the API key.", "required": true, "type": "integer", "name": "key_id", "in": "path"}], "summary": "Revoke the specified API key", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object236"}}}}, "get": {"parameters": [{"description": "The ID of the user or 'me'.", "required": true, "type": "string", "name": "id", "in": "path"}, {"description": "The ID of the API key.", "required": true, "type": "integer", "name": "key_id", "in": "path"}], "summary": "Show the specified API key", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object236"}}}}}, "/projects/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/announcements/": {"get": {"parameters": [{"description": "Number of results to return. Defaults to 10. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to released_at. Must be one of: released_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List announcements", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object0"}, "type": "array"}}}}}, "/results/": {"post": {"parameters": [{"required": false, "schema": {"$ref": "#/definitions/Object115"}, "name": "Object115", "in": "body"}], "summary": "Create a report", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}, "get": {"parameters": [{"description": "If specified, return report of these types. It accepts a comma-separated list, possible values are 'tableau', 'other'.", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "If specified, return reports from this author. It accepts a comma-separated list of author ids.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "If specified, return reports using the provided Template.", "required": false, "type": "integer", "name": "template_id", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List the reports visible to the current user", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object111"}, "type": "array"}}}}}, "/tables/{source_table_id}/enhancements/prepared-matchings": {"post": {"parameters": [{"description": "The ID of the table to be enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object202"}, "name": "Object202", "in": "body"}], "summary": "Match person records against a dynamo table prepared by Civis", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object203"}}}}}, "/imports/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object38"}, "name": "Object38", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object39"}}}}}, "/files/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/apps/{slug}/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}, {"description": "The slug for the application.", "required": true, "type": "string", "name": "slug", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/models/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a models belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/imports/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/models/{id}/builds": {"post": {"parameters": [{"description": "The ID of the model.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a build", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object76"}}}}, "get": {"parameters": [{"description": "The ID of the model.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List builds for the given model", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object76"}, "type": "array"}}}}}, "/imports/files/{id}/runs": {"post": {"parameters": [{"description": "The ID of the import.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object54"}}}}, "get": {"parameters": [{"description": "The ID of the import.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given import", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object54"}, "type": "array"}}}}}, "/scripts/python3/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/containers/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/custom/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/projects/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}, {"description": "The slug for the application.", "required": true, "type": "string", "name": "slug", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/projects/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object90"}, "name": "Object90", "in": "body"}], "summary": "Create a project", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object91"}}}}, "get": {"parameters": [{"description": "If specified, return projects owned by this author. It accepts a comma-separated list of author ids.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only projects for which the current user has that permission.", "required": false, "type": "string", "name": "permission", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 1000.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List projects", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/predictions/{id}/schedules": {"put": {"parameters": [{"description": "ID of the prediction associated with this schedule.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object87"}, "name": "Object87", "in": "body"}], "summary": "Schedule the prediction", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object86"}}}}, "get": {"parameters": [{"description": "ID of the prediction associated with this schedule.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show the prediction schedule", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object86"}}}}}, "/results/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a Report to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a Report from a project", "responses": {"204": {"description": "success"}}}}, "/ontology/": {"get": {"parameters": [{"description": "A subset of fields to return.", "required": false, "type": "string", "name": "subset", "in": "query"}], "summary": "List the ontology of column names Civis uses", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object81"}, "type": "array"}}}}}, "/queries/{id}/runs": {"post": {"parameters": [{"description": "The ID of the query.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object104"}}}}, "get": {"parameters": [{"description": "The ID of the query.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given query", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object104"}, "type": "array"}}}}}, "/jobs/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/python3/{id}/runs/{run_id}/logs": {"get": {"parameters": [{"description": "The ID of the python.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}, {"description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "required": false, "type": "integer", "name": "last_id", "in": "query"}, {"description": "The maximum number of log messages to return. Default of 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}], "summary": "Get the logs for a run", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object163"}, "type": "array"}}}}}, "/scripts/r/{id}": {"put": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object152"}, "name": "Object152", "in": "body"}], "summary": "Replace all attributes of this R Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete an R Script", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object153"}, "name": "Object153", "in": "body"}], "summary": "Update some attributes of this R Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get an R Script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}}, "/scripts/sql/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object169"}, "name": "Object169", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object140"}}}}}, "/scripts/custom/{id}": {"put": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object161"}, "name": "Object161", "in": "body"}], "summary": "Replace all attributes of this CustomScript", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object160"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a CustomScript", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object161"}, "name": "Object161", "in": "body"}], "summary": "Update some attributes of this CustomScript", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object160"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a CustomScript", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object160"}}}}}, "/imports/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/sql": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object139"}, "name": "Object139", "in": "body"}], "summary": "Create a SQL script", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object140"}}}}}, "/scripts/custom/{id}/runs": {"post": {"parameters": [{"description": "The ID of the custom.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object168"}}}}, "get": {"parameters": [{"description": "The ID of the custom.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given custom", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object168"}, "type": "array"}}}}}, "/files/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/runs": {"post": {"parameters": [{"description": "The ID of the sql.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object162"}}}}, "get": {"parameters": [{"description": "The ID of the sql.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given sql", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object162"}, "type": "array"}}}}}, "/scripts/r/{id}/runs": {"post": {"parameters": [{"description": "The ID of the r.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object166"}}}}, "get": {"parameters": [{"description": "The ID of the r.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given r", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object166"}, "type": "array"}}}}}, "/templates/scripts/{id}": {"put": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object224"}, "name": "Object224", "in": "body"}], "summary": "Replace all attributes of this Script Template", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object223"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a Script Template", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object225"}, "name": "Object225", "in": "body"}], "summary": "Update some attributes of this Script Template", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object223"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a Script Template", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object223"}}}}}, "/scripts/javascript": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object154"}, "name": "Object154", "in": "body"}], "summary": "Create a JavaScript Script", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object155"}}}}}, "/scripts/sql/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/tables/{source_table_id}/enhancements/cass-ncoa/{id}": {"get": {"parameters": [{"description": "The ID of the enhancement.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the table that was enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}], "summary": "View the status of a CASS / NCOA table enhancement", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object201"}}}}}, "/scripts/custom": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object159"}, "name": "Object159", "in": "body"}], "summary": "Create a CustomScript", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object160"}}}}, "get": {"parameters": [{"description": "The template script that this app uses.", "required": false, "type": "integer", "name": "from_template_id", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to its maximum of 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List Custom Scripts", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object158"}, "type": "array"}}}}}, "/groups/": {"get": {"parameters": [{"description": "Number of results to return. Defaults to 50. Maximum allowed is 500.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to name. Must be one of: name, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List Groups", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object37"}, "type": "array"}}}}}, "/files/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a Data::S3File to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a Data::S3File from a project", "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object170"}, "name": "Object170", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object133"}}}}}, "/scripts/custom/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/sql/{id}/runs/{run_id}/logs": {"get": {"parameters": [{"description": "The ID of the sql.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}, {"description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "required": false, "type": "integer", "name": "last_id", "in": "query"}, {"description": "The maximum number of log messages to return. Default of 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}], "summary": "Get the logs for a run", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object163"}, "type": "array"}}}}}, "/scripts/python3": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object143"}, "name": "Object143", "in": "body"}], "summary": "Create a Python Script", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object145"}}}}}, "/jobs/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a Job to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a Job from a project", "responses": {"204": {"description": "success"}}}}, "/jobs/": {"get": {"parameters": [{"description": "The maximum number of jobs to return.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "The job's state. One or more of queued, running, succeeded, failed, and cancelled. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "required": false, "type": "string", "name": "state", "in": "query"}, {"description": "The job's type. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "Query string to search on the id, name, and job type", "required": false, "type": "string", "name": "q", "in": "query"}, {"description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only jobs for which the current user has that permission.", "required": false, "type": "string", "name": "permission", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}], "summary": "List jobs", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object63"}, "type": "array"}}}}}, "/scripts/containers/{id}": {"put": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object135"}, "name": "Object135", "in": "body"}], "summary": "Edit a container", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object133"}}}}, "delete": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a container", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object136"}, "name": "Object136", "in": "body"}], "summary": "Update a container", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object133"}}}}, "get": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "View a container", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object133"}}}}}, "/models/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a models to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a models from a project", "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The slug for the application.", "required": true, "type": "string", "name": "slug", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object5"}, "name": "Object5", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/queries/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object105"}, "name": "Object105", "in": "body"}], "summary": "Execute a query", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object106"}}}}, "get": {"parameters": [{"description": "The database ID.", "required": false, "type": "integer", "name": "database_id", "in": "query"}, {"description": "The author of the query.", "required": false, "type": "integer", "name": "author_id", "in": "query"}, {"required": false, "name": "created_before", "format": "date-time", "description": "An upper bound for the creation date of the query.", "type": "string", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List all queries", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object103"}, "type": "array"}}}}}, "/queries/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the query.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the query.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object104"}}}}}, "/databases/{id}/tables": {"get": {"parameters": [{"description": "The ID of the database.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "If specified, will be used to filter the tables returned. Substring matching is supported (e.g., \"name=table\" will return both \"table1\" and \"my table\").", "required": false, "type": "string", "name": "name", "in": "query"}, {"description": "Number of results to return. Defaults to 200. Maximum allowed is 1000.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to name. Must be one of: name.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List tables in the specified database, deprecated use \"GET /tables\" instead", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object24"}, "type": "array"}}}}}, "/scripts/javascript/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/files/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/templates/scripts/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/imports/files": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object52"}, "name": "Object52", "in": "body"}], "summary": "Initate an import of a tabular file into the platform", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object53"}}}}}, "/scripts/r/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/results/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a r docker to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a r docker from a project", "responses": {"204": {"description": "success"}}}}, "/results/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a Job belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/files/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object32"}, "name": "Object32", "in": "body"}], "summary": "Initiate an upload of a file into the platform", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object33"}}}}}, "/queries/{id}": {"get": {"parameters": [{"description": "The query ID.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get details about a query", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object107"}}}}}, "/models/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/tables/{id}/refresh": {"post": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Request a refresh for column and table statistics", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object206"}}}}}, "/scripts/r/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a r docker belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/predictions/{id}/runs": {"post": {"parameters": [{"description": "The ID of the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object89"}}}}, "get": {"parameters": [{"description": "The ID of the prediction.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given prediction", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object89"}, "type": "array"}}}}}, "/tables/{source_table_id}/enhancements/geocodings": {"post": {"parameters": [{"description": "The ID of the table to be enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}], "summary": "Geocode a table", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}}, "/surveys/": {"get": {"parameters": [], "summary": "List of surveys", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object184"}, "type": "array"}}}}}, "/tables/{source_table_id}/enhancements/geocodings/{id}": {"get": {"parameters": [{"description": "The ID of the enhancement.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the table that was enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}], "summary": "View the status of a geocoding table enhancement", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object199"}}}}}, "/imports/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a JobTypes::Import to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a JobTypes::Import from a project", "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/containers/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/templates/scripts/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a container docker belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/models/types": {"get": {"parameters": [], "summary": "List all available model types", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object68"}, "type": "array"}}}}}, "/scripts/sql/{id}": {"put": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object141"}, "name": "Object141", "in": "body"}], "summary": "Replace all attributes of this SQL script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object140"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a SQL script", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object142"}, "name": "Object142", "in": "body"}], "summary": "Update some attributes of this SQL script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object140"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a SQL script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object140"}}}}}, "/jobs/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/files/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/imports/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/reports/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object117"}, "name": "Object117", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/models/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/projects/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object102"}, "name": "Object102", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object91"}}}}}, "/templates/reports/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object217"}, "name": "Object217", "in": "body"}], "summary": "Create a Report Template", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object218"}}}}, "get": {"parameters": [{"description": "A category to filter results by, one of: dataset-viz", "required": false, "type": "string", "name": "category", "in": "query"}, {"description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to name. Must be one of: name, updated_at, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List Report Templates", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object216"}, "type": "array"}}}}}, "/models/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object77"}, "name": "Object77", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object70"}}}}}, "/scripts/javascript/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object173"}, "name": "Object173", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object155"}}}}}, "/reports/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a Report to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a Report from a project", "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/templates/scripts/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a Template::Script belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/results/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/projects/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/jobs/{id}/parents": {"get": {"parameters": [{"description": "The ID for this job.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show chain of parents as a list that this job triggers from", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object64"}}}}}, "/projects/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/models/": {"post": {"parameters": [{"required": false, "schema": {"$ref": "#/definitions/Object69"}, "name": "Object69", "in": "body"}], "summary": "Create new configuration for a model", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object70"}}}}, "get": {"parameters": [{"description": "If specified, will be used to filter the models returned. Substring matching is supported. (e.g., \"modelName=model\" will return both \"model1\" and \"my model\").", "required": false, "type": "string", "name": "model_name", "in": "query"}, {"description": "If specified, will be used to filter the models returned by the training dataset table name. Substring matching is supported. (e.g., \"trainingTableName=table\" will return both \"table1\" and \"my_table\").", "required": false, "type": "string", "name": "training_table_name", "in": "query"}, {"description": "If specified, will be used to filter the models returned by the dependent variable column name. Substring matching is supported. (e.g., \"dependentVariable=predictor\" will return both \"predictor\" and \"my predictor\").", "required": false, "type": "string", "name": "dependent_variable", "in": "query"}, {"description": "If specified, return models from this author. It accepts a comma-separated list of author ids.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "If specified, returns models with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "required": false, "type": "string", "name": "status", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to its maximum of 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, model_name, created_at, name, last_run.updated_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List models", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object73"}, "type": "array"}}}}}, "/scripts/{id}/run": {"post": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Run a script", "responses": {"204": {"description": "success"}}}}, "/reports/{id}": {"patch": {"parameters": [{"description": "The ID of the report to modify.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object116"}, "name": "Object116", "in": "body"}], "summary": "Update a report", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}, "get": {"parameters": [{"description": "The ID of this report.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show a single report", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/tables/{source_table_id}/enhancements/table-matchings": {"post": {"parameters": [{"description": "The ID of the table to be enhanced.", "required": true, "type": "integer", "name": "source_table_id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object204"}, "name": "Object204", "in": "body"}], "summary": "Match person records against an arbitrary Redshift table", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object205"}}}}}, "/remote_hosts/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object17"}, "name": "Object17", "in": "body"}], "summary": "Create a new remote host", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object108"}}}}, "get": {"parameters": [{"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "required": false, "type": "string", "name": "type", "in": "query"}], "summary": "List the remote hosts", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object108"}, "type": "array"}}}}}, "/results/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/apps/{slug}/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The slug for the application.", "required": true, "type": "string", "name": "slug", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/{id}/history": {"get": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get the run history and outputs of this script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object119"}}}}}, "/reports/{id}/grants": {"delete": {"parameters": [{"description": "The ID of this report.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Revoke permisstion for this report to perform Civis platform API operations on your behalf", "responses": {"204": {"description": "success"}}}, "post": {"parameters": [{"description": "The ID of this report.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Grant this report the ability to perform Civis platform API operations on your behalf", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/models/{id}/builds/{build_id}": {"delete": {"parameters": [{"description": "The ID of the model.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the build.", "required": true, "type": "integer", "name": "build_id", "in": "path"}], "summary": "Cancel a build", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the model.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the build.", "required": true, "type": "integer", "name": "build_id", "in": "path"}], "summary": "Check status of a build", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object76"}}}}}, "/scripts/sql/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a scripts belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/results/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/python3/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a python docker to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a python docker from a project", "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the javascript.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the javascript.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object167"}}}}}, "/scripts/sql/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a scripts to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a scripts from a project", "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/models/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object36"}, "name": "Object36", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/custom/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a Job to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a Job from a project", "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the python.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the python.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object165"}}}}}, "/files/{id}": {"get": {"parameters": [{"description": "The ID of the file object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get details about a file", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object34"}}}}}, "/scripts/sql/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/databases/{id}/tables-search": {"get": {"parameters": [{"description": "The ID of the database.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "If specified, will be used to filter the tables returned. Substring matching is supported (e.g., \"name=table\" will return both \"table1\" and \"my table\").", "required": false, "type": "string", "name": "name", "in": "query"}, {"description": "Search for tables containing a column with the given name.", "required": false, "type": "string", "name": "column_name", "in": "query"}], "summary": "List tables in the specified database, deprecated use \"GET /tables\" instead", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object26"}, "type": "array"}}}}}, "/databases/{id}/schemas": {"get": {"parameters": [{"description": "The ID of the database.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List schemas in this database", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object23"}, "type": "array"}}}}}, "/templates/scripts/{id}/projects/{project_id}": {"put": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Add a Template::Script to a project", "responses": {"204": {"description": "success"}}}, "delete": {"parameters": [{"description": "ID of the resource", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the project", "required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Remove a Template::Script from a project", "responses": {"204": {"description": "success"}}}}, "/results/{id}": {"patch": {"parameters": [{"description": "The ID of the report to modify.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object116"}, "name": "Object116", "in": "body"}], "summary": "Update a report", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}, "get": {"parameters": [{"description": "The ID of this report.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show a single report", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}}, "/tables/{id}/columns": {"get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Search for columns with the given name, within the specified table.", "required": false, "type": "string", "name": "name", "in": "query"}, {"description": "Number of results to return. Defaults to its maximum of 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to name. Must be one of: name, order.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List columns in the specified table", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object207"}, "type": "array"}}}}}, "/reports/": {"post": {"parameters": [{"required": false, "schema": {"$ref": "#/definitions/Object115"}, "name": "Object115", "in": "body"}], "summary": "Create a report", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object114"}}}}, "get": {"parameters": [{"description": "If specified, return report of these types. It accepts a comma-separated list, possible values are 'tableau', 'other'.", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "If specified, return reports from this author. It accepts a comma-separated list of author ids.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "If specified, return reports using the provided Template.", "required": false, "type": "integer", "name": "template_id", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List the reports visible to the current user", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object111"}, "type": "array"}}}}}, "/apps/{slug}/{id}/shares/groups": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The slug for the application.", "required": true, "type": "string", "name": "slug", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object6"}, "name": "Object6", "in": "body"}], "summary": "Set the permissions groups has on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/python3/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a Job belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/projects/{project_id}": {"put": {"parameters": [{"required": true, "type": "integer", "name": "project_id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object101"}, "name": "Object101", "in": "body"}], "summary": "Update a project", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object91"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Delete a project", "responses": {"204": {"description": "success"}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "project_id", "in": "path"}], "summary": "Get a detailed view of a project and the objects in it", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object91"}}}}}, "/templates/reports/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/credentials/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object16"}, "name": "Object16", "in": "body"}], "summary": "Create or update a credential", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}, "get": {"parameters": [{"description": "The type (or types) of credentials to return. One or more of: Amazon Web Services S3, BSD::API, CASS/NCOA PAF, Catalist::API, Catalist::SFTP, Certificate, Civis Platform, Custom, Database, Google, Github, JobTraits::Ftp, Salesforce User, Salesforce Client, Silverpop Application, Silverpop Refresh Token, Silverpop User, TableauUser, VAN::MyVoterFile, VAN::MyCampaign, and VAN::BothModes. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "required": false, "type": "string", "name": "type", "in": "query"}], "summary": "List credentials", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object15"}, "type": "array"}}}}}, "/exports/": {"get": {"parameters": [{"description": "If specified, return exports of these types. It accepts a comma-separated list, possible values are 'database', 'script'.", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "If specified, return exports from this author. It accepts a comma-separated list of author ids.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "If specified, returns export with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "required": false, "type": "string", "name": "status", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List exports", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object30"}, "type": "array"}}}}}, "/scripts/r/{id}/archive": {"put": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object172"}, "name": "Object172", "in": "body"}], "summary": "Update the archive status of this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}}, "/templates/reports/{id}": {"put": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object219"}, "name": "Object219", "in": "body"}], "summary": "Replace all attributes of this Report Template", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object218"}}}}, "delete": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a Report Template", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object220"}, "name": "Object220", "in": "body"}], "summary": "Update some attributes of this Report Template", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object218"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get a Report Template", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object218"}}}}}, "/files/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the r.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the r.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object166"}}}}}, "/results/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a Report belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/reports/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a Report belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/surveys/{survey_id}/returns": {"post": {"parameters": [{"description": "The ID of the survey.", "required": true, "type": "integer", "name": "survey_id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object194"}, "name": "Object194", "in": "body"}], "summary": "Create a survey fielding return", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}, "get": {"parameters": [{"description": "The ID of the survey.", "required": true, "type": "integer", "name": "survey_id", "in": "path"}], "summary": "List survey fielding returns", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object192"}, "type": "array"}}}}}, "/scripts/containers/{id}/runs": {"post": {"parameters": [{"description": "The ID of the container.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Start a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object164"}}}}, "get": {"parameters": [{"description": "The ID of the container.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List runs for the given container", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object164"}, "type": "array"}}}}}, "/reports/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/tables/{id}": {"patch": {"parameters": [{"description": "The ID of the table.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object214"}, "name": "Object214", "in": "body"}], "summary": "Update a table", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object215"}}}}, "get": {"parameters": [{"required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Show basic table info", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object206"}}}}}, "/imports/": {"post": {"parameters": [{"required": true, "schema": {"$ref": "#/definitions/Object48"}, "name": "Object48", "in": "body"}], "summary": "Create a new import configuration", "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object39"}}}}, "get": {"parameters": [{"description": "If specified, return imports of these types. It accepts a comma-separated list, possible values are 'AutoImport', 'DbSync', 'Salesforce', 'GdocImport'.", "required": false, "type": "string", "name": "type", "in": "query"}, {"description": "If specified, return imports from this author. It accepts a comma-separated list of author ids.", "required": false, "type": "string", "name": "author", "in": "query"}, {"description": "If specified, returns imports with one of these destinations. It accepts a comma-separated list of remote host ids.", "required": false, "type": "string", "name": "destination", "in": "query"}, {"description": "If specified, returns imports with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "required": false, "type": "string", "name": "status", "in": "query"}, {"description": "The archival status of the requested object(s).", "required": false, "type": "string", "name": "archived", "in": "query"}, {"description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "required": false, "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number of the results to return. Defaults to the first page, 1.", "required": false, "type": "integer", "name": "page_num", "in": "query"}, {"description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "required": false, "type": "string", "name": "order", "in": "query"}, {"description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "required": false, "type": "string", "name": "order_dir", "in": "query"}], "summary": "List imports", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object47"}, "type": "array"}}}}}, "/scripts/{id}": {"delete": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Delete a script", "responses": {"204": {"description": "success"}}}, "patch": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object127"}, "name": "Object127", "in": "body"}], "summary": "Update a script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object129"}}}}, "get": {"parameters": [{"description": "The ID for the script.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Get details about a script", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object129"}}}}}, "/scripts/{id}/cancel": {"post": {"parameters": [{"description": "The ID of the job.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object130"}}}}}, "/scripts/sql/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/r/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/predictions/": {"get": {"parameters": [{"description": "If specified, only return predictions associated with this model ID.", "required": false, "type": "integer", "name": "model_id", "in": "query"}], "summary": "List predictions", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object82"}, "type": "array"}}}}}, "/surveys/{survey_id}/returns/{id}": {"put": {"parameters": [{"description": "The ID of the return.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the survey.", "required": true, "type": "integer", "name": "survey_id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object195"}, "name": "Object195", "in": "body"}], "summary": "Update a survey fielding return", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}, "get": {"parameters": [{"description": "The ID of the return.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the survey.", "required": true, "type": "integer", "name": "survey_id", "in": "path"}], "summary": "Get a survey fielding return", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}}, "/channels/": {"get": {"parameters": [], "summary": "List available channels and provide keys for accessing them", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object0"}, "type": "array"}}}}}, "/jobs/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/databases/{id}/whitelist-ips/{whitelisted_ip_id}": {"delete": {"parameters": [{"description": "The ID of the database this rule is applied to.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of this whitelisted IP address.", "required": true, "type": "integer", "name": "whitelisted_ip_id", "in": "path"}], "summary": "Remove a whitelisted IP address", "responses": {"204": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the database this rule is applied to.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of this whitelisted IP address.", "required": true, "type": "integer", "name": "whitelisted_ip_id", "in": "path"}], "summary": "View details about a whitelisted IP", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object28"}}}}}, "/scripts/javascript/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/runs/{run_id}": {"delete": {"parameters": [{"description": "The ID of the sql.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Cancel a run", "responses": {"202": {"description": "success"}}}, "get": {"parameters": [{"description": "The ID of the sql.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}], "summary": "Check status of a run", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object162"}}}}}, "/scripts/sql/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/runs/{run_id}/logs": {"get": {"parameters": [{"description": "The ID of the container.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "The ID of the run.", "required": true, "type": "integer", "name": "run_id", "in": "path"}, {"description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "required": false, "type": "integer", "name": "last_id", "in": "query"}, {"description": "The maximum number of log messages to return. Default of 10000.", "required": false, "type": "integer", "name": "limit", "in": "query"}], "summary": "Get the logs for a run", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object163"}, "type": "array"}}}}}, "/reports/{id}/shares/groups/{group_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the group", "required": true, "type": "integer", "name": "group_id", "in": "path"}], "summary": "Revoke the permissions a group has on this object", "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/shares/users/{user_id}": {"delete": {"parameters": [{"description": "ID of the resource to be revoked", "required": true, "type": "integer", "name": "id", "in": "path"}, {"description": "ID of the user", "required": true, "type": "integer", "name": "user_id", "in": "path"}], "summary": "Revoke the permissions a user has on this object", "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/projects": {"get": {"parameters": [{"description": "The ID of the resource.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List the projects a scripted sql belongs to", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object31"}, "type": "array"}}}}}, "/reports/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/projects/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/scripts/r/{id}/shares": {"get": {"parameters": [{"description": "The ID of the object.", "required": true, "type": "integer", "name": "id", "in": "path"}], "summary": "List users and groups permissioned on this object", "responses": {"200": {"description": "success", "schema": {"items": {"$ref": "#/definitions/Object1"}, "type": "array"}}}}}, "/scripts/r/{id}/shares/users": {"put": {"parameters": [{"description": "ID of the resource to be shared", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": true, "schema": {"$ref": "#/definitions/Object35"}, "name": "Object35", "in": "body"}], "summary": "Set the permissions users have on this object", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/credentials/{id}/temporary": {"post": {"parameters": [{"description": "The ID of the credential.", "required": true, "type": "integer", "name": "id", "in": "path"}, {"required": false, "schema": {"$ref": "#/definitions/Object20"}, "name": "Object20", "in": "body"}], "summary": "Generate a temporary credential for accessing S3", "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object21"}}}}}}, "securityDefinitions": {"api_key": {"name": "Authorization", "type": "apiKey", "in": "header"}}, "info": {"version": "1", "title": "Civis Analytics API"}, "swagger": "2.0", "schemes": ["https"], "security": [{"api_key": []}], "host": "api.civisanalytics.com", "definitions": {"Object194": {"properties": {"tableName": {"type": "string"}, "schema": {"type": "string"}, "databaseTableId": {"description": "Table containing imported survey return", "type": "integer"}, "metadata": {"type": "object"}, "status": {"type": "string"}, "serverName": {"type": "string"}}, "type": "object"}, "Object148": {"properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object128"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object149"}, "source": {"description": "The body/text of the script.", "type": "string"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object232": {"required": ["name", "expiresIn"], "properties": {"expiresIn": {"description": "The number of seconds the key should last for.", "type": "integer"}, "constraints": {"description": "Constraints on the abilities of the created key.", "items": {"$ref": "#/definitions/Object233"}, "type": "array"}, "name": {"description": "The name of the API key.", "type": "string"}}, "type": "object"}, "Object235": {"properties": {"patchAllowed": {"description": "Whether the constraint allows PATCH requests.", "type": "boolean"}, "headAllowed": {"description": "Whether the constraint allows HEAD requests.", "type": "boolean"}, "postAllowed": {"description": "Whether the constraint allows POST requests.", "type": "boolean"}, "getAllowed": {"description": "Whether the constraint allows GET requests.", "type": "boolean"}, "constraintType": {"description": "The type of constraint (exact/prefix/regex/verb).", "type": "string"}, "constraint": {"description": "The path matcher of the constraint.", "type": "string"}, "deleteAllowed": {"description": "Whether the constraint allows DELETE requests.", "type": "boolean"}, "putAllowed": {"description": "Whether the constraint allows PUT requests.", "type": "boolean"}}, "type": "object"}, "Object166": {"properties": {"rId": {"description": "The ID of the r.", "type": "integer"}, "id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}, "Object167": {"properties": {"javascriptId": {"description": "The ID of the javascript.", "type": "integer"}, "id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}, "Object27": {"properties": {"id": {"description": "The ID of this whitelisted IP address.", "type": "integer"}, "createdAt": {"format": "time", "description": "The time this rule was created.", "type": "string"}, "securityGroupId": {"description": "The ID of the security group this rule is applied to.", "type": "string"}, "subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}, "remoteHostId": {"description": "The ID of the database this rule is applied to.", "type": "integer"}, "updatedAt": {"format": "time", "description": "The time this rule was last updated.", "type": "string"}}, "type": "object"}, "Object137": {"properties": {"memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "diskSpace": {"format": "float", "description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number"}}, "type": "object"}, "Object150": {"required": ["name", "source"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object144"}, "source": {"description": "The body/text of the script.", "type": "string"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object35": {"required": ["userIds", "permissionLevel"], "properties": {"permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "userIds": {"description": "An array of one or more user IDs", "items": {"type": "integer"}, "type": "array"}}, "type": "object"}, "Object51": {"properties": {"stallWarningMinutes": {"description": "Stall warning emails will be sent after this amount of minutes.", "type": "integer"}, "successOn": {"description": "If success email notifications are on", "type": "boolean"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "urls": {"description": "URLs to receive a POST request at job completion", "items": {"type": "string"}, "type": "array"}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "items": {"type": "string"}, "type": "array"}, "failureOn": {"description": "If failure email notifications are on", "type": "boolean"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "items": {"type": "string"}, "type": "array"}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}}, "type": "object"}, "Object129": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time this script was last updated.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "expandedArguments": {"description": "Expanded arguments for use in injecting into different environments.", "type": "object"}, "type": {"description": "The type of script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object22": {"properties": {"id": {"description": "The ID for the database.", "type": "integer"}, "name": {"description": "The name of the database.", "type": "string"}}, "type": "object"}, "Object234": {"properties": {"expired": {"description": "True if the key has expired.", "type": "boolean"}, "name": {"description": "The name of the API key.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The date and time when the key was created.", "type": "string"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "token": {"description": "The API key.", "type": "string"}, "scopes": {"description": "The scopes which the key is permissioned on.", "items": {"type": "string"}, "type": "array"}, "expiresAt": {"format": "date-time", "description": "The date and time when the key expired.", "type": "string"}, "id": {"description": "The ID of the API key.", "type": "integer"}, "revokedAt": {"format": "date-time", "description": "The date and time when the key was revoked.", "type": "string"}, "lastUsedAt": {"format": "date-time", "description": "The date and time when the key was last used.", "type": "string"}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "constraints": {"description": "Constraints on the abilities of the created key", "items": {"$ref": "#/definitions/Object235"}, "type": "array"}}, "type": "object"}, "Object89": {"properties": {"id": {"description": "The ID of the prediction run.", "type": "integer"}, "name": {"description": "The name of table created by this predictions run.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The time when the table with created predictions was created.", "type": "string"}, "state": {"description": "The state of the prediction run.", "type": "string"}, "scoreStats": {"description": "An array of metrics on the created predictions.", "items": {"$ref": "#/definitions/Object85"}, "type": "array"}, "predictionId": {"description": "The ID of the prediction.", "type": "integer"}, "exception": {"description": "The exception, if any, returned by the prediction run.", "type": "string"}}, "type": "object"}, "Object130": {"properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued', 'running' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}}, "type": "object"}, "Object41": {"properties": {"scheduledDays": {"description": "Day based on numeric value starting at 0 for Sunday", "items": {"type": "integer"}, "type": "array"}, "scheduledMinutes": {"description": "Minutes of the day it is scheduled on", "items": {"type": "integer"}, "type": "array"}, "scheduledRunsPerHour": {"description": "Alternative to scheduled minutes, number of times to run per hour", "type": "integer"}, "scheduledHours": {"description": "Hours of the day it is scheduled on", "items": {"type": "integer"}, "type": "array"}, "scheduled": {"description": "If the object is scheduled", "type": "boolean"}}, "type": "object"}, "Object238": {"properties": {"modelIndexArchivedFilter": {"description": "Archived filter for the models index page.", "type": "string"}, "importIndexOrderDir": {"description": "Order direction for the imports index page.", "type": "string"}, "resultIndexTypeFilter": {"description": "Type filter for the results index page.", "type": "string"}, "exportIndexStatusFilter": {"description": "Status filter for the exports index page.", "type": "string"}, "resultIndexAuthorFilter": {"description": "Author filter for the results index page.", "type": "string"}, "scriptIndexAuthorFilter": {"description": "Author filter for the scripts index page.", "type": "string"}, "projectDetailArchivedFilter": {"description": "Arhived filter for the projects detail pages.", "type": "string"}, "projectDetailTypeFilter": {"description": "Type filter for projects detail pages.", "type": "string"}, "exportIndexAuthorFilter": {"description": "Author filter for the exports index page.", "type": "string"}, "appIndexOrderField": {"description": "Order field for the apps index pages.", "type": "string"}, "exportIndexOrderField": {"description": "Order field for the exports index page.", "type": "string"}, "importIndexTypeFilter": {"description": "Type filter for the imports index page.", "type": "string"}, "exportIndexOrderDir": {"description": "Order direction for the exports index page.", "type": "string"}, "resultIndexOrderField": {"description": "Order field for the results index page.", "type": "string"}, "scriptIndexStatusFilter": {"description": "Status filter for the scripts index page.", "type": "string"}, "modelIndexAuthorFilter": {"description": "Author filter for the models index page.", "type": "string"}, "importIndexAuthorFilter": {"description": "Author filter for the imports index page.", "type": "string"}, "modelIndexOrderField": {"description": "Order field for the models index page.", "type": "string"}, "scriptIndexOrderDir": {"description": "Order direction for the scripts index page.", "type": "string"}, "importIndexArchivedFilter": {"description": "Archived filter for the imports index page.", "type": "string"}, "resultIndexOrderDir": {"description": "Order direction for the results index page.", "type": "string"}, "projectDetailOrderDir": {"description": "Order direction for projects detail pages.", "type": "string"}, "projectIndexArchivedFilter": {"description": "Archived filter for the projects index page.", "type": "string"}, "projectDetailAuthorFilter": {"description": "Author filter for projects detail pages.", "type": "string"}, "projectDetailOrderField": {"description": "Order field for projects detail pages.", "type": "string"}, "scriptIndexOrderField": {"description": "Order field for the scripts index page.", "type": "string"}, "projectIndexAuthorFilter": {"description": "Author filter for the projects index page.", "type": "string"}, "importIndexDestFilter": {"description": "Destination filter for the imports index page.", "type": "string"}, "resultIndexArchivedFilter": {"description": "Archived filter for the results index page.", "type": "string"}, "projectIndexOrderDir": {"description": "Order direction for the projects index page.", "type": "string"}, "scriptIndexArchivedFilter": {"description": "Archived filter for the scripts index page.", "type": "string"}, "importIndexStatusFilter": {"description": "Status filter for the imports index page.", "type": "string"}, "modelIndexStatusFilter": {"description": "Status filter for the models index page.", "type": "string"}, "modelIndexOrderDir": {"description": "Order direction for the models index page.", "type": "string"}, "exportIndexTypeFilter": {"description": "Type filter for the exports index page.", "type": "string"}, "appIndexOrderDir": {"description": "Oder direction for the apps index pages.", "type": "string"}, "projectIndexOrderField": {"description": "Order field for the projects index page.", "type": "string"}, "importIndexOrderField": {"description": "Order field for the imports index page.", "type": "string"}, "modelIndexThumbnailView": {"description": "Thumbnail view for the models index page.", "type": "string"}, "preferredServerId": {"description": "ID of preferred server.", "type": "integer"}, "reportIndexThumbnailView": {"description": "Thumbnail view for the reports index page.", "type": "string"}, "scriptIndexTypeFilter": {"description": "Type filter for the scripts index page.", "type": "string"}}, "type": "object"}, "Object183": {"properties": {"tableName": {"type": "string"}, "schema": {"type": "string"}, "metadata": {"type": "object"}, "serverName": {"type": "string"}, "uniqueId": {"type": "string"}, "sampleTableId": {"type": "integer"}}, "type": "object"}, "Object201": {"properties": {"outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "id": {"description": "The ID of the enhancement.", "type": "integer"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}}, "type": "object"}, "Object144": {"required": ["cpu", "memory"], "properties": {"memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "diskSpace": {"format": "float", "description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number"}}, "type": "object"}, "Object25": {"properties": {"id": {"type": "integer"}, "finishedAt": {"format": "time", "description": "The time that the run completed.", "type": "string"}, "createdAt": {"format": "time", "description": "The time that the run was queued.", "type": "string"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "startedAt": {"format": "time", "description": "The time that the run started.", "type": "string"}, "state": {"type": "string"}}, "type": "object"}, "Object198": {"required": ["jobType"], "properties": {"jobType": {"description": "Job type", "type": "string"}, "metadata": {"type": "string"}}, "type": "object"}, "Object52": {"required": ["schema", "name", "remoteHostId", "credentialId"], "properties": {"distkey": {"description": "The column to use as the distkey for the table.", "type": "string"}, "name": {"description": "The name of the destination table.", "type": "string"}, "remoteHostId": {"description": "The id of the destination database host.", "type": "integer"}, "columnDelimiter": {"description": "The column delimiter of the file. If column_delimiter is null or omitted, it will be auto-detected. Valid arguments are \"comma\", \"tab\", and \"pipe\".", "type": "string"}, "sortkey2": {"description": "The second column in a compound sortkey for the table.", "type": "string"}, "schema": {"description": "The schema of the destination table.", "type": "string"}, "multipart": {"description": "If true, the upload URI will require a `multipart/form-data` POST request. Defaults to false.", "type": "boolean"}, "firstRowIsHeader": {"description": "A boolean value indicating whether or not the first row is a header row. If first_row_is_header is null or omitted, it will be auto-detected.", "type": "boolean"}, "sortkey1": {"description": "The column to use as the sort key for the table.", "type": "string"}, "maxErrors": {"description": "The maximum number of rows with errors to remove from the import before failing.", "type": "integer"}, "existingTableRows": {"description": "The behaviour if a table with the requested name already exists.  One of \"fail\", \"truncate\", \"append\", or \"drop\".Defaults to \"fail\".", "type": "string"}, "credentialId": {"description": "The id of the credentials to be used when performing the database import.", "type": "integer"}}, "type": "object"}, "Object14": {"properties": {"name": {"description": "Name of code.", "type": "string"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}}, "type": "object"}, "Object224": {"required": ["name"], "properties": {"archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}}, "type": "object"}, "Object204": {"required": ["threshold", "matchTableId"], "properties": {"matchTableId": {"description": "The ID of the Redshift table to match against.", "type": "integer"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "threshold": {"format": "float", "description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number"}}, "type": "object"}, "Object127": {"properties": {"templateScriptId": {"description": "The ID of the template script, if any.  A script cannot both have a template script and be a template for other scripts.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.  Cannot be set if this script uses a template script.", "items": {"$ref": "#/definitions/Object128"}, "type": "array"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}}, "type": "object"}, "Object187": {"properties": {"script": {"$ref": "#/definitions/Object188"}, "id": {"type": "integer"}, "questions": {"items": {"$ref": "#/definitions/Object189"}, "type": "array"}}, "type": "object"}, "Object60": {"required": ["path"], "properties": {"path": {"description": "The schema.tablename to sync to.", "type": "string"}}, "type": "object"}, "Object123": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object102": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object59": {"required": ["path"], "properties": {"path": {"description": "The path of the dataset to sync from; for a database source, schema.tablename.", "type": "string"}}, "type": "object"}, "Object77": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object1": {"properties": {"totalGroupShares": {"description": "For owners, the number of total groups shared. For writers and readers, the number of visible groups shared.", "type": "integer"}, "totalUserShares": {"description": "For owners, the number of total users shared. For writers and readers, the number of visible users shared.", "type": "integer"}, "readers": {"$ref": "#/definitions/Object2"}, "owners": {"$ref": "#/definitions/Object2"}, "writers": {"$ref": "#/definitions/Object2"}}, "type": "object"}, "Object72": {"properties": {"outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "id": {"description": "The ID of the model to which to apply the prediction.", "type": "integer"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "items": {"type": "string"}, "type": "array"}, "schedule": {"description": "The schedule of when the prediction will run.", "$ref": "#/definitions/Object41"}, "state": {"description": "The status of the prediction. One of: \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}}, "type": "object"}, "Object162": {"properties": {"id": {"description": "The ID of this run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time that this run finished.", "type": "string"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "output": {"description": "A list of the outputs of this script.", "items": {"$ref": "#/definitions/Object120"}, "type": "array"}, "startedAt": {"format": "time", "description": "The time the last run started.", "type": "string"}, "state": {"description": "The state of this run.", "type": "string"}, "sqlId": {"description": "The ID of this sql.", "type": "integer"}}, "type": "object"}, "Object76": {"properties": {"name": {"description": "The name of the model build.", "type": "string"}, "createdAt": {"description": "The time the model build was created.", "type": "string"}, "rSquaredError": {"format": "float", "description": "A key metric for continuous models. Nil for other model types.", "type": "number"}, "outputLocation": {"description": "A URL representing the location of the full JSON output for the specified build.The URL link will be valid for 5 minutes.", "type": "string"}, "output": {"description": "A string representing the JSON output for the specified build. Only present when smaller than 10KB in size.", "type": "string"}, "rootMeanSquaredError": {"format": "float", "description": "A key metric for continuous models. Nil for other model types.", "type": "number"}, "state": {"description": "The state of the model build.one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "id": {"description": "The ID of the model build.", "type": "integer"}, "error": {"description": "The error, if any, returned by the build.", "type": "string"}, "description": {"description": "A description of the model build.", "type": "string"}, "transformationMetadata": {"description": "A string representing the full JSON output of the metadata for transformation of column names", "type": "string"}, "rocAuc": {"format": "float", "description": "A key metric for binary, multinomial, and ordinal models. Nil for other model types.", "type": "number"}}, "type": "object"}, "Object178": {"properties": {"targetAudience": {"type": "string"}, "uniqueId": {"type": "string"}, "householdColumn": {"type": "integer"}, "sampleTable": {"$ref": "#/definitions/Object176"}, "frameLimitingSQL": {"type": "string"}, "buckets": {"items": {"$ref": "#/definitions/Object181"}, "type": "array"}, "populationLimitingSQL": {"type": "string"}, "basefile": {"$ref": "#/definitions/Object179"}, "metadata": {"type": "object"}, "id": {"type": "integer"}, "strataTabsTable": {"$ref": "#/definitions/Object176"}, "vendorSampleTable": {"$ref": "#/definitions/Object176"}, "oversamplePercent": {"type": "integer"}, "desiredCompletes": {"type": "integer"}, "parentId": {"type": "integer"}, "contactMethods": {"items": {"type": "string"}, "type": "array"}}, "type": "object"}, "Object70": {"properties": {"interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "currentBuildException": {"description": "Exception message, if applicable, of the current model build.", "type": "string"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "currentBuildState": {"description": "The status of the current model build. One of \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The time the model was created.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "items": {"type": "string"}, "type": "array"}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "id": {"description": "The ID of the model.", "type": "integer"}, "description": {"description": "A description of the model.", "type": "string"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object41"}, "modelName": {"description": "The name of the model.", "type": "string"}, "predictions": {"description": "The tables upon which the model will be applied.", "items": {"$ref": "#/definitions/Object72"}, "type": "array"}, "builds": {"description": "A list of trained models available for making predictions.", "items": {"$ref": "#/definitions/Object71"}, "type": "array"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "updatedAt": {"format": "date-time", "description": "The time the model was updated.", "type": "string"}, "lastOutputLocation": {"description": "The output JSON for the last build.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "lastRun": {"description": "The last run of this model build.", "$ref": "#/definitions/Object25"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "items": {"type": "string"}, "type": "array"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "user": {"$ref": "#/definitions/Object9"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object202": {"required": ["threshold", "matchTableId"], "properties": {"matchTableId": {"description": "The ID of the Dynamo table to match against.", "type": "integer"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "threshold": {"format": "float", "description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number"}}, "type": "object"}, "Object182": {"properties": {"methodColumn": {"type": "string"}, "contactabilityColumn": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "Object206": {"properties": {"sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "additionalProperties": {"type": "string"}, "type": "object"}, "outgoingTableMatches": {"items": {"$ref": "#/definitions/Object210"}, "type": "array"}, "enhancements": {"items": {"$ref": "#/definitions/Object209"}, "type": "array"}, "lastRefresh": {"format": "date-time", "description": "The time of the last statistics refresh.", "type": "string"}, "multipartKey": {"items": {"type": "string"}, "type": "array"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object25"}, "id": {"description": "The ID of the table.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "sizeMb": {"format": "float", "description": "The size of the table in megabytes.", "type": "number"}, "columns": {"items": {"$ref": "#/definitions/Object207"}, "type": "array"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "viewDef": {"type": "string"}, "joins": {"items": {"$ref": "#/definitions/Object208"}, "type": "array"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}}, "type": "object"}, "Object63": {"properties": {"lastRun": {"$ref": "#/definitions/Object25"}, "id": {"type": "integer"}, "name": {"type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "updatedAt": {"format": "date-time", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "type": {"type": "string"}}, "type": "object"}, "Object48": {"required": ["name", "syncType", "isOutbound"], "properties": {"nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object49"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, and Salesforce.", "type": "string"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "isOutbound": {"type": "boolean"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object49"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object80": {"required": ["schedule"], "properties": {"schedule": {"description": "The schedule of when the model will run.", "$ref": "#/definitions/Object50"}}, "type": "object"}, "Object103": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "finishedAt": {"format": "date-time", "description": "The end time of the last run.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "startedAt": {"format": "date-time", "description": "The start time of the last run.", "type": "string"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "resultColumns": {"description": "A preview of columns returned by the query.", "items": {"type": "string"}, "type": "array"}, "id": {"description": "The query ID.", "type": "integer"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "items": {"items": {"type": "string"}, "type": "array"}, "type": "array"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "state": {"description": "The state of the last run.", "type": "string"}}, "type": "object"}, "Object229": {"properties": {"phone": {"description": "The phone number of this user.", "type": "string"}, "timeZone": {"description": "The time zone of this user.", "type": "string"}, "name": {"description": "The name of this user.", "type": "string"}, "prefersSmsOtp": {"description": "The preference for phone authorization of this user", "type": "string"}, "groups": {"description": "An array of all the groups this user is in.", "items": {"$ref": "#/definitions/Object227"}, "type": "array"}, "user": {"description": "The username of this user.", "type": "string"}, "department": {"description": "The deartment of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "city": {"description": "The city of this user.", "type": "string"}, "id": {"description": "The ID of this user.", "type": "integer"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "githubUsername": {"description": "The GitHub username of this user.", "type": "string"}, "initials": {"description": "The initials of this user.", "type": "string"}, "state": {"description": "The state of this user.", "type": "string"}, "title": {"description": "The title of this user.", "type": "string"}}, "type": "object"}, "Object42": {"properties": {"stallWarningMinutes": {"description": "Stall warning emails will be sent after this amount of minutes.", "type": "integer"}, "successOn": {"description": "If success email notifications are on", "type": "boolean"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "urls": {"description": "URLs to receive a POST request at job completion", "items": {"type": "string"}, "type": "array"}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "items": {"type": "string"}, "type": "array"}, "failureOn": {"description": "If failure email notifications are on", "type": "boolean"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "items": {"type": "string"}, "type": "array"}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}}, "type": "object"}, "Object174": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object219": {"required": ["name", "codeBody"], "properties": {"category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "codeBody": {"description": "The code for the Template body.", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}}, "type": "object"}, "Object220": {"properties": {"category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "codeBody": {"description": "The code for the Template body.", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}}, "type": "object"}, "Object64": {"properties": {"runs": {"description": "Information about the most recent runs of the job.", "items": {"$ref": "#/definitions/Object25"}, "type": "array"}, "lastRun": {"$ref": "#/definitions/Object25"}, "id": {"type": "integer"}, "name": {"type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "updatedAt": {"format": "date-time", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "type": {"type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object86": {"properties": {"schedule": {"description": "Schedule when the prediction will run.", "$ref": "#/definitions/Object41"}, "id": {"description": "ID of the prediction associated with this schedule.", "type": "integer"}, "scoreOnModelBuild": {"description": "Whether the prediction will run after a rebuild of the associated model.", "type": "boolean"}}, "type": "object"}, "Object11": {"properties": {"id": {"description": "The ID for this code.", "type": "integer"}, "name": {"description": "Name of code.", "type": "string"}, "createdAt": {"format": "time", "description": "The creation time for this code.", "type": "string"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}, "updatedAt": {"format": "time", "description": "The last modification time for this code.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}}, "type": "object"}, "Object9": {"properties": {"online": {"description": "Whether this user is online.", "type": "boolean"}, "initials": {"description": "This user's initials.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "id": {"description": "The ID of this user.", "type": "integer"}, "name": {"description": "This user's name.", "type": "string"}}, "type": "object"}, "Object16": {"required": ["type", "username", "password"], "properties": {"remoteHost": {"description": "The remote host associated with the credential.", "$ref": "#/definitions/Object17"}, "username": {"description": "The username for the credential.", "type": "string"}, "name": {"description": "The name identifying the credential.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with the credential.", "type": "integer"}, "description": {"description": "A long description of the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "type": {"type": "string"}}, "type": "object"}, "Object217": {"required": ["name", "codeBody"], "properties": {"category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}, "codeBody": {"description": "The code for the Template body.", "type": "string"}}, "type": "object"}, "Object169": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object195": {"properties": {"tableName": {"type": "string"}, "schema": {"type": "string"}, "databaseTableId": {"description": "Table containing imported survey return", "type": "integer"}, "metadata": {"type": "object"}, "status": {"type": "string"}, "serverName": {"type": "string"}}, "type": "object"}, "Object223": {"properties": {"archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "id": {"type": "integer"}, "name": {"description": "The name of the template.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "scriptId": {"description": "The id of the script that this template uses.", "type": "integer"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "updatedAt": {"format": "time", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object66": {"properties": {"runs": {"items": {"$ref": "#/definitions/Object25"}, "type": "array"}, "lastRun": {"$ref": "#/definitions/Object25"}, "id": {"type": "integer"}, "name": {"type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "updatedAt": {"format": "date-time", "type": "string"}, "children": {"items": {"$ref": "#/definitions/Object66"}, "type": "array"}, "state": {"type": "string"}, "type": {"type": "string"}}, "type": "object"}, "Object69": {"properties": {"interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object50"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "modelName": {"description": "The name of the model.", "type": "string"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "items": {"type": "string"}, "type": "array"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "description": {"description": "A description of the model.", "type": "string"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "items": {"type": "string"}, "type": "array"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object236": {"properties": {"expiresAt": {"format": "date-time", "description": "The date and time when the key expired.", "type": "string"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "id": {"description": "The ID of the API key.", "type": "integer"}, "revokedAt": {"format": "date-time", "description": "The date and time when the key was revoked.", "type": "string"}, "name": {"description": "The name of the API key.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The date and time when the key was created.", "type": "string"}, "constraints": {"description": "Constraints on the abilities of the created key", "items": {"$ref": "#/definitions/Object235"}, "type": "array"}, "lastUsedAt": {"format": "date-time", "description": "The date and time when the key was last used.", "type": "string"}, "scopes": {"description": "The scopes which the key is permissioned on.", "items": {"type": "string"}, "type": "array"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}}, "type": "object"}, "Object124": {"properties": {"id": {"description": "The ID for the project.", "type": "integer"}, "name": {"description": "The name of the project.", "type": "string"}}, "type": "object"}, "Object31": {"properties": {"users": {"description": "Users who can see the project", "items": {"$ref": "#/definitions/Object9"}, "type": "array"}, "id": {"description": "The ID for this project.", "type": "integer"}, "name": {"description": "The name of this project.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "autoShare": {"type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "updatedAt": {"format": "time", "type": "string"}, "author": {"description": "The author of the project.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object185": {"properties": {"id": {"type": "integer"}, "name": {"type": "string"}}, "type": "object"}, "Object121": {"required": ["name", "remoteHostId", "credentialId", "sql"], "properties": {"templateScriptId": {"description": "The ID of the template script, if any.  A script cannot both have a template script and be a template for other scripts.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "name": {"description": "The name of the script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.  Cannot be set if this script uses a template script.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "remoteHostId": {"description": "The database ID.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "credentialId": {"description": "The credential ID.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}}, "type": "object"}, "Object212": {"properties": {"runs": {"description": "Information about the most recent runs of the job.", "items": {"$ref": "#/definitions/Object25"}, "type": "array"}, "lastRun": {"$ref": "#/definitions/Object25"}, "id": {"type": "integer"}, "name": {"type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "matchOptions": {"$ref": "#/definitions/Object213"}, "updatedAt": {"format": "date-time", "type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "type": {"type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object231": {"properties": {"expiresAt": {"format": "date-time", "description": "The date and time when the key expired.", "type": "string"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "id": {"description": "The ID of the API key.", "type": "integer"}, "revokedAt": {"format": "date-time", "description": "The date and time when the key was revoked.", "type": "string"}, "name": {"description": "The name of the API key.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The date and time when the key was created.", "type": "string"}, "constraintCount": {"description": "The number of constraints on the created key", "type": "integer"}, "lastUsedAt": {"format": "date-time", "description": "The date and time when the key was last used.", "type": "string"}, "scopes": {"description": "The scopes which the key is permissioned on.", "items": {"type": "string"}, "type": "array"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}}, "type": "object"}, "Object106": {"properties": {"previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "createdAt": {"format": "time", "type": "string"}, "compression": {"description": "The type of compression. One of gzip or zip, or none [default: gzip].", "type": "string"}, "unquoted": {"description": "If true, will not quote fields.", "type": "boolean"}, "database": {"description": "The database ID.", "type": "integer"}, "resultColumns": {"description": "A preview of columns returned by the query.", "items": {"type": "string"}, "type": "array"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "filenamePrefix": {"description": "The output filename prefix.", "type": "string"}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "items": {"items": {"type": "string"}, "type": "array"}, "type": "array"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "updatedAt": {"format": "time", "type": "string"}, "finishedAt": {"format": "date-time", "description": "The end time of the last run.", "type": "string"}, "columnDelimiter": {"description": "The delimiter to use. One of comma or tab, or pipe [default: comma].", "type": "string"}, "includeHeader": {"description": "Whether the CSV output should include a header row [default: true].", "type": "boolean"}, "startedAt": {"format": "date-time", "description": "The start time of the last run.", "type": "string"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}, "id": {"description": "The query ID.", "type": "integer"}, "state": {"description": "The state of the last run.", "type": "string"}, "interactive": {"description": "Deprecated and not used.", "type": "boolean"}}, "type": "object"}, "Object32": {"required": ["name"], "properties": {"expiresAt": {"format": "date-time", "description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string"}, "name": {"description": "The file name.", "type": "string"}}, "type": "object"}, "Object205": {"properties": {"matchTableId": {"description": "The ID of the Redshift table to match against.", "type": "integer"}, "id": {"description": "The ID of the enhancement.", "type": "integer"}, "threshold": {"format": "float", "description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}}, "type": "object"}, "Object50": {"properties": {"scheduledDays": {"description": "Day based on numeric value starting at 0 for Sunday", "items": {"type": "integer"}, "type": "array"}, "scheduledMinutes": {"description": "Minutes of the day it is scheduled on", "items": {"type": "integer"}, "type": "array"}, "scheduledRunsPerHour": {"description": "Alternative to scheduled minutes, number of times to run per hour", "type": "integer"}, "scheduledHours": {"description": "Hours of the day it is scheduled on", "items": {"type": "integer"}, "type": "array"}, "scheduled": {"description": "If the object is scheduled", "type": "boolean"}}, "type": "object"}, "Object67": {"properties": {"id": {"type": "integer"}, "name": {"type": "string"}}, "type": "object"}, "Object227": {"properties": {"organizationId": {"description": "The organization associated with this group.", "type": "integer"}, "id": {"description": "The ID of this group.", "type": "integer"}, "name": {"description": "The name of this group.", "type": "string"}}, "type": "object"}, "Object115": {"properties": {"hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "appState": {"description": "Any application state blob for this report.", "additionalProperties": {"type": "string"}, "type": "object"}, "name": {"description": "The name of the report.", "type": "string"}, "provideAPIKey": {"description": "Allow the report to provide an API key to front-end code.", "type": "boolean"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "scriptId": {"description": "The ID of the script used to create this report.", "type": "integer"}, "codeBody": {"description": "The code for the report visualization.", "type": "string"}}, "type": "object"}, "Object125": {"properties": {"default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "name": {"description": "The variable's name as used within your code.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}}, "type": "object"}, "Object74": {"properties": {"outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "id": {"description": "The ID of the model to which to apply the prediction.", "type": "integer"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "items": {"type": "string"}, "type": "array"}, "state": {"description": "The status of the prediction. One of: \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}}, "type": "object"}, "Object62": {"required": ["source", "destination"], "properties": {"destination": {"$ref": "#/definitions/Object60"}, "advancedOptions": {"$ref": "#/definitions/Object61"}, "source": {"$ref": "#/definitions/Object59"}}, "type": "object"}, "Object153": {"properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object128"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object149"}, "source": {"description": "The body/text of the script.", "type": "string"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object54": {"properties": {"importId": {"description": "The ID of the import.", "type": "integer"}, "id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}, "Object149": {"properties": {"memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "diskSpace": {"format": "float", "description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number"}}, "type": "object"}, "Object132": {"required": ["cpu", "memory"], "properties": {"memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "diskSpace": {"format": "float", "description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number"}}, "type": "object"}, "Object209": {"properties": {"joinId": {"type": "integer"}, "updatedAt": {"format": "time", "type": "string"}, "type": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object207": {"properties": {"order": {"description": "Relative position of the column in the table.", "type": "integer"}, "nullCount": {"description": "Number of null values in the column.", "type": "integer"}, "stddev": {"format": "float", "description": "Stddev of the column, where applicable.", "type": "number"}, "sqlType": {"description": "SQL type of the column.", "type": "string"}, "name": {"description": "Name of the column.", "type": "string"}, "maxValue": {"description": "Largest value in the column.", "type": "string"}, "distinctCount": {"description": "Number of distinct values in the column.", "type": "integer"}, "possibleDependentVariableTypes": {"description": "Possible dependent variable types the column may be used to model.  Null if it may not be used as a dependent variable.", "items": {"type": "string"}, "type": "array"}, "encoding": {"description": "The compression encoding for this columnSee: http://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html", "type": "string"}, "valueDistribution": {"description": "An object mapping distinct values in the column to the number of times they appear in the column", "additionalProperties": {"type": "integer"}, "type": "object"}, "coverageCount": {"description": "Number of non-null values in the column.", "type": "integer"}, "sampleValues": {"description": "A sample of values from the column.", "items": {"type": "string"}, "type": "array"}, "useableAsPrimaryKey": {"description": "Whether the column may be used as an primary key to identify table rows.", "type": "boolean"}, "minValue": {"description": "Smallest value in the column.", "type": "string"}, "valueDistributionPercent": {"description": "A mapping between each value in the column and the percentage of rows with that value.Only present for tables with fewer than approximately 25,000,000 rows and for columns with fewer than twenty distinct values.", "additionalProperties": {"type": "number"}, "type": "object"}, "description": {"description": "The description of the column, as specified by the table owner", "type": "string"}, "useableAsIndependentVariable": {"description": "Whether the column may be used as an independent variable to train a model.", "type": "boolean"}, "avgValue": {"format": "float", "description": "Average value of the column, where applicable.", "type": "number"}}, "type": "object"}, "Object122": {"required": ["name", "type"], "properties": {"default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "name": {"description": "The variable's name as used within your code.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}}, "type": "object"}, "Object139": {"required": ["name", "sql", "remoteHostId", "credentialId"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object173": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object197": {"properties": {"schema": {"description": "The destination schema name.", "type": "string"}, "finishedAt": {"format": "date-time", "description": "The end time of the last run.", "type": "string"}, "name": {"description": "The destination table name, without the schema prefix.", "type": "string"}, "databaseId": {"description": "The ID of the destination database.", "type": "integer"}, "startedAt": {"format": "date-time", "description": "The start time of the last run.", "type": "string"}, "state": {"description": "The state of the last run.", "type": "string"}}, "type": "object"}, "Object218": {"properties": {"category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "updatedAt": {"format": "time", "type": "string"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "id": {"type": "integer"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "author": {"description": "The author of the template.", "$ref": "#/definitions/Object9"}, "authCodeUrl": {"description": "A URL to the template's stored code body.", "type": "string"}}, "type": "object"}, "Object3": {"properties": {"id": {"type": "integer"}, "name": {"type": "string"}}, "type": "object"}, "Object28": {"properties": {"updatedAt": {"format": "time", "description": "The time this rule was last updated.", "type": "string"}, "id": {"description": "The ID of this whitelisted IP address.", "type": "integer"}, "subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}, "securityGroupId": {"description": "The ID of the security group this rule is applied to.", "type": "string"}, "createdAt": {"format": "time", "description": "The time this rule was created.", "type": "string"}, "remoteHostId": {"description": "The ID of the database this rule is applied to.", "type": "integer"}, "authorizedBy": {"description": "The user who authorized this rule.", "type": "string"}, "isActive": {"description": "True if the rule is applied, false if it has been revoked.", "type": "boolean"}}, "type": "object"}, "Object12": {"required": ["name", "type", "body", "readme"], "properties": {"name": {"description": "Name of code.", "type": "string"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}}, "type": "object"}, "Object159": {"required": ["fromTemplateId"], "properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}, "type": "object"}, "Object189": {"properties": {"questionOptions": {"items": {"$ref": "#/definitions/Object190"}, "type": "array"}, "responseType": {"type": "string"}, "id": {"type": "integer"}, "text": {"type": "string"}, "code": {"type": "string"}}, "type": "object"}, "Object55": {"properties": {"timeZone": {"description": "The time zone of this import.", "type": "string"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object25"}, "syncs": {"description": "List of syncs.", "items": {"$ref": "#/definitions/Object43"}, "type": "array"}, "name": {"description": "The name of the import.", "type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "isOutbound": {"type": "boolean"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object40"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object40"}, "id": {"description": "The ID for the import.", "type": "integer"}, "user": {"$ref": "#/definitions/Object9"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, and Salesforce.", "type": "string"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "updatedAt": {"format": "date-time", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object41"}, "state": {"type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object81": {"properties": {"desc": {"description": "A description of this field.", "type": "string"}, "title": {"type": "string"}, "aliases": {"items": {"type": "string"}, "type": "array"}, "key": {"type": "string"}}, "type": "object"}, "Object88": {"properties": {"outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "Object13": {"required": ["name", "type", "body", "readme"], "properties": {"name": {"description": "Name of code.", "type": "string"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}}, "type": "object"}, "Object143": {"required": ["name", "source"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object144"}, "source": {"description": "The body/text of the script.", "type": "string"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object146": {"properties": {"memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "diskSpace": {"format": "float", "description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number"}}, "type": "object"}, "Object155": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object230": {"properties": {"method": {"type": "string"}, "ip": {"type": "string"}, "requestedVersion": {"type": "integer"}, "createdAt": {"format": "time", "type": "string"}, "statusCode": {"type": "string"}, "id": {"type": "integer"}, "path": {"type": "string"}, "apiKeyId": {"type": "integer"}, "processingSeconds": {"format": "float", "type": "number"}}, "type": "object"}, "Object190": {"properties": {"terminate": {"type": "boolean"}, "id": {"type": "integer"}, "code": {"type": "integer"}, "rotate": {"type": "boolean"}, "doNotRead": {"type": "boolean"}, "position": {"type": "integer"}, "text": {"type": "string"}, "binaryMapping": {"type": "boolean"}}, "type": "object"}, "Object181": {"properties": {"column": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "Object36": {"required": ["groupIds", "permissionLevel"], "properties": {"groupIds": {"description": "An array of one or more group IDs", "items": {"type": "integer"}, "type": "array"}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}}, "type": "object"}, "Object61": {"properties": {"columnDelimiter": {"type": "string"}, "distkey": {"type": "string"}, "contactLists": {"type": "string"}, "wipeDestinationTable": {"type": "boolean"}, "partitionTablePartitionColumnMaxName": {"type": "string"}, "mysqlCatalogMatchesSchema": {"type": "boolean"}, "partitionTableName": {"type": "string"}, "firstRowIsHeader": {"type": "boolean"}, "soqlQuery": {"type": "string"}, "partitionTablePartitionColumnMinName": {"type": "string"}, "verifyTableRowCounts": {"type": "boolean"}, "lastModifiedColumn": {"type": "string"}, "truncateLongLines": {"type": "boolean"}, "existingTableRows": {"type": "string"}, "identityColumn": {"type": "string"}, "partitionSchemaName": {"type": "string"}, "invalidCharReplacement": {"type": "string"}, "rowChunkSize": {"type": "integer"}, "sortkey1": {"type": "string"}, "partitionColumnName": {"type": "string"}, "maxErrors": {"type": "integer"}, "sortkey2": {"type": "string"}, "exportAction": {"type": "string"}}, "type": "object"}, "Object164": {"properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "containerId": {"description": "The ID of the container.", "type": "integer"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}, "Object99": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "fileSize": {"type": "integer"}, "id": {"description": "The object ID.", "type": "integer"}, "fileName": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object68": {"properties": {"dvType": {"description": "The type of dependent variable predicted by the model.", "type": "string"}, "id": {"description": "The ID of the model type.", "type": "integer"}, "algorithm": {"description": "The name of the algorithm used to train the model.", "type": "string"}, "fintAllowed": {"description": "Whether this model type supports searching for interaction terms.", "type": "boolean"}}, "type": "object"}, "Object53": {"properties": {"uploadFields": {"description": "If multipart was set to true, these fields should be included in the multipart upload.", "additionalProperties": {"type": "string"}, "type": "object"}, "id": {"description": "The id of the import.", "type": "integer"}, "uploadUri": {"description": "The URI which may be used to upload a tabular file for import. You must use this URI to upload the file you wish imported and then inform the Civis API when your upload is complete using the URI given by the runUri field of this reponse.", "type": "string"}, "runUri": {"description": "The URI to POST to once the file upload is complete. After uploading the file using the URI given in the uploadUri attribute of the reponse, POST to this URI to initiate the import of your uploaded file into the platform.", "type": "string"}}, "type": "object"}, "Object192": {"properties": {"status": {"type": "string"}, "id": {"description": "The ID of the return.", "type": "integer"}}, "type": "object"}, "Object154": {"required": ["name", "source", "remoteHostId", "credentialId"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object96": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "id": {"description": "The object ID.", "type": "integer"}, "state": {"type": "string"}, "name": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object83": {"properties": {"scoredTableName": {"description": "The name of the source table for this prediction.", "type": "string"}, "scoredTables": {"description": "An array of created prediction tables.", "items": {"$ref": "#/definitions/Object84"}, "type": "array"}, "lastRun": {"description": "The last run of this prediction.", "$ref": "#/definitions/Object25"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "items": {"type": "string"}, "type": "array"}, "finishedAt": {"format": "date-time", "description": "The end time of the last run of this prediction.", "type": "string"}, "error": {"description": "The error, if any, of the last run of this prediction.", "type": "string"}, "startedAt": {"format": "date-time", "description": "The start time of the last run of this prediction.", "type": "string"}, "scoredTableId": {"description": "The ID of the source table for this prediction.", "type": "integer"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "id": {"description": "The ID of the prediction.", "type": "integer"}, "modelId": {"description": "The ID of the model used for this prediction.", "type": "integer"}, "outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "schedule": {"description": "The schedule when the prediction will be built.", "$ref": "#/definitions/Object41"}, "state": {"description": "The state of the last run of this prediction.", "type": "string"}}, "type": "object"}, "Object213": {"properties": {"maxMatches": {"type": "integer"}, "threshold": {"type": "string"}}, "type": "object"}, "Object40": {"properties": {"additionalCredentials": {"description": "Array that holds additional credentials used for specific imports. For salesforce imports, the first and only element is the client credential id.", "items": {"type": "integer"}, "type": "array"}, "credentialId": {"type": "integer"}, "name": {"type": "string"}, "remoteHostId": {"type": "integer"}}, "type": "object"}, "Object222": {"required": ["scriptId", "name"], "properties": {"scriptId": {"description": "The id of the script that this template uses.", "type": "integer"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}}, "type": "object"}, "Object133": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "name": {"description": "The name of the container.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "type": {"description": "The type of the script (e.g Container)", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object134"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}}, "type": "object"}, "Object97": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "id": {"description": "The object ID.", "type": "integer"}, "state": {"type": "string"}, "name": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object95": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "finishedAt": {"format": "time", "type": "string"}, "name": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}, "id": {"description": "The object ID.", "type": "integer"}, "state": {"type": "string"}, "type": {"type": "string"}}, "type": "object"}, "Object4": {"properties": {"id": {"type": "integer"}, "name": {"type": "string"}}, "type": "object"}, "Object91": {"properties": {"allObjects": {"items": {"$ref": "#/definitions/Object100"}, "type": "array"}, "surveys": {"items": {"$ref": "#/definitions/Object93"}, "type": "array"}, "updatedAt": {"format": "time", "type": "string"}, "scriptTemplates": {"items": {"$ref": "#/definitions/Object98"}, "type": "array"}, "name": {"description": "The name of this project.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "reports": {"items": {"$ref": "#/definitions/Object97"}, "type": "array"}, "note": {"type": "string"}, "files": {"items": {"$ref": "#/definitions/Object99"}, "type": "array"}, "tables": {"items": {"$ref": "#/definitions/Object92"}, "type": "array"}, "users": {"description": "Users who can see the project", "items": {"$ref": "#/definitions/Object9"}, "type": "array"}, "id": {"description": "The ID for this project.", "type": "integer"}, "author": {"description": "The author of the project.", "$ref": "#/definitions/Object9"}, "imports": {"items": {"$ref": "#/definitions/Object95"}, "type": "array"}, "description": {"description": "A description of the project", "type": "string"}, "autoShare": {"type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "models": {"items": {"$ref": "#/definitions/Object96"}, "type": "array"}, "scripts": {"items": {"$ref": "#/definitions/Object94"}, "type": "array"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object87": {"properties": {"schedule": {"description": "Schedule when the prediction will run.", "$ref": "#/definitions/Object50"}, "scoreOnModelBuild": {"description": "Whether the prediction will run after a rebuild of the associated model.", "type": "boolean"}}, "type": "object"}, "Object85": {"properties": {"minScore": {"format": "float", "description": "The minimum score.", "type": "number"}, "scoreName": {"description": "The name of the score.", "type": "string"}, "maxScore": {"format": "float", "description": "The maximum score.", "type": "number"}, "histogram": {"description": "The histogram of the distribution of scores.", "items": {"type": "integer"}, "type": "array"}, "avgScore": {"format": "float", "description": "The average score.", "type": "number"}}, "type": "object"}, "Object141": {"required": ["name", "sql", "remoteHostId", "credentialId"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object45": {"properties": {"path": {"description": "The schema.tablename to sync to.", "type": "string"}}, "type": "object"}, "Object237": {"properties": {"lastCheckedAnnouncements": {"format": "date-time", "description": "The date and time at which the user last checked their announcements.", "type": "string"}, "preferences": {"description": "A hash of user selected preferences. Values should be strings or null to indicate a key deletion.", "$ref": "#/definitions/Object238"}}, "type": "object"}, "Object210": {"properties": {"targetId": {"description": "Target ID", "type": "integer"}, "sourceTableId": {"description": "Source table", "type": "integer"}, "targetType": {"description": "Target type", "type": "string"}, "job": {"description": "Matching job", "$ref": "#/definitions/Object212"}, "target": {"$ref": "#/definitions/Object211"}}, "type": "object"}, "Object171": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object24": {"properties": {"sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "id": {"description": "The ID of the table.", "type": "integer"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object25"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "lastRefresh": {"format": "date-time", "description": "The time of the last statistics refresh.", "type": "string"}, "sizeMb": {"format": "float", "description": "The size of the table in megabytes.", "type": "number"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}}, "type": "object"}, "Object145": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object146"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object18": {"required": ["type", "username", "password"], "properties": {"remoteHost": {"description": "The remote host associated with the credential.", "$ref": "#/definitions/Object17"}, "username": {"description": "The username for the credential.", "type": "string"}, "name": {"description": "The name identifying the credential.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with the credential.", "type": "integer"}, "description": {"description": "A long description of the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "type": {"type": "string"}}, "type": "object"}, "Object37": {"properties": {"slug": {"description": "The slug for this group.", "type": "string"}, "id": {"description": "The ID of this group.", "type": "integer"}, "organizationId": {"description": "The organization associated with this group.", "type": "integer"}, "name": {"description": "This group's name.", "type": "string"}, "createdAt": {"format": "time", "description": "The date and time when this group was created.", "type": "string"}}, "type": "object"}, "Object38": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object84": {"properties": {"schema": {"description": "The schema of table with created predictions.", "type": "string"}, "scoreStats": {"description": "An array of metrics on the created predictions.", "items": {"$ref": "#/definitions/Object85"}, "type": "array"}, "id": {"description": "The ID of the table with created predictions.", "type": "integer"}, "name": {"description": "The name of table with created predictions.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The time when the table with created predictions was created.", "type": "string"}}, "type": "object"}, "Object161": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object118": {"properties": {"name": {"description": "The name of the type.", "type": "string"}}, "type": "object"}, "Object216": {"properties": {"category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "updatedAt": {"format": "time", "type": "string"}, "name": {"description": "The name of the template.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "id": {"type": "integer"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "author": {"description": "The author of the template.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object19": {"required": ["url", "remoteHostType", "username", "password"], "properties": {"username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "url": {"description": "The URL to your host.", "type": "string"}, "remoteHostType": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}}, "type": "object"}, "Object39": {"properties": {"timeZone": {"description": "The time zone of this import.", "type": "string"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object25"}, "syncs": {"description": "List of syncs.", "items": {"$ref": "#/definitions/Object43"}, "type": "array"}, "name": {"description": "The name of the import.", "type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "isOutbound": {"type": "boolean"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object40"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object40"}, "id": {"description": "The ID for the import.", "type": "integer"}, "user": {"$ref": "#/definitions/Object9"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, and Salesforce.", "type": "string"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "updatedAt": {"format": "date-time", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object41"}, "state": {"type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "type": "object"}, "Object98": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "id": {"description": "The object ID.", "type": "integer"}, "name": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object79": {"properties": {"schedule": {"description": "The schedule of when the model will run.", "$ref": "#/definitions/Object41"}, "id": {"description": "The ID of the model associated with this schedule.", "type": "integer"}}, "type": "object"}, "Object90": {"required": ["name", "description"], "properties": {"description": {"description": "A description of the project", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "note": {"description": "Notes for the project", "type": "string"}, "name": {"description": "The name of this project.", "type": "string"}}, "type": "object"}, "Object82": {"properties": {"scoredTableName": {"description": "The name of the source table for this prediction.", "type": "string"}, "lastRun": {"description": "The last run of this prediction.", "$ref": "#/definitions/Object25"}, "id": {"description": "The ID of the prediction.", "type": "integer"}, "finishedAt": {"format": "date-time", "description": "The end time of the last run of this prediction.", "type": "string"}, "modelId": {"description": "The ID of the model used for this prediction.", "type": "integer"}, "outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "error": {"description": "The error, if any, of the last run of this prediction.", "type": "string"}, "startedAt": {"format": "date-time", "description": "The start time of the last run of this prediction.", "type": "string"}, "state": {"description": "The state of the last run of this prediction.", "type": "string"}, "scoredTableId": {"description": "The ID of the source table for this prediction.", "type": "integer"}}, "type": "object"}, "Object8": {"properties": {"projectId": {"description": "The id of the project collecting all the objects that belong to this app instance.", "type": "integer"}, "id": {"description": "The unique id of the instance.", "type": "integer"}, "name": {"description": "The name of the instance.", "type": "string"}, "reportId": {"description": "The id of the report the instance belongs to.", "type": "integer"}, "createdAt": {"format": "time", "description": "The time the instance was created at.", "type": "string"}, "authCodeUrl": {"type": "string"}, "apiKey": {"description": "A Civis API key that can be used by this app instance.", "type": "string"}, "appReleaseId": {"description": "The id of the app release the instance belongs to.", "type": "integer"}, "user": {"$ref": "#/definitions/Object9"}}, "type": "object"}, "Object108": {"properties": {"url": {"description": "The URL for remote host.", "type": "string"}, "id": {"description": "The ID of the remote host.", "type": "integer"}, "type": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}, "name": {"description": "The name of the remote host.", "type": "string"}}, "type": "object"}, "Object0": {"properties": {"id": {"description": "The ID of this announcement", "type": "integer"}, "createdAt": {"format": "date-time", "type": "string"}, "updatedAt": {"format": "date-time", "type": "string"}, "releasedAt": {"format": "date-time", "description": "The date and time this announcement was released.", "type": "string"}, "body": {"description": "The body of this announcement.", "type": "string"}, "subject": {"description": "The subject of this announcement.", "type": "string"}}, "type": "object"}, "Object117": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object147": {"required": ["name", "source"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object144"}, "source": {"description": "The body/text of the script.", "type": "string"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object93": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object114": {"properties": {"tableauId": {"type": "integer"}, "authThumbnailUrl": {"description": "URL for a thumbnail of the report.", "type": "string"}, "script": {"description": "The ID, name, and raw SQL of the script that backs this report.", "$ref": "#/definitions/Object113"}, "provideAPIKey": {"description": "Whether the report requests an API Key from the report viewer.", "type": "boolean"}, "createdAt": {"format": "time", "type": "string"}, "apiKey": {"description": "A Civis API key that can be used by this report.", "type": "string"}, "apiKeyId": {"description": "The ID of the API key. Can be used for auditing API use by this report.", "type": "integer"}, "projects": {"description": "A list of projects containing the report.", "items": {"$ref": "#/definitions/Object112"}, "type": "array"}, "id": {"description": "The ID of this report.", "type": "integer"}, "appState": {"description": "Any application state blob for this report.", "additionalProperties": {"type": "string"}, "type": "object"}, "lastRun": {"description": "The last run of the script backing this report.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "type": "string"}, "name": {"description": "The name of the report.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the report's last run finished.", "type": "string"}, "vizUpdatedAt": {"format": "time", "description": "The time that the report's visualization was last updated.", "type": "string"}, "config": {"description": "Any configuration metadata for this report.", "type": "string"}, "authDataUrl": {"type": "string"}, "authCodeUrl": {"type": "string"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "validOutputFile": {"description": "Whether the script that backs the report currently has a valid output file.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "user": {"description": "The name of the author of this report.", "$ref": "#/definitions/Object9"}, "state": {"description": "The status of the report's last run.", "type": "string"}}, "type": "object"}, "Object10": {"properties": {"updatedAt": {"format": "time", "description": "The last modification time for this code.", "type": "string"}, "id": {"description": "The ID for this code.", "type": "integer"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, "name": {"description": "Name of code.", "type": "string"}, "createdAt": {"format": "time", "description": "The creation time for this code.", "type": "string"}}, "type": "object"}, "Object158": {"properties": {"lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "type": {"description": "The type of the script (e.g Custom)", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "id": {"description": "The ID for the script.", "type": "integer"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object180": {"properties": {"id": {"type": "integer"}, "name": {"type": "string"}}, "type": "object"}, "Object138": {"properties": {"lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}, "id": {"description": "The ID for the script.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}}, "type": "object"}, "Object136": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object128"}, "type": "array"}, "name": {"description": "The name of the container.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object137"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}}, "type": "object"}, "Object113": {"properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}}, "type": "object"}, "Object33": {"properties": {"expiresAt": {"format": "date-time", "description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string"}, "uploadUrl": {"description": "The URL that may be used to upload a file. To use the upload URL, initiate a POST request to the given URL with the file you wish to import as the \"file\" form field.", "type": "string"}, "id": {"description": "The ID of the file object.", "type": "integer"}, "name": {"description": "The file name.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The date and time the file was created.", "type": "string"}, "fileSize": {"description": "The file size.", "type": "integer"}, "uploadFields": {"description": "A hash containing the form fields to be included with the POST request.", "type": "object"}}, "type": "object"}, "Object160": {"properties": {"name": {"description": "The name of the script.", "type": "string"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "codePreview": {"description": "The code that this script will run with arguments inserted.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "type": {"description": "The type of the script (e.g Custom)", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object188": {"properties": {"id": {"type": "integer"}, "shortName": {"type": "string"}, "title": {"type": "string"}}, "type": "object"}, "Object176": {"properties": {"schema": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "Object157": {"properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object128"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object75": {"properties": {"interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object50"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "modelName": {"description": "The name of the model.", "type": "string"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "items": {"type": "string"}, "type": "array"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "description": {"description": "A description of the model.", "type": "string"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "items": {"type": "string"}, "type": "array"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}}, "type": "object"}, "Object47": {"properties": {"lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "date-time", "type": "string"}, "name": {"description": "The name of the import.", "type": "string"}, "createdAt": {"format": "date-time", "type": "string"}, "isOutbound": {"type": "boolean"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object40"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object40"}, "id": {"description": "The ID for the import.", "type": "integer"}, "user": {"$ref": "#/definitions/Object9"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, and Salesforce.", "type": "string"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object41"}, "state": {"type": "string"}}, "type": "object"}, "Object111": {"properties": {"tableauId": {"type": "integer"}, "authThumbnailUrl": {"description": "URL for a thumbnail of the report.", "type": "string"}, "updatedAt": {"format": "time", "type": "string"}, "name": {"description": "The name of the report.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the report's last run finished.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "projects": {"description": "A list of projects containing the report.", "items": {"$ref": "#/definitions/Object112"}, "type": "array"}, "vizUpdatedAt": {"format": "time", "description": "The time that the report's visualization was last updated.", "type": "string"}, "lastRun": {"description": "The last run of the script backing this report.", "$ref": "#/definitions/Object25"}, "id": {"description": "The ID of this report.", "type": "integer"}, "script": {"description": "The ID, name, and raw SQL of the script that backs this report.", "$ref": "#/definitions/Object113"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "user": {"description": "The name of the author of this report.", "$ref": "#/definitions/Object9"}, "state": {"description": "The status of the report's last run.", "type": "string"}}, "type": "object"}, "Object56": {"required": ["name", "syncType", "isOutbound"], "properties": {"nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object49"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, and Salesforce.", "type": "string"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "isOutbound": {"type": "boolean"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object49"}}, "type": "object"}, "Object177": {"properties": {"tableName": {"type": "string"}, "schema": {"type": "string"}, "metadata": {"type": "object"}, "serverName": {"type": "string"}, "uniqueId": {"type": "string"}, "sampleTableId": {"type": "integer"}}, "type": "object"}, "Object196": {"required": ["databaseId", "schema", "name", "data"], "properties": {"schema": {"description": "The destination schema name.", "type": "string"}, "databaseId": {"description": "The ID of the destination database.", "type": "integer"}, "data": {"description": "The file to import, uploaded using HTTP multipart.", "type": "string"}, "name": {"description": "The destination table name, without the schema prefix.", "type": "string"}}, "type": "object"}, "Object126": {"properties": {"runs": {"description": "The runs link to get the run information list for this script.", "type": "string"}, "details": {"description": "The details link to get more information about the script.", "type": "string"}}, "type": "object"}, "Object2": {"properties": {"users": {"items": {"$ref": "#/definitions/Object3"}, "type": "array"}, "groups": {"items": {"$ref": "#/definitions/Object4"}, "type": "array"}}, "type": "object"}, "Object175": {"properties": {"id": {"type": "integer"}, "sampleTable": {"$ref": "#/definitions/Object176"}}, "type": "object"}, "Object116": {"properties": {"templateId": {"description": "The ID of the template used for this report. If null is passed, no template will back this report. Changes to the backing template will reset the report appState.", "type": "integer"}, "appState": {"description": "The application state blob for this report.", "additionalProperties": {"type": "string"}, "type": "object"}, "provideAPIKey": {"description": "Allow the report to provide an API key to front-end code.", "type": "boolean"}, "name": {"description": "The name of the report.", "type": "string"}, "config": {"type": "string"}, "scriptId": {"description": "The ID of the script used to create this report.", "type": "integer"}, "codeBody": {"description": "The code for the report visualization.", "type": "string"}}, "type": "object"}, "Object23": {"properties": {"schema": {"description": "The name of a schema.", "type": "string"}}, "type": "object"}, "Object163": {"properties": {"message": {"description": "The log message.", "type": "string"}, "level": {"description": "The level of the log. One of unknown,fatal,error,warn,info,debug.", "type": "string"}, "id": {"description": "The ID of the log.", "type": "integer"}, "createdAt": {"format": "date-time", "description": "The time the log was created.", "type": "string"}}, "type": "object"}, "Object20": {"properties": {"duration": {"description": "The number of seconds the temporary credential should be valid. Defaults to 15 minutes. Must not be less than 15 minutes or greater than 36 hours.", "type": "integer"}}, "type": "object"}, "Object46": {"properties": {"columnDelimiter": {"type": "string"}, "distkey": {"type": "string"}, "contactLists": {"type": "string"}, "wipeDestinationTable": {"type": "boolean"}, "partitionTablePartitionColumnMaxName": {"type": "string"}, "mysqlCatalogMatchesSchema": {"type": "boolean"}, "partitionTableName": {"type": "string"}, "firstRowIsHeader": {"type": "boolean"}, "soqlQuery": {"type": "string"}, "partitionTablePartitionColumnMinName": {"type": "string"}, "verifyTableRowCounts": {"type": "boolean"}, "lastModifiedColumn": {"type": "string"}, "truncateLongLines": {"type": "boolean"}, "existingTableRows": {"type": "string"}, "identityColumn": {"type": "string"}, "partitionSchemaName": {"type": "string"}, "invalidCharReplacement": {"type": "string"}, "rowChunkSize": {"type": "integer"}, "sortkey1": {"type": "string"}, "partitionColumnName": {"type": "string"}, "maxErrors": {"type": "integer"}, "sortkey2": {"type": "string"}, "exportAction": {"type": "string"}}, "type": "object"}, "Object57": {"properties": {"runId": {"description": "The ID of the new run triggered.", "type": "integer"}}, "type": "object"}, "Object107": {"properties": {"hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "updatedAt": {"format": "time", "type": "string"}, "name": {"description": "The name of the query.", "type": "string"}, "finishedAt": {"format": "date-time", "description": "The end time of the last run.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "startedAt": {"format": "date-time", "description": "The start time of the last run.", "type": "string"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "resultColumns": {"description": "A preview of columns returned by the query.", "items": {"type": "string"}, "type": "array"}, "id": {"description": "The query ID.", "type": "integer"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "items": {"items": {"type": "string"}, "type": "array"}, "type": "array"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "state": {"description": "The state of the last run.", "type": "string"}, "author": {"description": "The author of the query.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object170": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object29": {"required": ["subnetMask"], "properties": {"subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}}, "type": "object"}, "Object225": {"properties": {"archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "name": {"description": "The name of the template.", "type": "string"}}, "type": "object"}, "Object135": {"required": ["requiredResources", "dockerCommand", "dockerImageName"], "properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "name": {"description": "The name of the container.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object132"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}}, "type": "object"}, "Object15": {"properties": {"username": {"description": "The username for the credential.", "type": "string"}, "id": {"description": "The ID of the credential.", "type": "integer"}, "owner": {"description": "The name of the user who this credential belongs to.", "type": "string"}, "name": {"description": "The name identifying the credential", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with this credential.", "type": "integer"}, "description": {"description": "A long description of the credential.", "type": "string"}, "remoteHostName": {"description": "The name of the remote host associated with this credential.", "type": "string"}, "createdAt": {"format": "time", "description": "The creation time for this credential.", "type": "string"}, "updatedAt": {"format": "time", "description": "The last modification time for this credential.", "type": "string"}, "type": {"description": "The credential's type.", "type": "string"}}, "type": "object"}, "Object156": {"required": ["name", "source", "remoteHostId", "credentialId"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object65": {"properties": {"triggerEmail": {"description": "Email address which may be used to trigger this job to run.", "type": "string"}}, "type": "object"}, "Object100": {"properties": {"icon": {"type": "string"}, "projectId": {"type": "integer"}, "objectType": {"type": "string"}, "name": {"type": "string"}, "fcoType": {"type": "string"}, "objectId": {"type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "author": {"type": "string"}}, "type": "object"}, "Object214": {"properties": {"description": {"description": "The user-defined description of the table.", "type": "string"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "additionalProperties": {"type": "string"}, "type": "object"}}, "type": "object"}, "Object165": {"properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "pythonId": {"description": "The ID of the python.", "type": "integer"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}, "Object5": {"required": ["userIds", "permissionLevel"], "properties": {"permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "userIds": {"description": "An array of one or more user IDs", "items": {"type": "integer"}, "type": "array"}}, "type": "object"}, "Object211": {"properties": {"name": {"type": "string"}}, "type": "object"}, "Object49": {"required": ["remoteHostId", "credentialId"], "properties": {"additionalCredentials": {"description": "Array that holds additional credentials used for specific imports. For salesforce imports, the first and only element is the client credential id.", "items": {"type": "integer"}, "type": "array"}, "credentialId": {"type": "integer"}, "remoteHostId": {"type": "integer"}}, "type": "object"}, "Object131": {"required": ["requiredResources", "dockerCommand", "dockerImageName"], "properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "name": {"description": "The name of the container.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object132"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}}, "type": "object"}, "Object184": {"properties": {"sampleSchemaTable": {"type": "string"}, "id": {"description": "Survey ID", "type": "integer"}, "vendor": {"$ref": "#/definitions/Object185"}}, "type": "object"}, "Object30": {"properties": {"lastRun": {"description": "The last run of this export.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The last modification time for this export.", "type": "string"}, "author": {"description": "The author of the export.", "$ref": "#/definitions/Object9"}, "name": {"description": "The name of this export.", "type": "string"}, "createdAt": {"format": "time", "description": "The creation time for this export.", "type": "string"}, "id": {"description": "The ID for this export.", "type": "integer"}, "state": {"type": "string"}, "type": {"description": "The type of export.", "type": "string"}}, "type": "object"}, "Object119": {"properties": {"id": {"description": "The ID of this run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time that this run finished.", "type": "string"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "output": {"description": "A list of the outputs of this script.", "items": {"$ref": "#/definitions/Object120"}, "type": "array"}, "state": {"description": "The state of this run.", "type": "string"}, "sqlId": {"description": "The ID of this sql.", "type": "integer"}}, "type": "object"}, "Object233": {"required": ["constraintType"], "properties": {"patchAllowed": {"description": "Whether the constraint allows PATCH requests.", "type": "boolean"}, "headAllowed": {"description": "Whether the constraint allows HEAD requests.", "type": "boolean"}, "postAllowed": {"description": "Whether the constraint allows POST requests.", "type": "boolean"}, "getAllowed": {"description": "Whether the constraint allows GET requests.", "type": "boolean"}, "constraintType": {"description": "The type of constraint (exact/prefix/regex/verb).", "type": "string"}, "constraint": {"description": "The path matcher of the constraint.", "type": "string"}, "deleteAllowed": {"description": "Whether the constraint allows DELETE requests.", "type": "boolean"}, "putAllowed": {"description": "Whether the constraint allows PUT requests.", "type": "boolean"}}, "type": "object"}, "Object172": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object78": {"required": ["tableName", "primaryKey"], "properties": {"outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "schedule": {"description": "The schedule of when the prediction will run.", "$ref": "#/definitions/Object50"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "Object226": {"properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "name": {"description": "The name of this user.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The date and time when the user was created.", "type": "string"}, "groups": {"description": "An array of all the groups this user is in.", "items": {"$ref": "#/definitions/Object227"}, "type": "array"}, "user": {"description": "The username of this user.", "type": "string"}, "currentSignInAt": {"format": "date-time", "description": "The date and time when the user's current session began.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}}, "type": "object"}, "Object215": {"properties": {"sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "additionalProperties": {"type": "string"}, "type": "object"}, "name": {"description": "Name of the table.", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "id": {"description": "The ID of the table.", "type": "integer"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object25"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "lastRefresh": {"format": "date-time", "description": "The time of the last statistics refresh.", "type": "string"}, "sizeMb": {"format": "float", "description": "The size of the table in megabytes.", "type": "number"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}}, "type": "object"}, "Object199": {"properties": {"sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "id": {"description": "The ID of the enhancement.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}}, "type": "object"}, "Object73": {"properties": {"interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "currentBuildException": {"description": "Exception message, if applicable, of the current model build.", "type": "string"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "currentBuildState": {"description": "The status of the current model build. One of \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The time the model was created.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "items": {"type": "string"}, "type": "array"}, "lastRun": {"description": "The last run of this model build.", "$ref": "#/definitions/Object25"}, "id": {"description": "The ID of the model.", "type": "integer"}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object41"}, "modelName": {"description": "The name of the model.", "type": "string"}, "predictions": {"description": "The tables upon which the model will be applied.", "items": {"$ref": "#/definitions/Object74"}, "type": "array"}, "builds": {"description": "A list of trained models available for making predictions.", "items": {"$ref": "#/definitions/Object71"}, "type": "array"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "updatedAt": {"format": "date-time", "description": "The time the model was updated.", "type": "string"}, "lastOutputLocation": {"description": "The output JSON for the last build.", "type": "string"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "items": {"type": "string"}, "type": "array"}, "description": {"description": "A description of the model.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "user": {"$ref": "#/definitions/Object9"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}}, "type": "object"}, "Object200": {"properties": {"performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}}, "type": "object"}, "Object105": {"required": ["database", "sql", "previewRows"], "properties": {"database": {"description": "The database ID.", "type": "integer"}, "compression": {"description": "The type of compression. One of gzip or zip, or none [default: gzip].", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "columnDelimiter": {"description": "The delimiter to use. One of comma or tab, or pipe [default: comma].", "type": "string"}, "includeHeader": {"description": "Whether the CSV output should include a header row [default: true].", "type": "boolean"}, "unquoted": {"description": "If true, will not quote fields.", "type": "boolean"}, "filenamePrefix": {"description": "The output filename prefix.", "type": "string"}, "interactive": {"description": "Deprecated and not used.", "type": "boolean"}, "credential": {"description": "The credential ID.", "type": "integer"}}, "type": "object"}, "Object94": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "finishedAt": {"format": "time", "type": "string"}, "name": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}, "id": {"description": "The object ID.", "type": "integer"}, "state": {"type": "string"}, "type": {"type": "string"}}, "type": "object"}, "Object134": {"properties": {"memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "diskSpace": {"format": "float", "description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number"}}, "type": "object"}, "Object208": {"properties": {"updatedAt": {"format": "time", "type": "string"}, "rightTableId": {"type": "integer"}, "leftJoin": {"type": "boolean"}, "createdAt": {"format": "time", "type": "string"}, "id": {"type": "integer"}, "leftTableId": {"type": "integer"}, "leftIdentifier": {"type": "string"}, "on": {"type": "string"}, "rightIdentifier": {"type": "string"}}, "type": "object"}, "Object34": {"properties": {"expiresAt": {"format": "date-time", "description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string"}, "id": {"description": "The ID of the file object.", "type": "integer"}, "name": {"description": "The file name.", "type": "string"}, "createdAt": {"format": "date-time", "description": "The date and time the file was created.", "type": "string"}, "fileUrl": {"description": "The URL that may be used to download the file.", "type": "string"}, "downloadUrl": {"description": "A JSON string containing information about the URL of the file.", "type": "string"}, "fileSize": {"description": "The file size.", "type": "integer"}}, "type": "object"}, "Object101": {"properties": {"description": {"description": "A description of the project", "type": "string"}, "note": {"description": "Notes for the project", "type": "string"}, "name": {"description": "The name of this project.", "type": "string"}}, "type": "object"}, "Object151": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object146"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object6": {"required": ["groupIds", "permissionLevel"], "properties": {"groupIds": {"description": "An array of one or more group IDs", "items": {"type": "integer"}, "type": "array"}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}}, "type": "object"}, "Object179": {"properties": {"remoteHost": {"$ref": "#/definitions/Object180"}, "uniqueId": {"type": "string"}, "contactabilityColumns": {"items": {"$ref": "#/definitions/Object182"}, "type": "array"}, "id": {"type": "integer"}, "name": {"type": "string"}, "sourceTable": {"$ref": "#/definitions/Object176"}, "audienceColumns": {"items": {"$ref": "#/definitions/Object181"}, "type": "array"}, "updatedAt": {"format": "time", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "bucketColumns": {"items": {"$ref": "#/definitions/Object181"}, "type": "array"}}, "type": "object"}, "Object191": {"properties": {"other": {"type": "integer"}, "dials": {"type": "integer"}, "completes": {"type": "integer"}, "earlyTermination": {"type": "integer"}, "id": {"type": "integer"}, "matchedCompletes": {"type": "integer"}, "refusals": {"type": "integer"}, "status": {"type": "string"}, "matches": {"type": "integer"}}, "type": "object"}, "Object7": {"required": ["status"], "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "type": "object"}, "Object109": {"properties": {"username": {"description": "The user name for remote host.", "type": "string"}, "password": {"description": "The password for remote host.", "type": "string"}, "credentialId": {"description": "The credential ID.", "type": "integer"}}, "type": "object"}, "Object142": {"properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object128"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object92": {"properties": {"columnCount": {"type": "integer"}, "schema": {"type": "string"}, "name": {"type": "string"}, "createdAt": {"format": "time", "type": "string"}, "updatedAt": {"format": "time", "type": "string"}, "rowCount": {"type": "integer"}}, "type": "object"}, "Object44": {"properties": {"path": {"description": "The path of the dataset to sync from; for a database source, schema.tablename.", "type": "string"}, "id": {"description": "The ID of the table or file, if available.", "type": "integer"}}, "type": "object"}, "Object17": {"required": ["name", "url", "type"], "properties": {"url": {"description": "The URL to your host.", "type": "string"}, "type": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}, "name": {"description": "The human readable name for the remote host.", "type": "string"}}, "type": "object"}, "Object120": {"properties": {"path": {"description": "The temporary link to download this output file, valid for 36 hours.", "type": "string"}, "outputName": {"description": "The name of the output file.", "type": "string"}}, "type": "object"}, "Object71": {"properties": {"rSquaredError": {"format": "float", "description": "A key metric for continuous models. Nil for other model types.", "type": "number"}, "id": {"description": "The ID of the model build.", "type": "integer"}, "name": {"description": "The name of the model build.", "type": "string"}, "createdAt": {"description": "The time the model build was created.", "type": "string"}, "description": {"description": "A description of the model build.", "type": "string"}, "rocAuc": {"format": "float", "description": "A key metric for binary, multinomial, and ordinal models. Nil for other model types.", "type": "number"}, "rootMeanSquaredError": {"format": "float", "description": "A key metric for continuous models. Nil for other model types.", "type": "number"}}, "type": "object"}, "Object112": {"properties": {"id": {"description": "The ID for the project.", "type": "integer"}, "name": {"description": "The name of the project.", "type": "string"}}, "type": "object"}, "Object186": {"properties": {"rollupJobId": {"type": "integer"}, "id": {"description": "Survey ID", "type": "integer"}, "vendor": {"$ref": "#/definitions/Object185"}, "scriptVersion": {"$ref": "#/definitions/Object187"}, "metadata": {"description": "Metadata", "type": "object"}, "returns": {"description": "List of survey returns", "items": {"$ref": "#/definitions/Object191"}, "type": "array"}, "sample": {"description": "Table containing survey sample and metadata", "$ref": "#/definitions/Object178"}, "sampleSchemaTable": {"type": "string"}}, "type": "object"}, "Object21": {"properties": {"secretAccessKey": {"description": "The secret part of the credential.", "type": "string"}, "accessKey": {"description": "The identifier of the credential.", "type": "string"}, "sessionToken": {"description": "The session token identifier.", "type": "string"}}, "type": "object"}, "Object26": {"properties": {"sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "id": {"description": "The ID of the table.", "type": "integer"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object25"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "lastRefresh": {"format": "date-time", "description": "The time of the last statistics refresh.", "type": "string"}, "sizeMb": {"format": "float", "description": "The size of the table in megabytes.", "type": "number"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "columnNames": {"description": "The names of each column in the table.", "items": {"type": "string"}, "type": "array"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}}, "type": "object"}, "Object228": {"properties": {"username": {"description": "This user's username.", "type": "string"}, "lastCheckedAnnouncements": {"format": "date-time", "description": "The date and time at which the user last checked their announcements.", "type": "string"}, "id": {"description": "The ID of this user.", "type": "integer"}, "preferences": {"description": "This user's preferences.", "additionalProperties": {"type": "string"}, "type": "object"}, "name": {"description": "This user's name.", "type": "string"}, "groups": {"description": "An array of all the groups this user is in.", "items": {"$ref": "#/definitions/Object227"}, "type": "array"}, "featureFlags": {"description": "The feature flag settings for this user.", "additionalProperties": {"type": "boolean"}, "type": "object"}, "customBranding": {"description": "The branding of Platform for this user.", "type": "string"}, "initials": {"description": "This user's initials.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}}, "type": "object"}, "Object104": {"properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "queryId": {"description": "The ID of the query.", "type": "integer"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}, "Object58": {"required": ["source", "destination"], "properties": {"destination": {"$ref": "#/definitions/Object60"}, "advancedOptions": {"$ref": "#/definitions/Object61"}, "source": {"$ref": "#/definitions/Object59"}}, "type": "object"}, "Object203": {"properties": {"matchTableId": {"description": "The ID of the Dynamo table to match against.", "type": "integer"}, "id": {"description": "The ID of the enhancement.", "type": "integer"}, "threshold": {"format": "float", "description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}}, "type": "object"}, "Object221": {"properties": {"archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "id": {"type": "integer"}, "name": {"description": "The name of the template.", "type": "string"}, "createdAt": {"format": "time", "type": "string"}, "scriptId": {"description": "The id of the script that this template uses.", "type": "integer"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "updatedAt": {"format": "time", "type": "string"}}, "type": "object"}, "Object128": {"properties": {"default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "name": {"description": "The variable's name as used within your code.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}}, "type": "object"}, "Object43": {"properties": {"destination": {"$ref": "#/definitions/Object45"}, "id": {"type": "integer"}, "advancedOptions": {"$ref": "#/definitions/Object46"}, "source": {"$ref": "#/definitions/Object44"}}, "type": "object"}, "Object140": {"properties": {"targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object125"}, "type": "array"}, "createdAt": {"format": "time", "description": "The time this script was created.", "type": "string"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "projects": {"description": "A list of projects containing the script.", "items": {"$ref": "#/definitions/Object124"}, "type": "array"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "id": {"description": "The ID for the script.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object41"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object25"}, "updatedAt": {"format": "time", "description": "The time the script was last updated.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "finishedAt": {"format": "time", "description": "The time that the script's last run finished.", "type": "string"}, "codePreview": {"description": "The code that this script will run with arguments inserted.", "type": "string"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object9"}, "expandedArguments": {"description": "Expanded arguments for use in injecting into different environments.", "type": "object"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object126"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object42"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object9"}}, "type": "object"}, "Object152": {"required": ["name", "source"], "properties": {"params": {"description": "A definition of the parameters this script accepts in the arguments field.", "items": {"$ref": "#/definitions/Object122"}, "type": "array"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "name": {"description": "The name of the script.", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object144"}, "source": {"description": "The body/text of the script.", "type": "string"}, "nextRunAt": {"format": "time", "description": "The time of the next scheduled run.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object51"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object50"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}, "type": "object"}, "Object193": {"properties": {"surveyId": {"description": "The ID of the survey.", "type": "integer"}, "id": {"description": "The ID of the return.", "type": "integer"}, "databaseTableId": {"description": "Table containing imported survey return", "type": "integer"}, "fileId": {"description": "The ID of the file object.", "type": "integer"}, "s3Uri": {"description": "URI of the S3 file", "type": "string"}, "metadata": {"type": "object"}, "status": {"type": "string"}, "customImportJobId": {"type": "integer"}}, "type": "object"}, "Object110": {"properties": {"fullPath": {"description": "Boolean that indicates whether further querying needs to be done before the table can be selected.", "type": "boolean"}, "name": {"description": "The path to a data_set.", "type": "string"}}, "type": "object"}, "Object168": {"properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"format": "time", "description": "The time the last run completed.", "type": "string"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}, "customId": {"description": "The ID of the custom.", "type": "integer"}, "startedAt": {"format": "time", "description": "The time the last run started at.", "type": "string"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}}, "type": "object"}}}